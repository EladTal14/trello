[{"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\index.js":"1","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\App.jsx":"2","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\serviceWorkerRegistration.js":"3","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\reportWebVitals.js":"4","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\store.js":"5","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\reducers\\boardReducer.js":"6","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\Home.jsx":"7","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\AppHeader.jsx":"8","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\Boards.jsx":"9","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\BoardApp.jsx":"10","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\actions\\boardAction.js":"11","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\boardService.js":"12","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardPreview.jsx":"13","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\utilService.js":"14","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardFilter.jsx":"15","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\eventBusService.js":"16","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\reducers\\cardReducer.js":"17","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\actions\\cardAction.js":"18","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\cardService.js":"19","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\ChangeBackground.jsx":"20","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\BoardPhotos.jsx":"21","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\BoardColors.jsx":"22","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupList.jsx":"23","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\BoardHeader.jsx":"24","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupAdd.jsx":"25","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardDetails.jsx":"26","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupPreview.jsx":"27","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardList.jsx":"28","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardInfo.jsx":"29","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardHeader.jsx":"30","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardSide.jsx":"31","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardPreview.jsx":"32","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupTitle.jsx":"33","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardAdd.jsx":"34","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardActivityContainer.jsx":"35","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardChecklist.jsx":"36","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardPreviewBottom.jsx":"37","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardPreviewLabel.jsx":"38","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\httpService.js":"39","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\DatePicker.jsx":"40","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\DatePickersVariants.jsx":"41","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardLabels.jsx":"42","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardCover.jsx":"43","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\cloudinaryService.js":"44"},{"size":1014,"mtime":1610563620587,"results":"45","hashOfConfig":"46"},{"size":915,"mtime":1610777853897,"results":"47","hashOfConfig":"46"},{"size":5064,"mtime":1610563620594,"results":"48","hashOfConfig":"46"},{"size":364,"mtime":1610563620592,"results":"49","hashOfConfig":"46"},{"size":593,"mtime":1610706661903,"results":"50","hashOfConfig":"46"},{"size":886,"mtime":1610715739680,"results":"51","hashOfConfig":"46"},{"size":0,"mtime":1610563620590,"results":"52","hashOfConfig":"46"},{"size":670,"mtime":1610647991236,"results":"53","hashOfConfig":"46"},{"size":1514,"mtime":1610777853931,"results":"54","hashOfConfig":"46"},{"size":4593,"mtime":1610827526896,"results":"55","hashOfConfig":"46"},{"size":1562,"mtime":1610777853937,"results":"56","hashOfConfig":"46"},{"size":3022,"mtime":1610788411888,"results":"57","hashOfConfig":"46"},{"size":321,"mtime":1610777853909,"results":"58","hashOfConfig":"46"},{"size":1703,"mtime":1610807389491,"results":"59","hashOfConfig":"46"},{"size":767,"mtime":1610636692521,"results":"60","hashOfConfig":"46"},{"size":386,"mtime":1610706661888,"results":"61","hashOfConfig":"46"},{"size":441,"mtime":1610866343010,"results":"62","hashOfConfig":"46"},{"size":597,"mtime":1610866343008,"results":"63","hashOfConfig":"46"},{"size":356,"mtime":1610866343004,"results":"64","hashOfConfig":"46"},{"size":913,"mtime":1610866342966,"results":"65","hashOfConfig":"46"},{"size":2011,"mtime":1610866342964,"results":"66","hashOfConfig":"46"},{"size":1919,"mtime":1610866342958,"results":"67","hashOfConfig":"46"},{"size":325,"mtime":1610866342995,"results":"68","hashOfConfig":"46"},{"size":4109,"mtime":1610866342963,"results":"69","hashOfConfig":"46"},{"size":2140,"mtime":1610866342994,"results":"70","hashOfConfig":"46"},{"size":5647,"mtime":1610876206598,"results":"71","hashOfConfig":"46"},{"size":1534,"mtime":1610866342999,"results":"72","hashOfConfig":"46"},{"size":1198,"mtime":1610866342982,"results":"73","hashOfConfig":"46"},{"size":2229,"mtime":1610866342978,"results":"74","hashOfConfig":"46"},{"size":646,"mtime":1610866342976,"results":"75","hashOfConfig":"46"},{"size":3256,"mtime":1610880791954,"results":"76","hashOfConfig":"46"},{"size":2397,"mtime":1610876258226,"results":"77","hashOfConfig":"46"},{"size":2584,"mtime":1610866343002,"results":"78","hashOfConfig":"46"},{"size":2164,"mtime":1610866342971,"results":"79","hashOfConfig":"46"},{"size":1951,"mtime":1610866707995,"results":"80","hashOfConfig":"46"},{"size":4397,"mtime":1610866342973,"results":"81","hashOfConfig":"46"},{"size":1415,"mtime":1610866342986,"results":"82","hashOfConfig":"46"},{"size":916,"mtime":1610866342991,"results":"83","hashOfConfig":"46"},{"size":1067,"mtime":1610866343006,"results":"84","hashOfConfig":"46"},{"size":4216,"mtime":1610881204632,"results":"85","hashOfConfig":"46"},{"size":1507,"mtime":1610866827175,"results":"86","hashOfConfig":"46"},{"size":595,"mtime":1610881204630,"results":"87","hashOfConfig":"46"},{"size":2000,"mtime":1610880181195,"results":"88","hashOfConfig":"46"},{"size":531,"mtime":1610868218441,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1r2lh0i",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\index.js",[],["184","185"],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\App.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\serviceWorkerRegistration.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\reportWebVitals.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\store.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\Home.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\AppHeader.jsx",["186"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nexport function AppHeader(props) {\n  return (\n    <header className=\"app-header flex space-between\">\n      <h1>Tello header</h1>\n      <nav>\n        <ul className=\"header-list flex justify-center\">\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/boards\">Boards</Link></li>\n          <li><Link to=\"/board\">Board</Link></li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\n// const mapStateToProps = (state) => ({\n\n// })\n\n// const mapDispatchToProps = {\n\n// }\n\n// export const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)\n","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\Boards.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\BoardApp.jsx",["187"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ScrollContainer from 'react-indiana-drag-scroll'\nimport { loadBoard, saveBoard } from '../store/actions/boardAction'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport { BoardHeader } from '../cmps/BoardHeader/BoardHeader'\nimport { GroupList } from '../cmps/Group/GroupList'\nimport { GroupAdd } from '../cmps/Group/GroupAdd'\nimport { CardDetails } from '../cmps/Card/CardDetails'\nimport { boardService } from '../services/boardService'\nimport { eventBusService } from '../services/eventBusService.js'\n\nexport class _BoardApp extends Component {\n\n    state = {\n        isDetailsShown: false\n    }\n\n    componentDidMount() {\n        this.loadBoard()\n        this.eventBusTerminate = eventBusService.on('show-details', this.toggleDetails)\n\n    }\n    check = (ev) => { console.log(ev); }\n    componentWillUnmount() {\n        this.eventBusTerminate()\n    }\n\n    loadBoard = async () => {\n        const { boardId } = this.props.match.params\n        await this.props.loadBoard(boardId)\n    }\n\n    onAddGroup = async (group) => {\n        const { board } = this.props\n        board.groups.push(group)\n        await this.props.saveBoard(board)\n    }\n\n    onDragCard = async () => {\n        const { board } = this.props\n        await this.props.saveBoard(board)\n    }\n\n    onAddCard = async (card, groupId) => {\n        const { board } = this.props\n        const groupIdx = await boardService.getGroupIdxById(board._id, groupId)\n        board.groups[groupIdx].cards.push(card)\n        await this.props.saveBoard(board)\n    }\n\n    onDragEnd = (result) => {\n        const { destination, source, draggableId, type } = result\n        const { groups } = this.props.board\n        if (!destination) return\n        if (type === 'group') {\n            const dragGroup = groups.find(group => group.id === draggableId)\n            groups.splice(source.index, 1)\n            groups.splice(destination.index, 0, dragGroup)\n            this.onDragCard()\n            return\n        }\n        const sourceGroup = groups.find(group => group.id === source.droppableId)\n        const destinationGroup = groups.find(group => group.id === destination.droppableId)\n        const draggingCard = sourceGroup.cards.find(card => card.id === draggableId)\n        sourceGroup.cards.splice(source.index, 1)\n        destinationGroup.cards.splice(destination.index, 0, draggingCard)\n        this.onDragCard()\n    }\n\n    toggleDetails = (isShown) => {\n        this.setState({ isDetailsShown: isShown })\n    }\n\n    render() {\n        const { board } = this.props\n        console.log('want to check if a new board is add', board);\n        let { isDetailsShown } = this.state\n        if (!board) return <p>Loading...</p>\n        return (\n            <>\n                {this.props.currCard && isDetailsShown &&\n                    <>\n                        <div className=\"modal-cover\" onClick={() => this.toggleDetails(false)}> </div>\n                        <CardDetails card={this.props.currCard} group={this.props.currGroup} toggleDetails={this.toggleDetails} />\n                    </>}\n\n                <BoardHeader title={board.title} members={board.members} />\n                <section className=\"board-container\" >\n                    {/* <ScrollContainer ignoreElements=\"article\" > */}\n                    <GroupAdd onAddGroup={this.onAddGroup} />\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"app\" type=\"group\" direction=\"horizontal\">\n                            {(provided) => (\n                                <div ref={provided.innerRef} {...provided.droppableProps}>\n                                    <GroupList groups={board.groups} onAddCard={this.onAddCard} onAddGroup={this.onAddGroup} />\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                    {/* </ScrollContainer> */}\n                </section>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.currBoard,\n        currCard: state.cardModule.currCard,\n        currGroup: state.cardModule.currGroup\n        // filterBy: state.boardModule.filterBy,\n        // loggedInUser: state.userModule.loggedInUser,\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoard,\n    saveBoard,\n}\n\nexport const BoardApp = connect(mapStateToProps, mapDispatchToProps)(_BoardApp);\n","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\actions\\boardAction.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\boardService.js",["188","189"],"import Axios from 'axios'\nimport { httpService } from './httpService.js'\nconst axios = Axios.create({\n    withCredentials: true\n})\n\nexport const boardService = {\n    query,\n    remove,\n    save,\n    getBoardById,\n    getGroupIdxById,\n    getUpdatedGroups\n\n}\n\n\n// const baseUrl = 'http://localhost:3030/api/board'\nconst baseUrl = 'http://localhost:3030/board'\n\nasync function query() {\n    return httpService.get(`board`)\n    // try {\n    //     const res = await axios.get(baseUrl)\n    //     return res.data\n    // } catch (err) {\n    //     console.log('err boardService QUERY BOARD', err)\n    // }\n}\n\nasync function remove(boardId) {\n    return httpService.delete(`board/${boardId}`)\n    // try {\n    //     return await axios.delete(`${baseUrl}/${boardId}`)\n    // } catch (err) {\n    //     console.log('err boardService REMOVE BOARD', err)\n    // }\n}\n\nasync function save(board) {\n    if (board._id) {\n        const savedBoard = await httpService.put(`board/${board._id}`, board)\n        return savedBoard\n    } else {\n        board.createdAt = Date.now()\n        board.groups = []\n        board.members = []\n        board.activities = []\n        board.style = {}\n        const savedBoard = await httpService.post('board', board)\n        return savedBoard\n    }\n    // try {\n    //     if (board._id) {\n    //         const res = await axios.put(`${baseUrl}/${board._id}`, board)\n    //         const savedBoard = res.data\n    //         return savedBoard\n    //     }\n    //     else {\n    //         board.createdAt = Date.now()\n    //         board.groups = []\n    //         board.members = []\n    //         board.activities = []\n    //         board.style = { \"backgroundColor\": \"#f44336\" }\n    //         const res = await axios.post(`${baseUrl}`, board)\n    //         const savedBoard = res.data\n    //         return savedBoard\n    //     }\n    // } catch (err) {\n    //     console.log('err boardService SAVE BOARD', err)\n    // }\n}\n\nasync function getBoardById(boardId) {\n    const board = await httpService.get(`board/${boardId}`)\n    return board\n    // try {\n    //     const res = await axios.get(`${baseUrl}/${boardId}`)\n    //     return res.data\n    // } catch (err) {\n    //     console.log('err boardService GET BOARD BY ID', err)\n    // }\n}\n\nasync function getGroupIdxById(boardId, groupId) {\n    try {//delete try and catch????\n        const board = await getBoardById(boardId)\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\n        return groupIdx\n    } catch (err) {\n        console.log('err boardService GET GROUP IDX BY ID', err)\n    }\n}\n\nfunction getUpdatedGroups(oldGroups, newGroups) {\n    try {\n        const updatedGroups = oldGroups.filter(oldGroup => {\n            return newGroups.map(newGroup => {\n                if (newGroup.id === oldGroup.id) return newGroup\n                else return oldGroup\n            })\n        })\n        return updatedGroups\n    } catch (err) {\n        console.log('err boardService GET UPDATE GROUPS', err)\n    }\n}\n\n\n","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardPreview.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\utilService.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardFilter.jsx",[],["190","191"],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\eventBusService.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\reducers\\cardReducer.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\actions\\cardAction.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\cardService.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\ChangeBackground.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\BoardPhotos.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\BoardColors.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupList.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\BoardHeader.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupAdd.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardDetails.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupPreview.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardList.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardInfo.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardHeader.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardSide.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardPreview.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupTitle.jsx",["192"],"import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { loadBoard, saveBoard } from '../../store/actions/boardAction'\nimport { connect } from 'react-redux'\n// import { TextField } from '@material-ui/core';\nexport class _GroupTitle extends Component {\n\n    state = {\n        groupIdx: null,\n        group: {\n            title: this.props.group.title,\n\n        }\n    }\n    textInput = React.createRef()\n\n    componentDidMount() {\n        const groupId = this.props.group.id\n        const { board } = this.props\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\n        this.setState({ groupIdx })\n    }\n\n    handleInput = ({ target }) => {\n        const { name } = target\n        const value = target.value\n        this.setState(prevState => {\n            return {\n                group: {\n                    ...prevState.group,\n                    [name]: value\n                }\n            }\n        })\n    }\n\n    onSaveTitle = async (ev) => {\n        ev.preventDefault()\n        const { board } = this.props\n        const { title } = this.state.group\n        const boardCopy = { ...board }\n        boardCopy.groups[this.state.groupIdx].title = title\n        await this.props.saveBoard(boardCopy)\n        this.textInput.current.blur()\n        // console.log(ev.target[0]);\n        // if (ev.target[0]) ev.target[0].blur()\n    }\n\n    render() {\n        const { group } = this.state\n        return <section className=\"group-title\" >\n            <form onSubmit={this.onSaveTitle} ref={this.textInput} onBlur={this.onSaveTitle} className=\"title-form flex space-between\">\n                {/* <input type=\"text\" ref={this.textInput} name=\"title\" value={group.title} onChange={this.handleInput} */}\n                {/* <TextField id=\"standard-basic\" label=\"Standard\" /> */}\n                <input type=\"text\" name=\"title\" value={group.title} onChange={this.handleInput}\n                    className=\"title-input\" placeholder=\"Enter group title...\" autoComplete=\"off\" />\n                <button className=\"more-options-btn\" ><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/more_e8mezf.png\" alt=\"\" /></button>\n            </form>\n        </section>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.currBoard,\n        // filterBy: state.boardModule.filterBy,\n        // loggedInUser: state.userModule.loggedInUser,\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoard,\n    saveBoard,\n}\n\n\n\nexport const GroupTitle = connect(mapStateToProps, mapDispatchToProps)(_GroupTitle);","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardAdd.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardActivityContainer.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardChecklist.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardPreviewBottom.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardPreviewLabel.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\httpService.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\DatePicker.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\DatePickersVariants.jsx",["193","194"],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardLabels.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardCover.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\cloudinaryService.js",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":3,"column":10,"nodeType":"201","messageId":"202","endLine":3,"endColumn":17},{"ruleId":"199","severity":1,"message":"203","line":3,"column":8,"nodeType":"201","messageId":"202","endLine":3,"endColumn":23},{"ruleId":"199","severity":1,"message":"204","line":3,"column":7,"nodeType":"201","messageId":"202","endLine":3,"endColumn":12},{"ruleId":"199","severity":1,"message":"205","line":19,"column":7,"nodeType":"201","messageId":"202","endLine":19,"endColumn":14},{"ruleId":"195","replacedBy":"206"},{"ruleId":"197","replacedBy":"207"},{"ruleId":"199","severity":1,"message":"208","line":2,"column":8,"nodeType":"201","messageId":"202","endLine":2,"endColumn":16},{"ruleId":"199","severity":1,"message":"209","line":3,"column":10,"nodeType":"201","messageId":"202","endLine":3,"endColumn":26},{"ruleId":"199","severity":1,"message":"210","line":3,"column":47,"nodeType":"201","messageId":"202","endLine":3,"endColumn":57},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'ScrollContainer' is defined but never used.","'axios' is assigned a value but never used.","'baseUrl' is assigned a value but never used.",["211"],["212"],"'ReactDOM' is defined but never used.","'MobileDatePicker' is defined but never used.","'DatePicker' is defined but never used.","no-global-assign","no-unsafe-negation"]