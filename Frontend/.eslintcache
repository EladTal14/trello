[{"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\index.js":"1","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\App.jsx":"2","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\serviceWorkerRegistration.js":"3","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\reportWebVitals.js":"4","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\store.js":"5","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\reducers\\boardReducer.js":"6","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\Home.jsx":"7","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\AppHeader.jsx":"8","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\Boards.jsx":"9","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\BoardApp.jsx":"10","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\actions\\boardAction.js":"11","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\boardService.js":"12","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardPreview.jsx":"13","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\utilService.js":"14","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardFilter.jsx":"15","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\eventBusService.js":"16","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\reducers\\cardReducer.js":"17","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\actions\\cardAction.js":"18","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\cardService.js":"19","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\ChangeBackground.jsx":"20","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\BoardPhotos.jsx":"21","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\BoardColors.jsx":"22","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupList.jsx":"23","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\BoardHeader.jsx":"24","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupAdd.jsx":"25","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardDetails.jsx":"26","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupPreview.jsx":"27","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardList.jsx":"28","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardInfo.jsx":"29","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardHeader.jsx":"30","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardSide.jsx":"31","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardPreview.jsx":"32","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupTitle.jsx":"33","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardAdd.jsx":"34","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardActivityContainer.jsx":"35","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardChecklist.jsx":"36","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardPreviewBottom.jsx":"37","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardPreviewLabel.jsx":"38","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\httpService.js":"39","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\DatePicker.jsx":"40"},{"size":1014,"mtime":1610563620587,"results":"41","hashOfConfig":"42"},{"size":915,"mtime":1610777853897,"results":"43","hashOfConfig":"42"},{"size":5064,"mtime":1610563620594,"results":"44","hashOfConfig":"42"},{"size":364,"mtime":1610563620592,"results":"45","hashOfConfig":"42"},{"size":593,"mtime":1610706661903,"results":"46","hashOfConfig":"42"},{"size":886,"mtime":1610715739680,"results":"47","hashOfConfig":"42"},{"size":0,"mtime":1610563620590,"results":"48","hashOfConfig":"42"},{"size":670,"mtime":1610647991236,"results":"49","hashOfConfig":"42"},{"size":1514,"mtime":1610777853931,"results":"50","hashOfConfig":"42"},{"size":4560,"mtime":1610807389483,"results":"51","hashOfConfig":"42"},{"size":1562,"mtime":1610777853937,"results":"52","hashOfConfig":"42"},{"size":3022,"mtime":1610788411888,"results":"53","hashOfConfig":"42"},{"size":321,"mtime":1610777853909,"results":"54","hashOfConfig":"42"},{"size":1703,"mtime":1610807389491,"results":"55","hashOfConfig":"42"},{"size":767,"mtime":1610636692521,"results":"56","hashOfConfig":"42"},{"size":386,"mtime":1610706661888,"results":"57","hashOfConfig":"42"},{"size":441,"mtime":1610777853941,"results":"58","hashOfConfig":"42"},{"size":597,"mtime":1610777853939,"results":"59","hashOfConfig":"42"},{"size":286,"mtime":1610777853935,"results":"60","hashOfConfig":"42"},{"size":913,"mtime":1610777853908,"results":"61","hashOfConfig":"42"},{"size":2009,"mtime":1610779896533,"results":"62","hashOfConfig":"42"},{"size":1919,"mtime":1610780520248,"results":"63","hashOfConfig":"42"},{"size":337,"mtime":1610814161887,"results":"64","hashOfConfig":"42"},{"size":4109,"mtime":1610779066921,"results":"65","hashOfConfig":"42"},{"size":2140,"mtime":1610777853925,"results":"66","hashOfConfig":"42"},{"size":3858,"mtime":1610817197567,"results":"67","hashOfConfig":"42"},{"size":1534,"mtime":1610807389473,"results":"68","hashOfConfig":"42"},{"size":1198,"mtime":1610814161883,"results":"69","hashOfConfig":"42"},{"size":2110,"mtime":1610786042375,"results":"70","hashOfConfig":"42"},{"size":646,"mtime":1610795770214,"results":"71","hashOfConfig":"42"},{"size":2016,"mtime":1610820615221,"results":"72","hashOfConfig":"42"},{"size":2118,"mtime":1610807389468,"results":"73","hashOfConfig":"42"},{"size":2584,"mtime":1610807389476,"results":"74","hashOfConfig":"42"},{"size":2164,"mtime":1610777853912,"results":"75","hashOfConfig":"42"},{"size":1931,"mtime":1610792924216,"results":"76","hashOfConfig":"42"},{"size":4308,"mtime":1610791812658,"results":"77","hashOfConfig":"42"},{"size":1415,"mtime":1610807389469,"results":"78","hashOfConfig":"42"},{"size":916,"mtime":1610777853922,"results":"79","hashOfConfig":"42"},{"size":1067,"mtime":1610788411889,"results":"80","hashOfConfig":"42"},{"size":3403,"mtime":1610827106373,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1r2lh0i",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\index.js",[],["170","171"],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\App.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\serviceWorkerRegistration.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\reportWebVitals.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\store.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\Home.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\AppHeader.jsx",["172"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nexport function AppHeader(props) {\n  return (\n    <header className=\"app-header flex space-between\">\n      <h1>Tello header</h1>\n      <nav>\n        <ul className=\"header-list flex justify-center\">\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/boards\">Boards</Link></li>\n          <li><Link to=\"/board\">Board</Link></li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\n// const mapStateToProps = (state) => ({\n\n// })\n\n// const mapDispatchToProps = {\n\n// }\n\n// export const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)\n","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\Boards.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\BoardApp.jsx",["173"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ScrollContainer from 'react-indiana-drag-scroll'\nimport { loadBoard, saveBoard } from '../store/actions/boardAction'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport { BoardHeader } from '../cmps/BoardHeader/BoardHeader'\nimport { GroupList } from '../cmps/Group/GroupList'\nimport { GroupAdd } from '../cmps/Group/GroupAdd'\nimport { CardDetails } from '../cmps/Card/CardDetails'\nimport { boardService } from '../services/boardService'\nimport { eventBusService } from '../services/eventBusService.js'\n\nexport class _BoardApp extends Component {\n\n    state = {\n        isDetailsShown: false\n    }\n\n    componentDidMount() {\n        this.loadBoard()\n        this.eventBusTerminate = eventBusService.on('show-details', this.toggleDetails)\n\n    }\n    check = (ev) => { console.log(ev); }\n    componentWillUnmount() {\n        this.eventBusTerminate()\n    }\n\n    loadBoard = async () => {\n        const { boardId } = this.props.match.params\n        await this.props.loadBoard(boardId)\n    }\n\n    onAddGroup = async (group) => {\n        const { board } = this.props\n        board.groups.push(group)\n        await this.props.saveBoard(board)\n    }\n\n    onDragCard = async () => {\n        const { board } = this.props\n        await this.props.saveBoard(board)\n    }\n\n    onAddCard = async (card, groupId) => {\n        const { board } = this.props\n        const groupIdx = await boardService.getGroupIdxById(board._id, groupId)\n        board.groups[groupIdx].cards.push(card)\n        await this.props.saveBoard(board)\n    }\n\n    onDragEnd = (result) => {\n        const { destination, source, draggableId, type } = result\n        const { groups } = this.props.board\n        if (!destination) return\n        if (type === 'group') {\n            const dragGroup = groups.find(group => group.id === draggableId)\n            groups.splice(source.index, 1)\n            groups.splice(destination.index, 0, dragGroup)\n            this.onDragCard()\n            return\n        }\n        const sourceGroup = groups.find(group => group.id === source.droppableId)\n        const destinationGroup = groups.find(group => group.id === destination.droppableId)\n        const draggingCard = sourceGroup.cards.find(card => card.id === draggableId)\n        sourceGroup.cards.splice(source.index, 1)\n        destinationGroup.cards.splice(destination.index, 0, draggingCard)\n        this.onDragCard()\n    }\n\n    toggleDetails = (isShown) => {\n        this.setState({ isDetailsShown: isShown })\n    }\n\n    render() {\n        const { board } = this.props\n        console.log('want to check if a new board is add', board);\n        let { isDetailsShown } = this.state\n        if (!board) return <p>Loading...</p>\n        return (\n            <>\n                {this.props.currCard && isDetailsShown &&\n                    <>\n                        <div className=\"modal-cover\" onClick={() => this.toggleDetails(false)}> </div>\n                        <CardDetails card={this.props.currCard} group={this.props.currGroup} toggleDetails={this.toggleDetails} />\n                    </>}\n\n                <BoardHeader title={board.title} members={board.members} />\n                <GroupAdd onAddGroup={this.onAddGroup} />\n                <section className=\"board-container\" >\n                    {/* <ScrollContainer ignoreElements=\"article\" > */}\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"app\" type=\"group\" direction=\"horizontal\">\n                            {(provided) => (\n                                <div ref={provided.innerRef} {...provided.droppableProps}>\n                                    <GroupList groups={board.groups} onAddCard={this.onAddCard} />\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                    {/* </ScrollContainer> */}\n                </section>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.currBoard,\n        currCard: state.cardModule.currCard,\n        currGroup: state.cardModule.currGroup\n        // filterBy: state.boardModule.filterBy,\n        // loggedInUser: state.userModule.loggedInUser,\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoard,\n    saveBoard,\n}\n\nexport const BoardApp = connect(mapStateToProps, mapDispatchToProps)(_BoardApp);\n","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\actions\\boardAction.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\boardService.js",["174","175"],"import Axios from 'axios'\nimport { httpService } from './httpService.js'\nconst axios = Axios.create({\n    withCredentials: true\n})\n\nexport const boardService = {\n    query,\n    remove,\n    save,\n    getBoardById,\n    getGroupIdxById,\n    getUpdatedGroups\n\n}\n\n\n// const baseUrl = 'http://localhost:3030/api/board'\nconst baseUrl = 'http://localhost:3030/board'\n\nasync function query() {\n    return httpService.get(`board`)\n    // try {\n    //     const res = await axios.get(baseUrl)\n    //     return res.data\n    // } catch (err) {\n    //     console.log('err boardService QUERY BOARD', err)\n    // }\n}\n\nasync function remove(boardId) {\n    return httpService.delete(`board/${boardId}`)\n    // try {\n    //     return await axios.delete(`${baseUrl}/${boardId}`)\n    // } catch (err) {\n    //     console.log('err boardService REMOVE BOARD', err)\n    // }\n}\n\nasync function save(board) {\n    if (board._id) {\n        const savedBoard = await httpService.put(`board/${board._id}`, board)\n        return savedBoard\n    } else {\n        board.createdAt = Date.now()\n        board.groups = []\n        board.members = []\n        board.activities = []\n        board.style = {}\n        const savedBoard = await httpService.post('board', board)\n        return savedBoard\n    }\n    // try {\n    //     if (board._id) {\n    //         const res = await axios.put(`${baseUrl}/${board._id}`, board)\n    //         const savedBoard = res.data\n    //         return savedBoard\n    //     }\n    //     else {\n    //         board.createdAt = Date.now()\n    //         board.groups = []\n    //         board.members = []\n    //         board.activities = []\n    //         board.style = { \"backgroundColor\": \"#f44336\" }\n    //         const res = await axios.post(`${baseUrl}`, board)\n    //         const savedBoard = res.data\n    //         return savedBoard\n    //     }\n    // } catch (err) {\n    //     console.log('err boardService SAVE BOARD', err)\n    // }\n}\n\nasync function getBoardById(boardId) {\n    const board = await httpService.get(`board/${boardId}`)\n    return board\n    // try {\n    //     const res = await axios.get(`${baseUrl}/${boardId}`)\n    //     return res.data\n    // } catch (err) {\n    //     console.log('err boardService GET BOARD BY ID', err)\n    // }\n}\n\nasync function getGroupIdxById(boardId, groupId) {\n    try {//delete try and catch????\n        const board = await getBoardById(boardId)\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\n        return groupIdx\n    } catch (err) {\n        console.log('err boardService GET GROUP IDX BY ID', err)\n    }\n}\n\nfunction getUpdatedGroups(oldGroups, newGroups) {\n    try {\n        const updatedGroups = oldGroups.filter(oldGroup => {\n            return newGroups.map(newGroup => {\n                if (newGroup.id === oldGroup.id) return newGroup\n                else return oldGroup\n            })\n        })\n        return updatedGroups\n    } catch (err) {\n        console.log('err boardService GET UPDATE GROUPS', err)\n    }\n}\n\n\n","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardPreview.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\utilService.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardFilter.jsx",[],["176","177"],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\eventBusService.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\reducers\\cardReducer.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\actions\\cardAction.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\cardService.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\ChangeBackground.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\BoardPhotos.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\BoardColors.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupList.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader\\BoardHeader.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupAdd.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardDetails.jsx",["178"],"import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ReactDOM from 'react-dom'\nimport { CardHeader } from './CardHeader'\nimport { CardInfo } from './CardInfo'\nimport { clearState } from '../../store/actions/cardAction.js'\nimport { saveBoard } from '../../store/actions/boardAction.js'\nimport { CardSide } from './CardSide'\n// TODO: find a way to merge all handle inputs\n\nclass _CardDetails extends Component {\n  state = {\n    card: null\n  }\n\n  componentDidMount() {\n    const { card } = this.props\n    this.setState({ card })\n    document.addEventListener('click', this.handleClickOutside, true)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside, true)\n  }\n\n  handleClickOutside = event => {\n    const domNode = ReactDOM.findDOMNode(this)\n    if (!domNode || !domNode.contains(event.target)) {\n      this.sendUpdatedBoard()\n      this.props.clearState(null)\n    }\n  }\n\n  sendUpdatedBoard = () => {\n    const { board, group } = this.props\n    const { card } = this.state\n    const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\n    group.cards[cardIdx] = card\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\n    board.groups[groupIdx] = group\n    this.props.saveBoard(board)\n  }\n\n  onHandleInputChange = ({ target }) => {\n    const { value, name } = target\n\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        [name]: value\n      }\n    }))\n  }\n\n  onHandleChecklistChange = (checklist) => {\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        checklist: { ...checklist }\n      }\n    }))\n  }\n\n  onHandleActivitiesChange = (comments) => {\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        comments: { ...comments }\n      }\n    }))\n  }\n\n  onRemoveCard = () => {\n    const { board, group } = this.props\n    const { card } = this.state\n    const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\n    group.cards.splice(cardIdx, 1)\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\n    board.groups[groupIdx] = group\n    this.props.saveBoard(board)\n    this.props.toggleDetails(false)\n  }\n\n  onSavedueDate = (date) => {\n    const { board, group } = this.props\n    const { card } = this.state\n    const newCard = {...card}\n    newCard.dueDate = Date.parse(date)\n    const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\n    group.cards[cardIdx] = newCard\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\n    board.groups[groupIdx] = group\n    this.setState({ card: newCard }, () => {this.props.saveBoard(board)})\n    \n  }\n\n  render() {\n    const { card } = this.state\n    const { group } = this.props\n    if (!card) return <div>Loading...</div>\n    // let cardWithTxt = {}\n\n    return (\n      <div className=\"card-details flex justify-center align-center\">\n        <div className=\"card-details-wrapper flex column\">\n          <CardHeader card={card} onHandleInputChange={this.onHandleInputChange} group={group} />\n          <div className=\"card-content flex\">\n            <CardInfo\n              card={card}\n              onHandleChecklistChange={this.onHandleChecklistChange}\n              onHandleInputChange={this.onHandleInputChange}\n              onHandleActivitiesChange={this.onHandleActivitiesChange}\n            />\n            <CardSide onRemoveCard={this.onRemoveCard} onSavedueDate={this.onSavedueDate}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    board: state.boardModule.currBoard,\n  }\n}\n\nconst mapDispatchToProps = {\n  saveBoard,\n  clearState\n}\n\nexport const CardDetails = connect(mapStateToProps, mapDispatchToProps)(_CardDetails)","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupPreview.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardList.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardInfo.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardHeader.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardSide.jsx",["179","180","181"],"\nimport React, { Component } from 'react'\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { DatePicker } from './DatePicker'\n\nexport class CardSide extends Component {\n\n  state = {\n    value: new Date(),\n    isDateShown: false\n  }\n\n  onRemoveCard = () => {\n    this.props.onRemoveCard()\n  }\n\n  // toggleDate = () => {\n  //   this.setState({ isDateShown: !this.state.isDateShown })\n  // }\n\n  onChange = (value) => {\n    this.setState( { value }, () => this.props.onSavedueDate((this.state.value + '').substring(4, 32))) \n    this.toggleDate()\n    \n  }\n\n\n  render() {\n    const { value, isDateShown } = this.state\n    return (\n      <div className=\"card-side flex column\">\n        <button className=\"side-btn\"><span><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/user_g2y481.png\" alt=\"\" /></span> Members</button>\n        <button className=\"side-btn\"><span><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610794160/price-tag_evse4z.png\" alt=\"\" /></span> Labels</button>\n        <button className=\"side-btn\"><span><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610794290/check-box_srgv0c.png\" alt=\"\" /></span> Checklist</button>\n        <button className=\"side-btn\" onClick={this.toggleDate}><span><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"\" /></span> Due date\n        </button>\n        {/* {isDateShown && <div>\n          <Calendar style={{zIndex: 2000, position:'relative'}}\n            onChange={this.onChange}\n            value={value}\n          />\n        </div>} */}\n        <DatePicker />\n        <button className=\"side-btn\"><span><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793767/picture_omnffh.png\" alt=\"\" /></span> Cover</button>\n        <button className=\"side-btn\" onClick={this.onRemoveCard}><span><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793816/trash_nrq5xi.png\" alt=\"\" /></span> Delete</button>\n\n      </div>\n    )\n  }\n}\n","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardPreview.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Group\\GroupTitle.jsx",["182"],"import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { loadBoard, saveBoard } from '../../store/actions/boardAction'\nimport { connect } from 'react-redux'\n// import { TextField } from '@material-ui/core';\nexport class _GroupTitle extends Component {\n\n    state = {\n        groupIdx: null,\n        group: {\n            title: this.props.group.title,\n\n        }\n    }\n    textInput = React.createRef()\n\n    componentDidMount() {\n        const groupId = this.props.group.id\n        const { board } = this.props\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\n        this.setState({ groupIdx })\n    }\n\n    handleInput = ({ target }) => {\n        const { name } = target\n        const value = target.value\n        this.setState(prevState => {\n            return {\n                group: {\n                    ...prevState.group,\n                    [name]: value\n                }\n            }\n        })\n    }\n\n    onSaveTitle = async (ev) => {\n        ev.preventDefault()\n        const { board } = this.props\n        const { title } = this.state.group\n        const boardCopy = { ...board }\n        boardCopy.groups[this.state.groupIdx].title = title\n        await this.props.saveBoard(boardCopy)\n        this.textInput.current.blur()\n        // console.log(ev.target[0]);\n        // if (ev.target[0]) ev.target[0].blur()\n    }\n\n    render() {\n        const { group } = this.state\n        return <section className=\"group-title\" >\n            <form onSubmit={this.onSaveTitle} ref={this.textInput} onBlur={this.onSaveTitle} className=\"title-form flex space-between\">\n                {/* <input type=\"text\" ref={this.textInput} name=\"title\" value={group.title} onChange={this.handleInput} */}\n                {/* <TextField id=\"standard-basic\" label=\"Standard\" /> */}\n                <input type=\"text\" name=\"title\" value={group.title} onChange={this.handleInput}\n                    className=\"title-input\" placeholder=\"Enter group title...\" autoComplete=\"off\" />\n                <button className=\"more-options-btn\" ><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/more_e8mezf.png\" alt=\"\" /></button>\n            </form>\n        </section>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.currBoard,\n        // filterBy: state.boardModule.filterBy,\n        // loggedInUser: state.userModule.loggedInUser,\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoard,\n    saveBoard,\n}\n\n\n\nexport const GroupTitle = connect(mapStateToProps, mapDispatchToProps)(_GroupTitle);","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardAdd.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardActivityContainer.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardChecklist.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardPreviewBottom.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\CardPreviewLabel.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\httpService.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\Card\\DatePicker.jsx",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":3,"column":10,"nodeType":"189","messageId":"190","endLine":3,"endColumn":17},{"ruleId":"187","severity":1,"message":"191","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":23},{"ruleId":"187","severity":1,"message":"192","line":3,"column":7,"nodeType":"189","messageId":"190","endLine":3,"endColumn":12},{"ruleId":"187","severity":1,"message":"193","line":19,"column":7,"nodeType":"189","messageId":"190","endLine":19,"endColumn":14},{"ruleId":"183","replacedBy":"194"},{"ruleId":"185","replacedBy":"195"},{"ruleId":"187","severity":1,"message":"196","line":75,"column":13,"nodeType":"189","messageId":"190","endLine":75,"endColumn":17},{"ruleId":"187","severity":1,"message":"197","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":16},{"ruleId":"187","severity":1,"message":"198","line":30,"column":13,"nodeType":"189","messageId":"190","endLine":30,"endColumn":18},{"ruleId":"187","severity":1,"message":"199","line":30,"column":20,"nodeType":"189","messageId":"190","endLine":30,"endColumn":31},{"ruleId":"187","severity":1,"message":"200","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":16},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'ScrollContainer' is defined but never used.","'axios' is assigned a value but never used.","'baseUrl' is assigned a value but never used.",["201"],["202"],"'card' is assigned a value but never used.","'Calendar' is defined but never used.","'value' is assigned a value but never used.","'isDateShown' is assigned a value but never used.","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation"]