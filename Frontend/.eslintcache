[{"/Users/macbook/Desktop/trello/Frontend/src/index.js":"1","/Users/macbook/Desktop/trello/Frontend/src/App.jsx":"2","/Users/macbook/Desktop/trello/Frontend/src/serviceWorkerRegistration.js":"3","/Users/macbook/Desktop/trello/Frontend/src/reportWebVitals.js":"4","/Users/macbook/Desktop/trello/Frontend/src/store/store.js":"5","/Users/macbook/Desktop/trello/Frontend/src/store/actions/boardAction.js":"6","/Users/macbook/Desktop/trello/Frontend/src/store/reducers/cardReducer.js":"7","/Users/macbook/Desktop/trello/Frontend/src/store/reducers/boardReducer.js":"8","/Users/macbook/Desktop/trello/Frontend/src/pages/Boards.jsx":"9","/Users/macbook/Desktop/trello/Frontend/src/pages/Home.jsx":"10","/Users/macbook/Desktop/trello/Frontend/src/cmps/AppHeader.jsx":"11","/Users/macbook/Desktop/trello/Frontend/src/pages/BoardApp.jsx":"12","/Users/macbook/Desktop/trello/Frontend/src/services/boardService.js":"13","/Users/macbook/Desktop/trello/Frontend/src/services/eventBusService.js":"14","/Users/macbook/Desktop/trello/Frontend/src/services/httpService.js":"15","/Users/macbook/Desktop/trello/Frontend/src/cmps/BoardPreview.jsx":"16","/Users/macbook/Desktop/trello/Frontend/src/cmps/BoardHeader/BoardHeader.jsx":"17","/Users/macbook/Desktop/trello/Frontend/src/cmps/Group/GroupAdd.jsx":"18","/Users/macbook/Desktop/trello/Frontend/src/cmps/Group/GroupList.jsx":"19","/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardDetails.jsx":"20","/Users/macbook/Desktop/trello/Frontend/src/services/utilService.js":"21","/Users/macbook/Desktop/trello/Frontend/src/cmps/BoardHeader/ChangeBackground.jsx":"22","/Users/macbook/Desktop/trello/Frontend/src/cmps/Group/GroupPreview.jsx":"23","/Users/macbook/Desktop/trello/Frontend/src/store/actions/cardAction.js":"24","/Users/macbook/Desktop/trello/Frontend/src/cmps/BoardHeader/BoardColors.jsx":"25","/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardList.jsx":"26","/Users/macbook/Desktop/trello/Frontend/src/cmps/BoardHeader/BoardPhotos.jsx":"27","/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardHeader.jsx":"28","/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardInfo.jsx":"29","/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardSide.jsx":"30","/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardPreview.jsx":"31","/Users/macbook/Desktop/trello/Frontend/src/cmps/Group/GroupTitle.jsx":"32","/Users/macbook/Desktop/trello/Frontend/src/services/cardService.js":"33","/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardAdd.jsx":"34","/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardActivityContainer.jsx":"35","/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardChecklist.jsx":"36","/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardLabels.jsx":"37","/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardPreviewLabel.jsx":"38","/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardPreviewBottom.jsx":"39","/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardCover.jsx":"40","/Users/macbook/Desktop/trello/Frontend/src/services/cloudinaryService.js":"41"},{"size":1014,"mtime":1610486484197,"results":"42","hashOfConfig":"43"},{"size":915,"mtime":1610814028984,"results":"44","hashOfConfig":"43"},{"size":5064,"mtime":1610463371972,"results":"45","hashOfConfig":"43"},{"size":364,"mtime":1610463371971,"results":"46","hashOfConfig":"43"},{"size":593,"mtime":1610640242386,"results":"47","hashOfConfig":"43"},{"size":1562,"mtime":1610814028995,"results":"48","hashOfConfig":"43"},{"size":441,"mtime":1610814028996,"results":"49","hashOfConfig":"43"},{"size":886,"mtime":1610720083435,"results":"50","hashOfConfig":"43"},{"size":1514,"mtime":1610814028994,"results":"51","hashOfConfig":"43"},{"size":0,"mtime":1610469650166,"results":"52","hashOfConfig":"43"},{"size":670,"mtime":1610702417043,"results":"53","hashOfConfig":"43"},{"size":4593,"mtime":1610865445558,"results":"54","hashOfConfig":"43"},{"size":3022,"mtime":1610814028994,"results":"55","hashOfConfig":"43"},{"size":386,"mtime":1610637527941,"results":"56","hashOfConfig":"43"},{"size":1067,"mtime":1610814028995,"results":"57","hashOfConfig":"43"},{"size":321,"mtime":1610814028990,"results":"58","hashOfConfig":"43"},{"size":4109,"mtime":1610814028989,"results":"59","hashOfConfig":"43"},{"size":2140,"mtime":1610814029015,"results":"60","hashOfConfig":"43"},{"size":325,"mtime":1610865445563,"results":"61","hashOfConfig":"43"},{"size":5679,"mtime":1610881538385,"results":"62","hashOfConfig":"43"},{"size":1703,"mtime":1610814028995,"results":"63","hashOfConfig":"43"},{"size":913,"mtime":1610814028989,"results":"64","hashOfConfig":"43"},{"size":1534,"mtime":1610814029015,"results":"65","hashOfConfig":"43"},{"size":597,"mtime":1610814028996,"results":"66","hashOfConfig":"43"},{"size":1919,"mtime":1610814028989,"results":"67","hashOfConfig":"43"},{"size":1198,"mtime":1610814029019,"results":"68","hashOfConfig":"43"},{"size":2011,"mtime":1610865771543,"results":"69","hashOfConfig":"43"},{"size":646,"mtime":1610814029020,"results":"70","hashOfConfig":"43"},{"size":2229,"mtime":1610828420360,"results":"71","hashOfConfig":"43"},{"size":3257,"mtime":1610881678221,"results":"72","hashOfConfig":"43"},{"size":2397,"mtime":1610881366051,"results":"73","hashOfConfig":"43"},{"size":2584,"mtime":1610814029014,"results":"74","hashOfConfig":"43"},{"size":356,"mtime":1610819305457,"results":"75","hashOfConfig":"43"},{"size":2164,"mtime":1610814029022,"results":"76","hashOfConfig":"43"},{"size":1951,"mtime":1610866758983,"results":"77","hashOfConfig":"43"},{"size":4396,"mtime":1610879949497,"results":"78","hashOfConfig":"43"},{"size":2726,"mtime":1610881320119,"results":"79","hashOfConfig":"43"},{"size":916,"mtime":1610814029017,"results":"80","hashOfConfig":"43"},{"size":1415,"mtime":1610814029018,"results":"81","hashOfConfig":"43"},{"size":1951,"mtime":1610881366050,"results":"82","hashOfConfig":"43"},{"size":509,"mtime":1610881366052,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"wi6xjt",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbook/Desktop/trello/Frontend/src/index.js",[],["171","172"],"/Users/macbook/Desktop/trello/Frontend/src/App.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/serviceWorkerRegistration.js",[],"/Users/macbook/Desktop/trello/Frontend/src/reportWebVitals.js",[],"/Users/macbook/Desktop/trello/Frontend/src/store/store.js",[],"/Users/macbook/Desktop/trello/Frontend/src/store/actions/boardAction.js",[],"/Users/macbook/Desktop/trello/Frontend/src/store/reducers/cardReducer.js",[],"/Users/macbook/Desktop/trello/Frontend/src/store/reducers/boardReducer.js",[],"/Users/macbook/Desktop/trello/Frontend/src/pages/Boards.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/pages/Home.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/AppHeader.jsx",["173"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nexport function AppHeader(props) {\n  return (\n    <header className=\"app-header flex space-between\">\n      <h1>Tello header</h1>\n      <nav>\n        <ul className=\"header-list flex justify-center\">\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/boards\">Boards</Link></li>\n          <li><Link to=\"/board\">Board</Link></li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\n// const mapStateToProps = (state) => ({\n\n// })\n\n// const mapDispatchToProps = {\n\n// }\n\n// export const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)\n","/Users/macbook/Desktop/trello/Frontend/src/pages/BoardApp.jsx",["174"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport ScrollContainer from 'react-indiana-drag-scroll'\nimport { loadBoard, saveBoard } from '../store/actions/boardAction'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport { BoardHeader } from '../cmps/BoardHeader/BoardHeader'\nimport { GroupList } from '../cmps/Group/GroupList'\nimport { GroupAdd } from '../cmps/Group/GroupAdd'\nimport { CardDetails } from '../cmps/Card/CardDetails'\nimport { boardService } from '../services/boardService'\nimport { eventBusService } from '../services/eventBusService.js'\n\nexport class _BoardApp extends Component {\n\n    state = {\n        isDetailsShown: false\n    }\n\n    componentDidMount() {\n        this.loadBoard()\n        this.eventBusTerminate = eventBusService.on('show-details', this.toggleDetails)\n\n    }\n    check = (ev) => { console.log(ev); }\n    componentWillUnmount() {\n        this.eventBusTerminate()\n    }\n\n    loadBoard = async () => {\n        const { boardId } = this.props.match.params\n        await this.props.loadBoard(boardId)\n    }\n\n    onAddGroup = async (group) => {\n        const { board } = this.props\n        board.groups.push(group)\n        await this.props.saveBoard(board)\n    }\n\n    onDragCard = async () => {\n        const { board } = this.props\n        await this.props.saveBoard(board)\n    }\n\n    onAddCard = async (card, groupId) => {\n        const { board } = this.props\n        const groupIdx = await boardService.getGroupIdxById(board._id, groupId)\n        board.groups[groupIdx].cards.push(card)\n        await this.props.saveBoard(board)\n    }\n\n    onDragEnd = (result) => {\n        const { destination, source, draggableId, type } = result\n        const { groups } = this.props.board\n        if (!destination) return\n        if (type === 'group') {\n            const dragGroup = groups.find(group => group.id === draggableId)\n            groups.splice(source.index, 1)\n            groups.splice(destination.index, 0, dragGroup)\n            this.onDragCard()\n            return\n        }\n        const sourceGroup = groups.find(group => group.id === source.droppableId)\n        const destinationGroup = groups.find(group => group.id === destination.droppableId)\n        const draggingCard = sourceGroup.cards.find(card => card.id === draggableId)\n        sourceGroup.cards.splice(source.index, 1)\n        destinationGroup.cards.splice(destination.index, 0, draggingCard)\n        this.onDragCard()\n    }\n\n    toggleDetails = (isShown) => {\n        this.setState({ isDetailsShown: isShown })\n    }\n\n    render() {\n        const { board } = this.props\n        console.log('want to check if a new board is add', board);\n        let { isDetailsShown } = this.state\n        if (!board) return <p>Loading...</p>\n        return (\n            <>\n                {this.props.currCard && isDetailsShown &&\n                    <>\n                        <div className=\"modal-cover\" onClick={() => this.toggleDetails(false)}> </div>\n                        <CardDetails card={this.props.currCard} group={this.props.currGroup} toggleDetails={this.toggleDetails} />\n                    </>}\n\n                <BoardHeader title={board.title} members={board.members} />\n                <section className=\"board-container\" >\n                    {/* <ScrollContainer ignoreElements=\"article\" > */}\n                    <GroupAdd onAddGroup={this.onAddGroup} />\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"app\" type=\"group\" direction=\"horizontal\">\n                            {(provided) => (\n                                <div ref={provided.innerRef} {...provided.droppableProps}>\n                                    <GroupList groups={board.groups} onAddCard={this.onAddCard} onAddGroup={this.onAddGroup} />\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                    {/* </ScrollContainer> */}\n                </section>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.currBoard,\n        currCard: state.cardModule.currCard,\n        currGroup: state.cardModule.currGroup\n        // filterBy: state.boardModule.filterBy,\n        // loggedInUser: state.userModule.loggedInUser,\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoard,\n    saveBoard,\n}\n\nexport const BoardApp = connect(mapStateToProps, mapDispatchToProps)(_BoardApp);\n","/Users/macbook/Desktop/trello/Frontend/src/services/boardService.js",["175","176"],"import Axios from 'axios'\nimport { httpService } from './httpService.js'\nconst axios = Axios.create({\n    withCredentials: true\n})\n\nexport const boardService = {\n    query,\n    remove,\n    save,\n    getBoardById,\n    getGroupIdxById,\n    getUpdatedGroups\n\n}\n\n\n// const baseUrl = 'http://localhost:3030/api/board'\nconst baseUrl = 'http://localhost:3030/board'\n\nasync function query() {\n    return httpService.get(`board`)\n    // try {\n    //     const res = await axios.get(baseUrl)\n    //     return res.data\n    // } catch (err) {\n    //     console.log('err boardService QUERY BOARD', err)\n    // }\n}\n\nasync function remove(boardId) {\n    return httpService.delete(`board/${boardId}`)\n    // try {\n    //     return await axios.delete(`${baseUrl}/${boardId}`)\n    // } catch (err) {\n    //     console.log('err boardService REMOVE BOARD', err)\n    // }\n}\n\nasync function save(board) {\n    if (board._id) {\n        const savedBoard = await httpService.put(`board/${board._id}`, board)\n        return savedBoard\n    } else {\n        board.createdAt = Date.now()\n        board.groups = []\n        board.members = []\n        board.activities = []\n        board.style = {}\n        const savedBoard = await httpService.post('board', board)\n        return savedBoard\n    }\n    // try {\n    //     if (board._id) {\n    //         const res = await axios.put(`${baseUrl}/${board._id}`, board)\n    //         const savedBoard = res.data\n    //         return savedBoard\n    //     }\n    //     else {\n    //         board.createdAt = Date.now()\n    //         board.groups = []\n    //         board.members = []\n    //         board.activities = []\n    //         board.style = { \"backgroundColor\": \"#f44336\" }\n    //         const res = await axios.post(`${baseUrl}`, board)\n    //         const savedBoard = res.data\n    //         return savedBoard\n    //     }\n    // } catch (err) {\n    //     console.log('err boardService SAVE BOARD', err)\n    // }\n}\n\nasync function getBoardById(boardId) {\n    const board = await httpService.get(`board/${boardId}`)\n    return board\n    // try {\n    //     const res = await axios.get(`${baseUrl}/${boardId}`)\n    //     return res.data\n    // } catch (err) {\n    //     console.log('err boardService GET BOARD BY ID', err)\n    // }\n}\n\nasync function getGroupIdxById(boardId, groupId) {\n    try {//delete try and catch????\n        const board = await getBoardById(boardId)\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\n        return groupIdx\n    } catch (err) {\n        console.log('err boardService GET GROUP IDX BY ID', err)\n    }\n}\n\nfunction getUpdatedGroups(oldGroups, newGroups) {\n    try {\n        const updatedGroups = oldGroups.filter(oldGroup => {\n            return newGroups.map(newGroup => {\n                if (newGroup.id === oldGroup.id) return newGroup\n                else return oldGroup\n            })\n        })\n        return updatedGroups\n    } catch (err) {\n        console.log('err boardService GET UPDATE GROUPS', err)\n    }\n}\n\n\n","/Users/macbook/Desktop/trello/Frontend/src/services/eventBusService.js",[],"/Users/macbook/Desktop/trello/Frontend/src/services/httpService.js",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/BoardPreview.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/BoardHeader/BoardHeader.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Group/GroupAdd.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Group/GroupList.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardDetails.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/services/utilService.js",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/BoardHeader/ChangeBackground.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Group/GroupPreview.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/store/actions/cardAction.js",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/BoardHeader/BoardColors.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardList.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/BoardHeader/BoardPhotos.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardHeader.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardInfo.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardSide.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardPreview.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Group/GroupTitle.jsx",["177"],"import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { loadBoard, saveBoard } from '../../store/actions/boardAction'\nimport { connect } from 'react-redux'\n// import { TextField } from '@material-ui/core';\nexport class _GroupTitle extends Component {\n\n    state = {\n        groupIdx: null,\n        group: {\n            title: this.props.group.title,\n\n        }\n    }\n    textInput = React.createRef()\n\n    componentDidMount() {\n        const groupId = this.props.group.id\n        const { board } = this.props\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\n        this.setState({ groupIdx })\n    }\n\n    handleInput = ({ target }) => {\n        const { name } = target\n        const value = target.value\n        this.setState(prevState => {\n            return {\n                group: {\n                    ...prevState.group,\n                    [name]: value\n                }\n            }\n        })\n    }\n\n    onSaveTitle = async (ev) => {\n        ev.preventDefault()\n        const { board } = this.props\n        const { title } = this.state.group\n        const boardCopy = { ...board }\n        boardCopy.groups[this.state.groupIdx].title = title\n        await this.props.saveBoard(boardCopy)\n        this.textInput.current.blur()\n        // console.log(ev.target[0]);\n        // if (ev.target[0]) ev.target[0].blur()\n    }\n\n    render() {\n        const { group } = this.state\n        return <section className=\"group-title\" >\n            <form onSubmit={this.onSaveTitle} ref={this.textInput} onBlur={this.onSaveTitle} className=\"title-form flex space-between\">\n                {/* <input type=\"text\" ref={this.textInput} name=\"title\" value={group.title} onChange={this.handleInput} */}\n                {/* <TextField id=\"standard-basic\" label=\"Standard\" /> */}\n                <input type=\"text\" name=\"title\" value={group.title} onChange={this.handleInput}\n                    className=\"title-input\" placeholder=\"Enter group title...\" autoComplete=\"off\" />\n                <button className=\"more-options-btn\" ><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/more_e8mezf.png\" alt=\"\" /></button>\n            </form>\n        </section>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.currBoard,\n        // filterBy: state.boardModule.filterBy,\n        // loggedInUser: state.userModule.loggedInUser,\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoard,\n    saveBoard,\n}\n\n\n\nexport const GroupTitle = connect(mapStateToProps, mapDispatchToProps)(_GroupTitle);","/Users/macbook/Desktop/trello/Frontend/src/services/cardService.js",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardAdd.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardActivityContainer.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardChecklist.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardLabels.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardPreviewLabel.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardPreviewBottom.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/cmps/Card/CardCover.jsx",[],"/Users/macbook/Desktop/trello/Frontend/src/services/cloudinaryService.js",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":17},{"ruleId":"182","severity":1,"message":"186","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":23},{"ruleId":"182","severity":1,"message":"187","line":3,"column":7,"nodeType":"184","messageId":"185","endLine":3,"endColumn":12},{"ruleId":"182","severity":1,"message":"188","line":19,"column":7,"nodeType":"184","messageId":"185","endLine":19,"endColumn":14},{"ruleId":"182","severity":1,"message":"189","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":16},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'ScrollContainer' is defined but never used.","'axios' is assigned a value but never used.","'baseUrl' is assigned a value but never used.","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation"]