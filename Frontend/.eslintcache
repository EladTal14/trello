[{"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\index.js":"1","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\App.jsx":"2","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\serviceWorkerRegistration.js":"3","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\reportWebVitals.js":"4","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\store.js":"5","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\reducers\\boardReducer.js":"6","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\AppFooter.jsx":"7","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\Home.jsx":"8","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\AppHeader.jsx":"9","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\Boards.jsx":"10","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\BoardApp.jsx":"11","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\actions\\boardAction.js":"12","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\boardService.js":"13","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardPreview.jsx":"14","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\GroupList.jsx":"15","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader.jsx":"16","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\GroupAdd.jsx":"17","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\utilService.js":"18","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\GroupPreview.jsx":"19","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\CardList.jsx":"20","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\GroupTitle.jsx":"21","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\CardAdd.jsx":"22","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\CardPreview.jsx":"23","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\CardDetails.jsx":"24","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\CardHeader.jsx":"25","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardFilter.jsx":"26"},{"size":1014,"mtime":1610563620587,"results":"27","hashOfConfig":"28"},{"size":606,"mtime":1610563620427,"results":"29","hashOfConfig":"28"},{"size":5064,"mtime":1610563620594,"results":"30","hashOfConfig":"28"},{"size":364,"mtime":1610563620592,"results":"31","hashOfConfig":"28"},{"size":508,"mtime":1610563620603,"results":"32","hashOfConfig":"28"},{"size":787,"mtime":1610633653733,"results":"33","hashOfConfig":"28"},{"size":146,"mtime":1610563620563,"results":"34","hashOfConfig":"28"},{"size":0,"mtime":1610563620590,"results":"35","hashOfConfig":"28"},{"size":651,"mtime":1610563620564,"results":"36","hashOfConfig":"28"},{"size":1077,"mtime":1610563620590,"results":"37","hashOfConfig":"28"},{"size":3336,"mtime":1610633955134,"results":"38","hashOfConfig":"28"},{"size":1256,"mtime":1610633653730,"results":"39","hashOfConfig":"28"},{"size":1579,"mtime":1610569994826,"results":"40","hashOfConfig":"28"},{"size":347,"mtime":1610563620566,"results":"41","hashOfConfig":"28"},{"size":370,"mtime":1610633653726,"results":"42","hashOfConfig":"28"},{"size":1084,"mtime":1610632548185,"results":"43","hashOfConfig":"28"},{"size":1674,"mtime":1610571241764,"results":"44","hashOfConfig":"28"},{"size":1424,"mtime":1610624365897,"results":"45","hashOfConfig":"28"},{"size":853,"mtime":1610633653728,"results":"46","hashOfConfig":"28"},{"size":1060,"mtime":1610633878903,"results":"47","hashOfConfig":"28"},{"size":1943,"mtime":1610610322738,"results":"48","hashOfConfig":"28"},{"size":2028,"mtime":1610605200364,"results":"49","hashOfConfig":"28"},{"size":3641,"mtime":1610633911522,"results":"50","hashOfConfig":"28"},{"size":5993,"mtime":1610606628226,"results":"51","hashOfConfig":"28"},{"size":479,"mtime":1610563620570,"results":"52","hashOfConfig":"28"},{"size":943,"mtime":1610632581750,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1r2lh0i",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\index.js",[],["117","118"],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\App.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\serviceWorkerRegistration.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\reportWebVitals.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\store.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\AppFooter.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\Home.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\AppHeader.jsx",["119"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nexport function AppHeader(props) {\n  return (\n    <header className=\"app-header\">\n      <h1>Tello header</h1>\n      <nav>\n        <ul className=\"header-list flex justify-center\">\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/boards\">Boards</Link></li>\n          <li><Link to=\"/board\">Board</Link></li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\n// const mapStateToProps = (state) => ({\n\n// })\n\n// const mapDispatchToProps = {\n\n// }\n\n// export const AppHeader = connect(mapStateToProps, mapDispatchToProps)(_AppHeader)\n","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\Boards.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\pages\\BoardApp.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\store\\actions\\boardAction.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\boardService.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardPreview.jsx",["120"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport function BoardPreview({ board }) {\n\n    return (\n        <div className=\"board-preview\">\n            <Link to={`/board/${board._id}`}>\n                <h1>A Board Preview</h1>\n                <h1 >{board.title}</h1>\n            </Link>\n        </div>\n    )\n}","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\GroupList.jsx",["121","122","123"],"import { GroupPreview } from \"./GroupPreview.jsx\"\nimport { connect } from 'react-redux'\nimport React, { useState, useEffect } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nexport function GroupList({ groups, onAddCard, onDragCard }) {\n    const [state, setState] = useState(groups);\n    window.statest = state\n    function onDragEnd(result) {\n        const { source, destination } = result;\n        if (!destination) {\n            return;\n        }\n        const sInd = +source.droppableId;\n        const dInd = +destination.droppableId;\n\n        if (sInd === dInd) {\n            const items = reorder(state[sInd].cards, source.index, destination.index);\n            const newState = [...state];\n            newState[sInd].cards = items;\n            setState(newState);\n            onDragCard(newState)\n        } else {\n            // console.log('state[dInd]', state);\n            const result = move(state[sInd].cards, state[dInd].cards, source, destination);\n            const newState = [...state];\n            newState[sInd].cards = result[sInd];\n            newState[dInd].cards = result[dInd];\n            setState(newState);\n            onDragCard(newState)\n            // setState(newState.filter(group => group.length));\n        }\n    }\n    return <article className=\"group-list\">\n        <DragDropContext onDragEnd={onDragEnd}>\n\n            {groups.map((group, idx) => {\n                return <GroupPreview key={group.id} group={group} idx={idx} onAddCard={onAddCard} />\n            })\n            }\n            {/* <DragDropContext> */}\n\n        </DragDropContext>\n    </article>\n\n}\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return result;\n};\n\nconst mapStateToProps = (state) => ({\n    board: state.boardModule.currBoard\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupList)\n","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardHeader.jsx",["124"],"import React, { Component } from 'react'\nimport { BoardFilter } from './BoardFilter'\nimport { utilService } from '../services/utilService'\n\nexport class BoardHeader extends Component {\n\n\n  render() {\n    const { title, members } = this.props\n    return (\n      <header className=\"app-header flex space-between\">\n        <h1>{title}</h1>\n        <div className=\"header-members flex\">\n        <ul className=\"member-list flex\">\n          {members.map(member => {\n            return <li key={member._id} className=\"header-member\">\n              {utilService.convertName(member.fullname)}\n            </li>\n          })}\n        </ul>\n        <div className=\"add-member\">\n        <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625640/add-user_qxgidw.png\" alt=\"\"/>\n        </div>\n        </div>\n        {/* <BoardFilter /> */}\n        <button className=\"board-header-btn flex space-around\">\n        <h3>Statistics</h3>\n        <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610626728/pie-chart_fnvwct.png\" alt=\"\"/>\n        </button>\n      </header>\n    )\n  }\n\n}","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\GroupAdd.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\services\\utilService.js",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\GroupPreview.jsx",["125","126","127","128"],"import React, { useState } from 'react'\nimport { CardList } from './CardList'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { CardAdd } from './CardAdd';\nimport { GroupTitle } from './GroupTitle';\n\nexport function GroupPreview({ group, idx, onAddCard }) {\n\n\n\n    return (\n        <div className=\"group-preview\">\n            {/* <h1 >{group.title}</h1> */}\n            <GroupTitle group={group} />\n            <CardList cards={group.cards} id={idx} group={group} grpTitle={group.title} groupId={group.id} />\n            <CardAdd groupId={group.id} onAddCard={onAddCard} />\n        </div>\n    )\n}\n","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\CardList.jsx",["129","130","131"],"import React, { useState } from 'react'\nimport { CardPreview } from \"./CardPreview.jsx\"\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nexport function CardList({ cards, id, groupTitle, group }) {\n\n\n    // console.log(cards);\n    if (!cards) return <div>Loading Cards...</div>\n    return <article className=\"card-list\">\n\n        <Droppable key={id} droppableId={`${id}`}>\n            {(provided, snapshot) => (\n                <div\n\n                    ref={provided.innerRef}\n                    style={getListStyle(snapshot.isDraggingOver)}\n                    {...provided.droppableProps}\n                >\n                    {cards.map((card, index) => {\n                        return (\n                            <CardPreview key={card.id} card={card} group={group} index={index} groupId={id} groupTitle={groupTitle} />\n                        )\n                    })}\n                    {provided.placeholder}\n                </div>\n            )}\n        </Droppable>\n\n    </article >\n\n}\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    padding: 5,\n    width: 260,\n\n});\n","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\GroupTitle.jsx",["132"],"import React, { Component } from 'react'\nimport { loadBoard, saveBoard } from '../store/actions/boardAction'\nimport { boardService } from '../services/boardService';\nimport { connect } from 'react-redux'\n\nexport class _GroupTitle extends Component {\n\n    state = {\n        groupIdx: null,\n        group: {\n            title: this.props.group.title,\n\n        }\n    }\n\n    componentDidMount() {\n        const groupId = this.props.group.id\n        const { board } = this.props\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\n        this.setState({ groupIdx })\n    }\n\n    handleInput = ({ target }) => {\n        const { name } = target\n        const value = target.value\n        this.setState(prevState => {\n            return {\n                group: {\n                    ...prevState.group,\n                    [name]: value\n                }\n            }\n        })\n    }\n\n    onSaveTitle = async (ev) => {\n        ev.preventDefault()\n        const { board } = this.props\n        const { title } = this.state.group\n        const boardCopy = { ...board }\n        boardCopy.groups[this.state.groupIdx].title = title\n        await this.props.saveBoard(boardCopy)\n    }\n\n\n    render() {\n        const { group } = this.state\n        return <section className=\"group-title\">\n            <form onBlur={this.onSaveTitle}>\n                <input type=\"text\" name=\"title\" value={group.title} onChange={this.handleInput}\n                    className=\"my-input\" placeholder=\"Enter group title...\" autoComplete=\"off\" />\n            </form>\n        </section>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.currBoard,\n        // filterBy: state.boardModule.filterBy,\n        // loggedInUser: state.userModule.loggedInUser,\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoard,\n    saveBoard,\n}\n\n\n\nexport const GroupTitle = connect(mapStateToProps, mapDispatchToProps)(_GroupTitle);","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\CardAdd.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\CardPreview.jsx",["133","134"],"import React, { Component } from 'react'\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { CardDetails } from './CardDetails'\nimport { utilService } from '../services/utilService'\n\n\nexport class CardPreview extends Component {\n\n    state = {\n        isDetailsShown: false,\n        isLableTitleShown: false\n    }\n\n    toggleDetails = () => {\n        this.setState({ isDetailsShown: !this.state.isDetailsShown })\n    }\n\n    toggleLableTitle = (ev) => {\n        ev.stopPropagation()\n        this.setState({ isLableTitleShown: !this.state.isLableTitleShown })\n    }\n\n\n\n    render() {\n        const { card, index, groupTitle, group } = this.props\n        const { isLableTitleShown } = this.state\n        return (\n            <div className=\"card-preview\">\n                {this.state.isDetailsShown &&\n                    <React.Fragment>\n                        <div className=\"modalcover\" onClick={(ev) => this.toggleDetails(ev, true)}> </div>\n                        <CardDetails card={card} group={group} groupTitle={groupTitle} />\n                    </React.Fragment>}\n\n                <Draggable key={card.id} draggableId={card.id} index={index}>\n                    {(provided, snapshot) => (\n                        <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            // isDragging={snapshot.isDragging && !snapshot.isDropAnimating}\n                            // style={getItemStyle(snapshot.isDragging, provided.draggableProps.style, snapshot)}\n                            style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\n                            onClick={() => this.toggleDetails('ev', false)}\n                        >\n                            {card.labels && <div className=\"label-conyainer flex\">\n                                {card.labels.map(label => {\n                                    return <div key={label.id} style={{ backgroundColor: label.color }} className={isLableTitleShown? 'card-label-open' :'card-label'} onClick={this.toggleLableTitle}>\n                                        {isLableTitleShown && label.title }\n                                    </div>\n                                })}\n                            </div>}\n                            {card.title}\n                            <div className=\"card-extras-container flex space-between\">\n                                {card.dueDate &&  <div className=\"date-container flex\">\n                                    <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"\"/>\n                                    <p className=\"date\">{utilService.getDueDate(card.dueDate)}</p></div> }\n                                {card.members && <div className=\"members-container flex\">\n                                {card.members.map(member => {\n                                    return <div key={member._id} className=\"member\">\n                                        {utilService.convertName(member.fullname)}\n                                    </div>\n                                })}\n                            </div>}\n\n                            </div>\n\n\n\n                        </div>\n                    )}\n\n                </Draggable>\n\n            </div>\n        )\n    }\n}\n\n// function getItemStyle(isDragging, draggableStyle, snapshot) {\n//     if (!snapshot.isDropAnimating) {\n//         return draggableStyle;\n//     }\n//     // some basic styles to make the items look a bit nicer\n//     const userSelect = \"none\"\n//     const padding = 8 * 2\n//     const margin = `0 0 8px 0`\n//     const { moveTo, curve, duration } = snapshot.dropAnimation;\n//     // change background colour if dragging\n//     const background = isDragging ? \"green\" : \"grey\"\n//     const translate = `translate(${moveTo.x - 10}px, ${moveTo.y - 10}px)`;\n//     const transform = `${translate}`\n//     const transition = `all ${curve} ${duration + 1}s`\n//     return {\n//         ...draggableStyle,\n//         userSelect, padding, margin, background,\n//         transform, transition\n\n//     }\n\n// };\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: 8 * 2,\n    margin: `0 0 ${8}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? \"red\" : \"grey\",\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});","C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\CardDetails.jsx",[],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\CardHeader.jsx",[],["135","136"],"C:\\_download\\coding academy\\Sprint4-day2\\trello\\Frontend\\src\\cmps\\BoardFilter.jsx",["137","138","139"],"import React, { Component } from 'react'\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import Select from '@material-ui/core/Select';\r\n// import Input from '@material-ui/core/Input';\r\n\r\nexport class BoardFilter extends Component {\r\n\r\n    state = {\r\n        filterBy: {\r\n            title: '',\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        // this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }), () => {\r\n        //     this.props.onSetFilter(this.state.filterBy)\r\n        // })\r\n    }\r\n\r\n    render() {\r\n        const { filterBy } = this.state\r\n        return (\r\n            <section className=\"board-filter\">\r\n                {/* <Input type=\"text\" name=\"name\" value={filterBy.name} onChange={this.handleChange} placeholder=\"Filter by title...\" /> */}\r\n            </section>\r\n        )\r\n\r\n    }\r\n\r\n}",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":17},{"ruleId":"144","severity":1,"message":"148","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"149","line":3,"column":27,"nodeType":"146","messageId":"147","endLine":3,"endColumn":36},{"ruleId":"144","severity":1,"message":"150","line":4,"column":27,"nodeType":"146","messageId":"147","endLine":4,"endColumn":36},{"ruleId":"144","severity":1,"message":"151","line":4,"column":38,"nodeType":"146","messageId":"147","endLine":4,"endColumn":47},{"ruleId":"144","severity":1,"message":"152","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":21},{"ruleId":"144","severity":1,"message":"153","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"154","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":25},{"ruleId":"144","severity":1,"message":"150","line":3,"column":27,"nodeType":"146","messageId":"147","endLine":3,"endColumn":36},{"ruleId":"144","severity":1,"message":"151","line":3,"column":38,"nodeType":"146","messageId":"147","endLine":3,"endColumn":47},{"ruleId":"144","severity":1,"message":"153","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"154","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":25},{"ruleId":"144","severity":1,"message":"151","line":3,"column":38,"nodeType":"146","messageId":"147","endLine":3,"endColumn":47},{"ruleId":"144","severity":1,"message":"155","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":22},{"ruleId":"144","severity":1,"message":"154","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":25},{"ruleId":"144","severity":1,"message":"150","line":2,"column":27,"nodeType":"146","messageId":"147","endLine":2,"endColumn":36},{"ruleId":"140","replacedBy":"156"},{"ruleId":"142","replacedBy":"157"},{"ruleId":"144","severity":1,"message":"158","line":16,"column":15,"nodeType":"146","messageId":"147","endLine":16,"endColumn":20},{"ruleId":"144","severity":1,"message":"159","line":17,"column":15,"nodeType":"146","messageId":"147","endLine":17,"endColumn":20},{"ruleId":"144","severity":1,"message":"160","line":25,"column":17,"nodeType":"146","messageId":"147","endLine":25,"endColumn":25},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useEffect' is defined but never used.","'Droppable' is defined but never used.","'Draggable' is defined but never used.","'BoardFilter' is defined but never used.","'useState' is defined but never used.","'DragDropContext' is defined but never used.","'boardService' is defined but never used.",["161"],["162"],"'field' is assigned a value but never used.","'value' is assigned a value but never used.","'filterBy' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]