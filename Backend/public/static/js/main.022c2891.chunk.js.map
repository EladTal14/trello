{"version":3,"sources":["services/httpService.js","services/sessionStorage.js","services/userService.js","store/actions/userAction.js","services/boardService.js","services/socketService.js","store/actions/boardAction.js","services/utilService.js","cmps/BoardHeader/AddBoard.jsx","cmps/AppHeader.jsx","cmps/BoardPreview.jsx","pages/Boards.jsx","cmps/AddMember.jsx","cmps/BoardHeader/BoardColors.jsx","cmps/BoardHeader/BoardPhotos.jsx","cmps/BoardHeader/ChangeBackground.jsx","cmps/BoardHeader/BoardMenu.jsx","cmps/BoardHeader/BoardHeader.jsx","cmps/Group/GroupAdd.jsx","services/eventBusService.js","cmps/Card/CardPreviewLabel.jsx","cmps/Card/CardPreviewBottom.jsx","cmps/Card/CardPreview.jsx","store/actions/cardAction.js","cmps/Card/CardAdd.jsx","cmps/Card/CardList.jsx","cmps/Group/GroupTitle.jsx","cmps/Group/GroupPreview.jsx","cmps/Group/GroupList.jsx","cmps/Card/CardHeader.jsx","cmps/Card/CardActivityContainer.jsx","services/cardService.js","cmps/Card/CardChecklist.jsx","cmps/Card/CardInfo.jsx","services/cloudinaryService.js","cmps/Card/CardCover.jsx","cmps/Card/CardLabels.jsx","cmps/Card/DatePicker.jsx","cmps/Card/CardSide.jsx","services/activityService.js","cmps/Card/CardDetails.jsx","cmps/Card/CardPreviewDetails.jsx","pages/BoardApp.jsx","pages/Login.jsx","pages/Login1.jsx","pages/Signup.jsx","pages/DashBoard.jsx","App.jsx","store/reducers/boardReducer.js","store/reducers/cardReducer.js","store/reducers/userReducer.js","store/store.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","storageService","store","key","value","sessionStorage","JSON","stringify","load","defaultValue","parse","clear","STORAGE_KEY","userService","query","login","logout","signup","loadUser","credentials","user","_handleLogin","newUser","loadUsers","dispatch","users","type","userCred","boardService","remove","boardId","save","board","_id","getBoardById","getGroupIdxById","groupId","groupIdx","groups","findIndex","group","id","socketService","socket","setup","io","on","eventName","cb","off","emit","terminate","createSocketService","loadBoard","saveBoard","isRenderSocket","savedBoard","utilService","getRandomInt","makeId","length","text","possible","i","charAt","Math","floor","random","createTime","timeNow","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","timeString","getDueDate","timeStamp","stampDate","month","getMonth","day","getDate","convertName","fullname","letterName","names","split","toUpperCase","getTodoProgress","card","checklist","todos","doneTodos","filter","todo","isDone","total","done","getRandomColor","min","max","ceil","AddBoard","state","title","imgUrlLarge","imgUrlmedium","mounted","picked","onClose","setState","bgColors","setBgcImg","idx","prevState","onAddBoard","style","backgroundImage","backgroundImagePreview","props","addBoard","handleInput","target","name","this","CSSTransition","in","classNames","timeout","onExited","toggleAddBoard","className","onClick","map","color","src","alt","onChange","placeholder","autoComplete","Component","_AppHeader","loggedInUser","isAddBoardShow","newBoardId","history","push","prevProps","to","mapDispatchToProps","AppHeader","connect","userModule","boardModule","currBoard","withRouter","BoardPreview","width","backgroundColor","backgroundRepeat","backgroundSize","backgroundPosition","_Boards","loadBoards","boards","Boards","_AddMember","filterBy","handleChange","field","onSetUserFilter","onToggleUser","onUpdateMembers","members","toggleMembers","Input","currUser","AddMember","_BoardColors","imgUrl","getImgForBgc","toggleMenu","BoardColors","_BoardPhotos","photos","imgUrlSmall","useImgForBgc","photo","BoardPhotos","ChangeBackground","bgcFrom","chooseBgcFrom","from","onChangeBackground","_BoardMenu","mainRef","isChanging","ev","stopPropagation","ref","opacity","visibility","activities","activity","byMember","toGroup","txt","date","createdAt","BoardMenu","_BoardHeader","isWrapper","isMoreMembersShown","current","boardMenuVisibility","React","createRef","onSaveTitle","preventDefault","member","memberIdx","currMember","splice","currBoardId","onSubmit","onBlur","TransitionGroup","BoardHeader","GroupAdd","isAddOpen","openInput","closeInput","onSaveGroup","cards","onAddGroup","onScroll","autoFocus","eventBusService","listener","callListener","detail","addEventListener","removeEventListener","dispatchEvent","CustomEvent","CardPreviewLabel","isLableTitleShown","toggleLableTitle","labels","label","require","CardPreviewBottom","progress","Object","keys","dueDate","comments","_CardPreview","onShowCard","setCard","setGroup","showPreviewDetails","index","draggableId","provided","snapshot","draggableProps","innerRef","dragHandleProps","getItemStyle","isDragging","isDraggingOver","draggableStyle","userSelect","padding","margin","borderRadius","background","boxShadow","err","CardPreview","currCard","cardModule","CardAdd","setTimeout","onSaveCard","onAddCard","required","cols","rows","onMouseDown","CardList","scrollTop","getListStyle","paddingTop","paddingBottom","paddingLeft","position","scrolltobottom","refCard","groupTitle","refs","droppableId","droppableProps","_GroupTitle","textInput","updateBoard","dragHandle","GroupTitle","GroupPreview","height","grpTitle","GroupList","CardHeader","onHandleInputChange","spellCheck","_CardActivityContainer","isSaveOpen","newComment","onHandleCommentChange","onToggleIsSaveOpen","isOpen","createComment","now","onSaveNewComment","comment","commentsCopy","unshift","Array","onHandleActivitiesChange","CardActivityContainer","cardService","createTodo","createChecklist","CardChecklist","newTodoTitle","onHandleTitleChange","onHandleChecklistChange","onHandleTodosChange","checked","updatedTodos","saveTodos","onRemoveTodo","addOrCancelChecklist","todosCopy","saveNewTodo","todoToSave","onHandleNewTodoChange","toggleIsAddOpen","progressBarPrecentage","acc","forEach","todosPrecent","CardInfo","moment","format","description","cloudinaryService","uploadImg","file","UPLOAD_URL","formData","FormData","append","fetch","body","json","CardCover","isUploading","coverColors","onUploadImg","files","secure_url","onFinishUpload","setColor","onUpdateCoverColor","toggleCoverMenu","htmlFor","hidden","accept","_CardLabels","isCreateLabel","currLabel","colors","onEditClick","onHandleNewLabel","val","onToggleLabel","onAddLabel","labelsCopy","onHandleLabelsChange","clearNewLabel","onChooseLabel","checkForDuplicate","removeLabel","find","isClose","onToggleLabels","checkForMark","onRemoveLabel","toggleLabelMenu","CardLabels","DatePicker","onSavedueDate","substring","toggleDate","zIndex","CardSide","isDateShown","isLabelsShown","isLabelsMenuShown","isCoverMenuShown","onRemoveCard","onAddChecklist","saveChanges","onUploadCardCoverImg","activityService","createActivity","action","moveTo","_CardDetails","initialCard","checklistValidation","isActivityUpdate","sendUpdatedBoard","cardIdx","currGroup","toggleDetails","newCard","onDeleteCover","usersForDisplay","filterRegex","RegExp","test","clearState","CardDetails","_CardPreviewDetails","userClicked","isChangeMembers","isChangeDueDate","modalRef","modalLabelRef","closeModal","showPreviewCardDetails","showMembers","showDueDate","onUpdateCard","copyCard","updatedCard","isSave","top","left","right","bottom","y","x","wrap","flexGrow","textAlign","CardPreviewDetails","_BoardApp","isDetailsShown","scrollLeft","isPreviewDetailsShown","refBoard","match","params","copyBoard","isUpdate","updatedLabels","onDragCard","sourceGroup","destinationGroup","onDragEnd","result","destination","source","dragGroup","draggingCard","scrolltoleft","clientX","clientY","eventBusTerminate","eventBusLabelTerminate","eventBusRemoveTerminate","eventBusShowPreviewDetailsTerminate","cleanBoard","direction","BoardApp","_Login","username","password","onLogin","Container","component","maxWidth","CssBaseline","marginTop","display","flexDirection","alignItems","Avatar","Typography","variant","TextField","fullWidth","Button","Grid","container","item","xs","Link","href","Box","mt","Login","_Login1","initialValues","isSubmitting","as","disabled","Login1","_Signup","onSignUpUser","Signup","_DashBoard","showTaskPerGroup","mapGroup","reduce","values","datasets","hoverBackgroundColor","showTaskPerLabel","mapLabels","showTotalCards","cardNum","cardUnassignedNum","flexWrap","options","scales","yAxes","stacked","gridLines","xAxes","fontSize","legend","fontColor","DashBoard","App","path","Home","initialState","getItem","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","theStore","subscribe","getState","Boolean","hostname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.022c2891.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n// : '//localhost:3030/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","export const storageService = {\r\n  store,\r\n  load,\r\n  clear\r\n}\r\n\r\nfunction store(key, value) {\r\n  sessionStorage[key] = JSON.stringify(value);\r\n\r\n}\r\n\r\nfunction load(key, defaultValue = null) {\r\n  let value = sessionStorage[key];\r\n  if (!value) return defaultValue\r\n  else return JSON.parse(value);\r\n}\r\n\r\n\r\nfunction clear() {\r\n  sessionStorage.clear()\r\n}\r\n\r\n","import { httpService } from './httpService.js'\r\nimport { storageService } from './sessionStorage.js'\r\n\r\nconst STORAGE_KEY = 'loggedinUser'\r\n\r\nexport const userService = {\r\n    query,\r\n    login,\r\n    logout,\r\n    signup,\r\n    loadUser\r\n}\r\n\r\n\r\n\r\n// const baseUrl = 'http://localhost:3030/api/user'\r\n// const baseUrl = 'http://localhost:3030/user'\r\n// const baseUrl = 'http://localhost:3030/api/auth';\r\n\r\nasync function query() {\r\n    return httpService.get(`user`)\r\n}\r\n\r\nasync function login(credentials) {\r\n    //loadUser()\r\n    const user = await httpService.post(`auth/login`, credentials);\r\n    return _handleLogin(user);\r\n}\r\n\r\nasync function logout() {//check with liel how to do this\r\n    storageService.clear();\r\n    await httpService.post(`auth/logout`);\r\n}\r\n\r\n\r\nasync function signup(credentials) {\r\n    // console.log('credentials', credentials)\r\n    const newUser = await httpService.post(`auth/signup`, credentials);\r\n    return _handleLogin(newUser);\r\n}\r\n\r\nasync function loadUser() {\r\n    const user = storageService.load(STORAGE_KEY)\r\n    // console.log('user', user);\r\n    return user\r\n}\r\nfunction _handleLogin(user) {\r\n    storageService.store(STORAGE_KEY, user)\r\n    return user\r\n}","import { userService } from '../../services/userService.js'\r\n\r\n\r\nexport function loadUsers() {\r\n    return async (dispatch) => {\r\n        try {\r\n            const users = await userService.query()\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('err userAction LOAD users', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function login(userCred) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.login(userCred)\r\n            dispatch({ type: 'LOGIN', user })\r\n        } catch (err) {\r\n            console.log('err userAction LOGIN USER', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return async (dispatch) => {\r\n        try {\r\n            await userService.logout()\r\n            dispatch({ type: 'LOGOUT' })\r\n        } catch (err) {\r\n            console.log('err userAction LOGOUT USER', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function signup(userCred) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.signup(userCred)\r\n            dispatch({ type: 'SIGNUP', user })\r\n        } catch (err) {\r\n            console.log('err userAction SIGNUP USER', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadUser(userCred) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.loadUser(userCred)\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('err userAction LOAD USER', err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function setUserFilter(filterBy) {\r\n    return (dispatch) => { dispatch({ type: 'FILTER', filterBy }) }\r\n}","import { httpService } from './httpService.js'\r\n\r\nexport const boardService = {\r\n    query,\r\n    remove,\r\n    save,\r\n    getBoardById,\r\n    getGroupIdxById,\r\n}\r\n\r\nfunction query() {\r\n    return httpService.get(`board`)\r\n}\r\n\r\nfunction remove(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\nfunction save(board) {\r\n    if (board._id) {\r\n        return httpService.put(`board/${board._id}`, board)\r\n    } else {\r\n        return httpService.post('board', board)\r\n    }\r\n}\r\n\r\nfunction getBoardById(boardId) {\r\n    return httpService.get(`board/${boardId}`)\r\n}\r\n\r\nasync function getGroupIdxById(boardId, groupId) {\r\n    try {\r\n        const board = await getBoardById(boardId)\r\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n        return groupIdx\r\n    } catch (err) {\r\n        console.log('err boardService GET GROUP IDX BY ID', err)\r\n    }\r\n}\r\n\r\n","import io from 'socket.io-client'\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb) {\r\n      socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\n// function cb(x) { console.log(x) }\r\n// socketService.on('baba', cb)\r\n// socketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n","import { boardService } from '../../services/boardService.js'\r\nimport { socketService } from '../../services/socketService.js';\r\n\r\nexport function loadBoards() { // Action Creator\r\n    return async (dispatch) => {\r\n        try {\r\n            const boards = await boardService.query()\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('err boardAction LOAD BOARDS', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadBoard(boardId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const board = await boardService.getBoardById(boardId)\r\n            console.log('board from DISPATCH', board)\r\n            dispatch({ type: 'SET_BOARD', board })\r\n        } catch (err) {\r\n            console.log('err boardAction LOAD BOARD', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function saveBoard(board, isRenderSocket = false) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const savedBoard = await boardService.save(board)\r\n            // console.log('savedBoard', savedBoard);\r\n            if (!isRenderSocket) {\r\n                socketService.emit('render', board)\r\n                // socketService.emit('render', board)\r\n            }\r\n            dispatch({ type: (board._id) ? 'UPDATE_BOARD' : 'ADD_BOARD', board: savedBoard })\r\n        } catch (err) {\r\n            console.log('err boardAction SAVE BOARD', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function cleanBoard() {\r\n    return (dispatch) => {\r\n        try {\r\n            dispatch({ type: 'CLEAN_BOARD' })\r\n        } catch (err) {\r\n            console.log('err boardAction CLEAN BOARD', err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","export const utilService = {\r\n  getRandomInt,\r\n  makeId,\r\n  createTime,\r\n  getDueDate,\r\n  convertName,\r\n  getTodoProgress,\r\n  getRandomColor\r\n}\r\n\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 7) {\r\n  var text = \"\";\r\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  for (var i = 0; i < length; i++) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return text;\r\n}\r\n\r\nfunction createTime() {\r\n  var timeNow = new Date();\r\n  var hours = timeNow.getHours();\r\n  var minutes = timeNow.getMinutes();\r\n  var seconds = timeNow.getSeconds();\r\n  var timeString = \"\" + ((hours > 12) ? hours - 12 : hours);\r\n  timeString += ((minutes < 10) ? \":0\" : \":\") + minutes;\r\n  timeString += ((seconds < 10) ? \":0\" : \":\") + seconds;\r\n  return timeString;\r\n}\r\n\r\nfunction getDueDate(timeStamp) {\r\n  var stampDate = new Date(timeStamp);\r\n  const allMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\",\r\n    \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n  const month = allMonths[stampDate.getMonth()]\r\n  const day = stampDate.getDate()\r\n  const date = `${month} ${day}`\r\n  return date\r\n}\r\n\r\nfunction convertName(fullname) {\r\n  if (!fullname) return\r\n  let letterName;\r\n  const names = fullname.split(' ')\r\n  if (!names[1]) letterName = names[0][0].toUpperCase()\r\n  else letterName = names[0][0].toUpperCase() + names[1][0].toUpperCase()\r\n  return letterName\r\n}\r\n\r\nfunction getTodoProgress(card) {\r\n  if (card.checklist) {\r\n    const { todos } = card.checklist\r\n    let doneTodos = todos.filter(todo => todo.isDone)\r\n    const progress = { total: todos.length, done: doneTodos.length }\r\n    return progress\r\n  }\r\n  else return\r\n\r\n}\r\nfunction getRandomColor() {\r\n  var colors = ['#f9ed69', '#f08a5d', '#54e346', '#00adb5', '#6a2c70', '#b83b5e']\r\n\r\n  return colors[getRandomInt(0, 6)];\r\n}\r\n","import React, { Component } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nexport class AddBoard extends Component {\r\n\r\n    state = {\r\n        board: {\r\n            title: '',\r\n            imgUrlLarge: '',\r\n            imgUrlmedium: ''\r\n        },\r\n        mounted: false,\r\n        picked: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ mounted: true })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({ mounted: false })\r\n    }\r\n\r\n    // coverColors = () => {\r\n    //     return ['#f9ed69', '#a56cc1', '#f38181', '#95e1d3', '#878ecd', '#3fc1c9',\r\n    //         '#a1dd70', '#ffcc29']\r\n    // }\r\n\r\n    bgColors = () => {\r\n\r\n        return [{ imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg'},\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg'},\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg'},\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg'},\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712052/pexels-pixabay-461940_znnsxj.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610712052/pexels-pixabay-461940_znnsxj.jpg'},\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/green-1_rp1fjx.jpg', imgUrlmedium:'https://res.cloudinary.com/basimgs/image/upload/v1611084082/green-1_rp1fjx.jpg' },\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/cooldownpink_y0m0db.jpg', imgUrlmedium:'https://res.cloudinary.com/basimgs/image/upload/v1611084082/cooldownpink_y0m0db.jpg' },\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/mizu_qlr5uq.png', imgUrlmedium:'https://res.cloudinary.com/basimgs/image/upload/v1611084082/mizu_qlr5uq.png' },\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/0322_purple_hkmphn.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/0322_purple_hkmphn.jpg'}]\r\n      }\r\n\r\n    setBgcImg = (imgUrlLarge, imgUrlmedium, idx) => {\r\n        console.log('the chosen url is', imgUrlLarge);\r\n        this.setState(prevState => {\r\n            return {board: { ...prevState.board, imgUrlLarge, imgUrlmedium}}\r\n        })\r\n        this.setState({ picked: idx })\r\n    }\r\n\r\n    onAddBoard = () => {\r\n        const { title, imgUrlLarge, imgUrlmedium } = this.state.board\r\n        const board = { title, style: {backgroundImage: imgUrlLarge, backgroundImagePreview: imgUrlmedium} }\r\n        this.props.addBoard(board)\r\n        this.onClose()\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const { name } = target\r\n        const { value } = target\r\n        this.setState(prevState => {\r\n            return {\r\n                board: {\r\n                    ...prevState.board,\r\n                    [name]: value\r\n                }\r\n            }\r\n        }, () => console.log('input title',this.state.board.title ))\r\n    }\r\n\r\n    render() {\r\n        const { mounted, picked } = this.state\r\n        return (\r\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleAddBoard}>\r\n            <div className=\"new-board-modal flex column\">\r\n            <div className=\"new-board-header flex space-around\">\r\n                <h3>Create New Board</h3><button onClick={this.onClose}>✕</button>\r\n            </div>\r\n                <div className=\"board-cover-colors\">\r\n                        {this.bgColors().map((color, idx) => {\r\n                            return <div className={(picked === idx)? \"new-board-color picked\": \"new-board-color\"} key={idx}\r\n                                onClick={() => this.setBgcImg(color.imgUrlLarge ,color.imgUrlmedium, idx)}><img src={color.imgUrlmedium} alt=\"\"/></div>\r\n                        })}\r\n                </div>\r\n                <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInput}\r\n                    className=\"add-board-input\" placeholder=\"Enter a board title...\" autoComplete=\"off\"/>\r\n                    <button onClick={this.onAddBoard} className=\"create-board-btn\">Create board</button>\r\n            </div>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n}\r\n","import { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Component } from 'react'\r\nimport { logout, loadUser } from '../store/actions/userAction.js'\r\nimport { saveBoard } from '../store/actions/boardAction'\r\nimport { utilService } from '../services/utilService.js'\r\nimport { AddBoard } from './BoardHeader/AddBoard.jsx'\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass _AppHeader extends Component {\r\n\r\n  state = {\r\n    loggedInUser: null,\r\n    isAddBoardShow: false,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // console.log(this.props);\r\n    const user = await this.props.loadUser()\r\n    if (user) this.setState({ loggedInUser: user })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // console.log('prevProps', prevProps);\r\n    // console.log('prevState', prevState);\r\n    // console.log('state', this.state);\r\n    if (this.props.loggedInUser !== this.state.loggedInUser)\r\n      this.setState({ loggedInUser: this.props.loggedInUser })\r\n  }\r\n\r\n  toggleAddBoard = () => {\r\n    this.setState({ isAddBoardShow: !this.state.isAddBoardShow })\r\n  }\r\n\r\n  addBoard = async (board) => {\r\n    await this.props.saveBoard(board)\r\n    const newBoardId = this.props.board._id\r\n    console.log('newBoardId', newBoardId)\r\n    this.props.history.push(`/`)\r\n    this.props.history.push(`board/${newBoardId}`)\r\n  }\r\n\r\n  render() {\r\n    // window.loggedInUser = this.state\r\n    const { loggedInUser, isAddBoardShow } = this.state\r\n    // if (!loggedInUser) return <div>Loading...</div>\r\n    // console.log('LOGGED IN USER', loggedInUser);\r\n    return (\r\n      <>\r\n        {isAddBoardShow && <AddBoard addBoard={this.addBoard} toggleAddBoard={this.toggleAddBoard} />}\r\n        <header className=\"app-header flex space-between\">\r\n          <nav>\r\n            <ul className=\"header-list flex justify-center\">\r\n              <li ><Link to=\"/\" className=\"home-btn\"><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/home_seebre.png\" alt=\"\" /></Link></li>\r\n              <li ><Link to=\"/boards\" className=\"boards-btn\">Boards</Link></li>\r\n            </ul>\r\n          </nav>\r\n          <li ><Link to=\"/\" className=\"header-title\">Trello</Link></li>\r\n          <div className=\"header-right flex\">\r\n            <button className=\"header-add-board-btn\" onClick={this.toggleAddBoard}><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/plus_ljzrkm.png\" alt=\"\" /></button>\r\n            {loggedInUser && <> <div className=\"header-user-logged-in\">{utilService.convertName(loggedInUser.fullname)}</div> <button className=\"header-log-board-btn\" onClick={this.props.logout}> Logout</button></>}\r\n            {!loggedInUser && <>  <div className=\"header-user-logged-in\">{'G '} </div> <button className=\"header-log-board-btn\"><Link to=\"/login\">Login</Link></button></>}\r\n          </div>\r\n        </header>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapGlobalStateToProps = (state) => {\r\n  return {\r\n    loggedInUser: state.userModule.loggedInUser,\r\n    board: state.boardModule.currBoard\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  logout,\r\n  loadUser,\r\n  saveBoard,\r\n}\r\n\r\nexport const AppHeader = connect(mapGlobalStateToProps, mapDispatchToProps)(withRouter(_AppHeader))\r\n","import { Link } from 'react-router-dom'\r\n\r\nexport function BoardPreview({ board }) {\r\n    return (\r\n        <Link style={{ width: '280px' }} to={`/board/${board._id}`}>\r\n            <div style={{\r\n                backgroundImage: `url(${board.style.backgroundImagePreview})`, backgroundColor: \"#6DB3F2\",\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                // background: \"linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.65) 100%)\",\r\n            }} className=\"board-preview\">\r\n                <h1 >{board.title}</h1>\r\n            </div>\r\n        </Link>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardPreview } from '../cmps/BoardPreview'\r\nimport { loadBoards, saveBoard } from '../store/actions/boardAction'\r\n\r\nexport class _Boards extends Component {\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    // componentDidUpdate(prevProps) {\r\n    //     if (this.props.boards === prevProps.boards && this.props.board) {\r\n    //         this.props.loadBoards()\r\n    //         console.log('this.props UPDATE', this.props)\r\n    //         // this.props.history.push(`board/${this.props.board._id}`)\r\n    //     }\r\n    // }\r\n\r\n    addBoard = async () => {\r\n        const board = { title: 'New Board', style: {} }\r\n        await this.props.saveBoard(board)\r\n        console.log('board to add new', board);\r\n        this.props.history.push(`board/${this.props.board._id}`)\r\n    }\r\n    // const board = { title: 'New Board' }\r\n    // await this.props.saveBoard(board, true)\r\n    // console.log('this.props', this.props.board._id)\r\n    // addBoard = async () => {\r\n    //     const board = { title: 'New Board' }\r\n    //     await this.props.saveBoard(board)\r\n    //     console.log('board', board)\r\n    //     this.props.history.push(`board/${this.props.board._id}`)\r\n    // }\r\n\r\n    render() {\r\n        const { boards } = this.props\r\n        const load = <p>Loading...</p>\r\n        if (!boards) return load\r\n        // console.log('this.props UPDATE', this.props)\r\n        return (\r\n            <div className=\"boards-page\">\r\n                <h2>Our Boards</h2>\r\n                <section className=\"boards-container\">\r\n                    <div className=\"new-board\" onClick={this.addBoard}><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/plus_ljzrkm.png\" alt=\"\" /></div>\r\n                    {boards.map(board => {\r\n                        return <BoardPreview key={board._id} board={board} />\r\n                    })}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardModule.boards,\r\n        board: state.boardModule.currBoard,\r\n        // loggedInUser: state.userModule.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    saveBoard,\r\n    // removeBoard,\r\n}\r\n\r\n\r\n\r\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../services/utilService'\r\nimport Input from '@material-ui/core/Input';\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nexport class _AddMember extends Component {\r\n\r\n    state = {\r\n        mounted: false,\r\n        filterBy: {\r\n            fullname: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ mounted: true })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({ mounted: false })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }), () => {\r\n            this.props.onSetUserFilter(this.state.filterBy)\r\n        })\r\n    }\r\n\r\n    onToggleUser = (user) => {\r\n        this.props.onUpdateMembers(user)\r\n        // console.log('check', user);\r\n    }\r\n\r\n    render() {\r\n        const { users, members } = this.props\r\n        const { filterBy, mounted } = this.state\r\n        // console.log('current members', members);\r\n        return (\r\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleMembers}>\r\n                <div className=\"members-container header-members\">\r\n                    <div className=\"add-member-header flex spase-between\">\r\n                        <h3>Members</h3>\r\n                        <button onClick={this.onClose} className=\"member-close-btn\">✕</button>\r\n                    </div>\r\n                    <Input type=\"text\" name=\"fullname\" value={filterBy.fullname} onChange={this.handleChange} placeholder=\"Search members...\" />\r\n                    <div className=\"new-member-list flex column\">\r\n                        {users.map(user => <div key={user._id} className=\"member-items flex space-between\" onClick={() => this.onToggleUser(user)}>\r\n                            <div className=\"flex space-between\"><div className=\"member-item\" style={{backgroundColor: user.color? user.color: \"#3f72af\"}}><span>{utilService.convertName(user.fullname)}</span>\r\n                            </div>\r\n                                <p>{user.fullname}</p></div>\r\n                            <button className={(members.findIndex(currUser => currUser._id === user._id) > -1) ?\r\n                                'checked-member' : 'unchecked-member'}>\r\n                                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610900476/checked_etlnj9.png\" alt=\"\" />\r\n                            </button>\r\n                        </div>)}\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // users: state.userModule.users\r\n        //   board: state.boardModule.currBoard,\r\n        // filterBy: state.boardModule.filterBy,\r\n        // loggedInUser: state.userModule.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const AddMember = connect(mapStateToProps, mapDispatchToProps)(_AddMember);\r\n","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../../store/actions/boardAction.js'\r\n\r\nclass _BoardColors extends Component {\r\n  bgColors = () => {\r\n\r\n    return [{ imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731294/blue_icz7cd.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731552/yellow_acyunw.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731568/yellow2_gakpte.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731599/green-1_h78uob.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731662/green-2_ura9cy.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731705/red-1_mrdvf7.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731707/red-2_vo74ot.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731757/gray-1_rpkrjg.png' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731759/gray-2_shnjdu.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731294/blue_icz7cd.jpg' },]\r\n  }\r\n  getImgForBgc = async (imgUrl) => {\r\n    const { currBoard } = this.props\r\n    currBoard.style.backgroundImage = imgUrl\r\n    await this.props.saveBoard(currBoard)\r\n    this.props.toggleMenu()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"board-colors flex justify-center\">\r\n        {this.bgColors().map((color, idx) => { return <div className=\"menu-img-box\" key={idx} ><img  className=\"board-colors-grid\" onClick={() => this.getImgForBgc(color.imgUrl)} src={color.imgUrl} alt=\"not good\" /></div> })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  currBoard: state.boardModule.currBoard\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  saveBoard,\r\n\r\n}\r\n\r\nexport const BoardColors = connect(mapStateToProps, mapDispatchToProps)(_BoardColors)\r\n","\r\nimport { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../../store/actions/boardAction.js'\r\nclass _BoardPhotos extends Component {\r\n\r\n \r\n  photos = () => {\r\n    return [{ imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712043/pexels-roberto-nickson-2885320_ghwa3m.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712043/pexels-roberto-nickson-2885320_ghwa3m.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712043/pexels-roberto-nickson-2885320_ghwa3m.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712043/pexels-vishnu-r-nair-1105666_nkvc5j.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712043/pexels-vishnu-r-nair-1105666_nkvc5j.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712043/pexels-vishnu-r-nair-1105666_nkvc5j.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712045/pexels-eberhard-grossgasteiger-844297_xsbtqx.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712045/pexels-eberhard-grossgasteiger-844297_xsbtqx.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712045/pexels-eberhard-grossgasteiger-844297_xsbtqx.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg'},\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712052/pexels-pixabay-461940_znnsxj.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712052/pexels-pixabay-461940_znnsxj.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712052/pexels-pixabay-461940_znnsxj.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611063807/pexels-pixabay-33545_zzzi4o.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611063807/pexels-pixabay-33545_zzzi4o.jpg' , imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611063807/pexels-pixabay-33545_zzzi4o.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611063800/pexels-steve-397857_n8hqga.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611063800/pexels-steve-397857_n8hqga.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611063800/pexels-steve-397857_n8hqga.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611063805/pexels-roberto-shumski-1903702_vtanbj.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611063805/pexels-roberto-shumski-1903702_vtanbj' , imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611063805/pexels-roberto-shumski-1903702_vtanbj' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712046/pexels-pixabay-2150_mujmra.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712046/pexels-pixabay-2150_mujmra.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712046/pexels-pixabay-2150_mujmra.jpg' },\r\n    ]\r\n  }\r\n\r\n\r\n  useImgForBgc = async (imgUrlLarge, imgUrlmedium) => {\r\n    const { currBoard } = this.props\r\n    currBoard.style.backgroundImage = imgUrlLarge\r\n    currBoard.style.backgroundImagePreview = imgUrlmedium\r\n    await this.props.saveBoard(currBoard)\r\n    this.props.toggleMenu()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"board-photos flex justify-center\">\r\n        {this.photos().map((photo, idx) => { return <div key={idx} className=\"menu-img-box\"><img onClick={() => this.useImgForBgc(photo.imgUrlLarge, photo.imgUrlmedium)} className=\"board-photos-grid\" src={photo.imgUrlSmall} alt=\"not good\" /></div>})}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currBoard: state.boardModule.currBoard\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  saveBoard,\r\n\r\n}\r\n\r\nexport const BoardPhotos = connect(mapStateToProps, mapDispatchToProps)(_BoardPhotos)\r\n","import { Component } from 'react'\r\nimport { BoardColors } from './BoardColors.jsx'\r\nimport { BoardPhotos } from './BoardPhotos.jsx'\r\n\r\nexport class ChangeBackground extends Component {\r\n  state = {\r\n    bgcFrom: null\r\n  }\r\n  chooseBgcFrom = (from) => {\r\n    this.setState({ bgcFrom: from })\r\n  }\r\n  render() {\r\n    const { onChangeBackground, toggleMenu } = this.props\r\n    const { bgcFrom } = this.state\r\n    return (\r\n      <>\r\n        <div className=\"change-bgc-back\"><button onClick={onChangeBackground}>back</button></div>\r\n        <div className=\"change-bgc flex justify-center\">\r\n          {/* <div className=\"change-bgc flex space-between\"> */}\r\n          {!bgcFrom &&\r\n            <div className=\"flex align-center\">\r\n              <div className=\"flex column align-center\"><div onClick={() => this.chooseBgcFrom('Photos')} className=\"photos-btn\" ></div>\r\n                <span>Photos</span>\r\n              </div>\r\n              <div className=\"flex column align-center\">\r\n                <div onClick={() => this.chooseBgcFrom('Colors')} className=\"colors-menu-btn\"></div>\r\n                <span>Colors</span></div>\r\n            </div>}\r\n          {bgcFrom === 'Photos' && <BoardPhotos toggleMenu={toggleMenu} />}\r\n          {bgcFrom === 'Colors' && <BoardColors toggleMenu={toggleMenu} />}\r\n\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n","import { Component } from 'react'\r\nimport { ChangeBackground } from './ChangeBackground.jsx'\r\nimport TimeAgo from 'react-timeago'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\nclass _BoardMenu extends Component {\r\n  render() {\r\n    const { toggleMenu, mainRef, onChangeBackground, isChanging, board } = this.props\r\n    return (\r\n      <div className=\"board-menu-screen flex justify-center\" onClick={ev => ev.stopPropagation()} ref={mainRef} style={{ opacity: '0', visibility: 'hidden', width: 0 }}>\r\n\r\n        <section className=\"menu-container\">\r\n          <div className=\"board-menu-header flex space-around\">\r\n            <h3 className=\"board-menu-title\">Menu</h3>\r\n            <h4 className=\"board-menu-close\" onClick={toggleMenu}>✕</h4>\r\n          </div>\r\n\r\n          {!isChanging &&\r\n            <>\r\n              <div className=\"bgc-change flex align-center\">\r\n                <button onClick={onChangeBackground}>Change Background</button>\r\n              </div>\r\n              <div className=\"side-activity-title\" >\r\n                <span>\r\n                  <img className=\"desc-img\" src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/left-align_qaakok.png\" alt=\"\" />\r\n                </span><p> Activity</p></div>\r\n\r\n              <section className=\"activities-wrapper\">\r\n                {board.activities && board.activities.map((activity, idx) => (\r\n                  <div className=\"activity-comment-wrapper flex\" key={idx}>\r\n                    <div className=\"member\">{activity.byMember ? utilService.convertName(activity.byMember.fullname) : 'G'}</div>\r\n\r\n                    <div className=\"activity-comment\">\r\n                      {!activity.toGroup && <p>{activity.byMember ? activity.byMember.fullname : 'Guest'}: {activity.txt}\r\n                        {activity.card?.title} {activity.group?.title}</p>}\r\n\r\n                      {activity.toGroup && <p>{activity.byMember ? activity.byMember.fullname : 'Guest'}: {activity.txt}\r\n                       from {activity.group.title} to {activity.toGroup.title}</p>}\r\n\r\n                      <TimeAgo className=\"activity-time\" date={activity.createdAt} />\r\n                    </div>\r\n                  </div>))}\r\n              </section>\r\n            </>\r\n          }\r\n          {isChanging && <ChangeBackground toggleMenu={toggleMenu} onChangeBackground={onChangeBackground} />}\r\n        </section>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boardModule.currBoard\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  // saveBoard,\r\n  // loadUsers,\r\n}\r\n\r\n\r\n\r\nexport const BoardMenu = connect(mapStateToProps, mapDispatchToProps)(_BoardMenu);","import React, { Component } from 'react'\r\nimport { utilService } from '../../services/utilService'\r\nimport { saveBoard } from '../../store/actions/boardAction'\r\nimport { loadUsers } from '../../store/actions/userAction'\r\nimport { connect } from 'react-redux'\r\n// import { ChangeBackground } from './ChangeBackground.jsx'\r\n// import { GroupAdd } from '../Group/GroupAdd'\r\nimport { socketService } from '../../services/socketService.js'\r\nimport { AddMember } from '../AddMember'\r\nimport { BoardMenu } from './BoardMenu'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class _BoardHeader extends Component {\r\n\r\n  state = {\r\n    board: {\r\n      title: ''\r\n    },\r\n    isChanging: false,\r\n    isWrapper: false,\r\n    isMoreMembersShown: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadUsers()\r\n    this.setState({ board: { title: this.props.board.title } })\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n\r\n    if (this.props.board.title !== prevProps.board.title) {\r\n      this.setState(prevState => ({\r\n        board: {\r\n          ...prevState.board,\r\n          title: this.props.board.title\r\n        }\r\n      }))\r\n    }\r\n\r\n  }\r\n\r\n\r\n  toggleMenu = () => {\r\n    const { current } = this.boardMenuVisibility\r\n    if (current.style.opacity === '0') {\r\n      current.style.opacity = '1'\r\n      current.style.visibility = 'visible'\r\n      current.style.width = '339px'\r\n\r\n    } else if (current.style.opacity === '1') {\r\n      current.style.opacity = '0'\r\n      current.style.visibility = 'hidden'\r\n      current.style.width = '0'\r\n    }\r\n    this.setState({ isChanging: false, isWrapper: !this.state.isWrapper })\r\n  }\r\n  onChangeBackground = () => {\r\n    this.setState({ isChanging: !this.state.isChanging })\r\n  }\r\n\r\n  boardMenuVisibility = React.createRef()\r\n\r\n  handleInput = ({ target }) => {\r\n    const { name } = target\r\n    const value = target.value\r\n    this.setState(prevState => {\r\n      return {\r\n        board: {\r\n          ...prevState.board,\r\n          [name]: value\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  onSaveTitle = async (ev) => {\r\n    ev.preventDefault()\r\n    const { board } = this.props\r\n    const { title } = this.state.board\r\n    board.title = title\r\n    await this.props.saveBoard(board)\r\n  }\r\n\r\n  toggleMembers = () => {\r\n    this.setState({ isMoreMembersShown: !this.state.isMoreMembersShown })\r\n  }\r\n\r\n  onUpdateMembers = async (member) => {\r\n    const { board } = this.props\r\n    const memberIdx = board.members.findIndex(currMember => currMember._id === member._id)\r\n    if (memberIdx > -1) {\r\n      board.members.splice(memberIdx, 1)\r\n    } else {\r\n      board.members.push(member)\r\n    }\r\n    await this.props.saveBoard(board)\r\n  }\r\n\r\n  onSetUserFilter = (filterBy) => {\r\n    console.log('filtermember by', filterBy)\r\n    // this.props.setUserFilter(filterBy)\r\n    // this.props.loadUsers(filterBy)\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    const { members, users } = this.props\r\n    const { board, isChanging, isWrapper, isMoreMembersShown } = this.state\r\n    const currBoardId = this.props.board._id\r\n    if (!board && !currBoardId) return <div>Loading ...</div>\r\n    return (\r\n      <>\r\n        {isMoreMembersShown && <div className=\"board-header-member-box\"><AddMember toggleMembers={this.toggleMembers} onUpdateMembers={this.onUpdateMembers}\r\n          onSetUserFilter={this.onSetUserFilter} members={members} users={users} /></div>}\r\n        <header className=\"board-header flex space-between\">\r\n          <div className=\"header-options flex\">\r\n            {/* <h2>{title}</h2> */}\r\n            <form onSubmit={this.onSaveTitle} onBlur={this.onSaveTitle} className=\"board-title-form flex space-between\">\r\n              <input type=\"text\" name=\"title\" value={board.title} onChange={this.handleInput}\r\n                className=\"board-title-input\" placeholder=\"Enter board title...\" autoComplete=\"off\" />\r\n            </form>\r\n            <Link to={`/board/${currBoardId}/dashboard`}>\r\n              <button className=\"board-header-btn flex space-around\">\r\n                <h3>Statistics</h3>\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610626728/pie-chart_fnvwct.png\" alt=\"\" />\r\n              </button>\r\n            </Link>\r\n            <div className=\"header-members flex\">\r\n              <ul className=\"member-list flex\">\r\n                <TransitionGroup className=\"members-list flex\">\r\n                  {members.map((member, idx) =>\r\n                    <CSSTransition key={idx} timeout={500} classNames=\"item\">\r\n                      <li key={member.fullname} className=\"header-member\" style={{ backgroundColor: member.color ? member.color : \"#3f72af\" }}>\r\n                        {utilService.convertName(member.fullname)}\r\n                      </li>\r\n                    </CSSTransition>\r\n                  )}\r\n                </TransitionGroup>\r\n              </ul>\r\n              <button className=\"add-member\" onClick={this.toggleMembers}>\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625640/add-user_qxgidw.png\" alt=\"\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* <BoardFilter /> */}\r\n          <BoardMenu\r\n            toggleMenu={this.toggleMenu}\r\n            mainRef={this.boardMenuVisibility}\r\n            onChangeBackground={this.onChangeBackground}\r\n            isChanging={isChanging}\r\n          />\r\n\r\n\r\n          {isWrapper && <div className=\"board-menu-wrapper\" onClick={(isWrapper) ? this.toggleMenu : () => { return }}>\r\n          </div>}\r\n          <button className=\"menu-btn\" onClick={this.toggleMenu}><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610637597/menu_btis53.png\" alt=\"\" /></button>\r\n        </header>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n    users: state.userModule.users\r\n    // filterBy: state.boardModule.filterBy,\r\n    // loggedInUser: state.userModule.loggedInUser,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  saveBoard,\r\n  loadUsers,\r\n}\r\n\r\n\r\n\r\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(_BoardHeader);","import React, { Component } from 'react'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\nexport class GroupAdd extends Component {\r\n\r\n    state = {\r\n        isAddOpen: false,\r\n        group: {\r\n            title: ''\r\n        }\r\n    }\r\n\r\n    openInput = () => {\r\n        this.setState({\r\n            isAddOpen: true\r\n        })\r\n    }\r\n\r\n    closeInput = () => {\r\n        this.setState({\r\n            isAddOpen: false\r\n        })\r\n    }\r\n\r\n    onSaveGroup = (ev) => {\r\n        ev.preventDefault()\r\n        const group = { title: this.state.group.title, id: utilService.makeId(), cards: [] }\r\n        this.props.onAddGroup(group)\r\n        this.setState(\r\n            {\r\n                group: { title: '' },\r\n                isAddOpen: false\r\n            }, () => this.props.onScroll(null, 280))\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const { name } = target\r\n        const { value } = target\r\n        this.setState(prevState => {\r\n            return {\r\n                group: {\r\n                    ...prevState.group,\r\n                    [name]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isAddOpen, group } = this.state\r\n        return <section className=\"add-group-container\">\r\n            {isAddOpen &&\r\n                <form onSubmit={this.onSaveGroup} className=\"new-group-form\">\r\n                    <input type=\"text\" name=\"title\" value={group.title} onChange={this.handleInput}\r\n                        className=\"my-input\" placeholder=\"Enter group title...\" autoFocus autoComplete=\"off\" />\r\n                    <div>\r\n                        <button className=\"submit-group-btn\">Add group</button>\r\n                        <button onClick={this.closeInput} className=\"close-input-btn\" ><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610646476/close_voj9v3.png\" alt=\"\" /></button>\r\n                    </div>\r\n                </form>\r\n            }\r\n            {!isAddOpen && <button className=\"add-group-btn\" onClick={this.openInput}>\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/plus_ljzrkm.png\" alt=\"\" />\r\n                <span>Add another group</span></button>}\r\n        </section>\r\n    }\r\n}\r\n","function on(eventName, listener) {\r\n  const callListener = ({ detail }) => {\r\n      listener(detail)\r\n  }\r\n  window.addEventListener(eventName, callListener)\r\n  return () => {\r\n      window.removeEventListener(eventName, callListener)\r\n  }\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\n\r\nexport const eventBusService = { on, emit }","import React, { Component } from 'react'\r\n\r\nexport class CardPreviewLabel extends Component {\r\n    state = {\r\n        isLableTitleShown: false\r\n    }\r\n\r\n    toggleLableTitle = (ev) => {\r\n        ev.stopPropagation()\r\n        this.setState({ isLableTitleShown: !this.state.isLableTitleShown })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        const { isLableTitleShown } = this.state\r\n        return (\r\n            <div>\r\n                {card.labels && <div className=\"label-container flex\">\r\n                    {card.labels.map(label => {\r\n                        return <div key={label.id} style={{ backgroundColor: label.color }} className={isLableTitleShown ? 'card-label open' : 'card-label'} onClick={this.toggleLableTitle}>\r\n                            {isLableTitleShown && label.title}\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { utilService } from '../../services/utilService'\r\nimport { CardPreviewFeature } from './CardPreviewFeature'\r\nconst _ = require('lodash');\r\n\r\nexport function CardPreviewBottom({ card }) {\r\n    \r\n    const progress = utilService.getTodoProgress(card)\r\n    // const iconsMap = [\r\n    //     { dueDate: \"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" },\r\n    //     {comments: \"https://res.cloudinary.com/basimgs/image/upload/v1610704026/messenger_ypya0t.png\"},\r\n    //     {checklist: \"https://res.cloudinary.com/basimgs/image/upload/v1610625361/check-box_pzd2ul.png\"}\r\n    // ]\r\n\r\n    // const content = [\r\n    //     { dueDate: utilService.getDueDate(card.dueDate) },\r\n    //     {comments: card.comments?.length},\r\n    //     {checklist: progress?.done/progress?.total},\r\n    //     {members: card.members?.map(member => {\r\n    //         return <div key={member.fullname} className=\"member\">\r\n    //             {utilService.convertName(member.fullname)}\r\n    //         </div>\r\n    //     })}\r\n    // ]\r\n\r\n        \r\n        // {\r\n        //     card[type] && <div className={`${type}-container flex`}>\r\n        //         <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"\" />\r\n        //         <p className=\"date\">{utilService.getDueDate(card.dueDate)}</p></div>\r\n        // }\r\n\r\n    const types = Object.keys(card)\r\n\r\n    return (\r\n        <div className=\"card-extras-container flex space-between\">\r\n            {/* { Object.keys(card).map((prop, idx) => {\r\n                return < CardPreviewFeature key={idx} card={ card } type = { prop } src = { iconsMap.prop } content = { content.prop } />\r\n            })} */}\r\n            {card.dueDate && <div className=\"dueDate-container flex\">\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"\" />\r\n                <p className=\"dueDate\">{utilService.getDueDate(card.dueDate)}</p></div>}\r\n            {card.comments && <div className=\"comments-container flex\">\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610704026/messenger_ypya0t.png\" alt=\"\" />\r\n                <p className=\"comments\">{card.comments.length}</p></div>}\r\n            {card.checklist && <div className={(progress.done===progress.total)? 'checklist-container complete flex' : 'checklist-container flex'}>\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/check-box_pzd2ul.png\" alt=\"\" />\r\n                <p className=\"checklist\">{progress.done}/{progress.total}</p></div>}\r\n            {card.members && <div className=\"preview-members-container flex\">\r\n                {card.members.map(member => {\r\n                    return <div key={member.fullname} className=\"member\" style={{backgroundColor: member.color? member.color: \"#3f72af\"}}>\r\n                        {utilService.convertName(member.fullname)}\r\n                    </div>\r\n                })}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { Component } from 'react'\r\nimport { Draggable } from \"react-beautiful-dnd\"\r\nimport { connect } from 'react-redux'\r\nimport { eventBusService } from '../../services/eventBusService.js'\r\nimport { setCard, setGroup } from '../../store/actions/cardAction.js'\r\nimport { CardPreviewLabel } from './CardPreviewLabel'\r\nimport { CardPreviewBottom } from './CardPreviewBottom'\r\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd'\r\n\r\nexport class _CardPreview extends Component {\r\n    onShowCard = (card, group) => {\r\n        this.props.setCard(card)\r\n        this.props.setGroup(group)\r\n        eventBusService.emit('show-details', true)\r\n    }\r\n    showPreviewDetails = (ev, card, group) => {\r\n        this.props.setCard(card)\r\n        this.props.setGroup(group)\r\n        ev.stopPropagation()\r\n        eventBusService.emit('show-preview-details', ev, true)\r\n    }\r\n    render() {\r\n        const { card, index, group } = this.props\r\n        return (\r\n            <div className=\"card-preview\" onClick={() => this.onShowCard(card, group)}>\r\n                <Draggable key={card.id} draggableId={card.id} index={index}>\r\n                    {(provided, snapshot) => (\r\n                        <NaturalDragAnimation\r\n                            style={provided.draggableProps.style}\r\n                            snapshot={snapshot}\r\n                        >\r\n                            {style => (\r\n                                <article className=\"card-preview\"\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}\r\n                                    style={getItemStyle(snapshot.isDragging, provided.draggableProps.style, style, snapshot.isDraggingOver)}\r\n                                >\r\n                                    <button className=\"show-preview-details-btn\" onClick={(ev) => this.showPreviewDetails(ev, card, group)}><img className=\"show-preview-details-pen\" src=\"https://res.cloudinary.com/basimgs/image/upload/v1610873061/pen_lgmg47.png\" alt=\"pen\" /></button>\r\n                                    {card.style && (card.style.imgUrl ? <div className=\"card-img-cover\" style={{ backgroundImage: `url(${card.style.imgUrl}` }} ></div>\r\n                                        : <div className=\"card-color-cover\" style={{ backgroundColor: card.style.color }}></div>)}\r\n                                    <div className=\"lower-card\">\r\n                                        <CardPreviewLabel card={card} />\r\n                                        <div className=\"flex space-between\">\r\n                                            <pre>{card.title}</pre>\r\n\r\n                                        </div>\r\n                                        <CardPreviewBottom card={card} />\r\n                                    </div>\r\n                                </article>\r\n                            )}\r\n                        </NaturalDragAnimation>\r\n                    )}\r\n                </Draggable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst getItemStyle = (isDragging, draggableStyle, style, isDraggingOver) => ({\r\n    userSelect: 'none',\r\n    padding: '0',\r\n\r\n    margin: '0 4px 8px 3px',\r\n    borderRadius: '3px',\r\n    background: isDragging ? '##e4e0e0' : 'white',\r\n    // background: isDraggingOver ? 'black' : 'green',\r\n    boxShadow: `0 1px 0 rgba(9, 30, 66, 0.25)`,\r\n    ...draggableStyle,\r\n    ...style\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currCard: state.cardModule.currCard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setCard,\r\n    setGroup\r\n}\r\n\r\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview);\r\n","export function setCard(card) {\r\n  return (dispatch) => {\r\n    try {\r\n      dispatch({ type: 'SET_CARD', card })\r\n\r\n    } catch (err) {\r\n      console.log('err cardAction SET CARD', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function setGroup(group) {\r\n  return (dispatch) => {\r\n    try {\r\n      dispatch({ type: 'SET_GROUP', group })\r\n    } catch (err) {\r\n      console.log('err cardAction SET GROUP', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function clearState(clear) {\r\n  return (dispatch) => {\r\n    try {\r\n      dispatch({ type: 'CLEAR_STATE', clear })\r\n    } catch (err) {\r\n      console.log('err cardAction CLEAR STATE', err);\r\n    }\r\n  }\r\n}\r\n\r\n// export function addLabel(label) {\r\n//   return (dispatch) => {\r\n//     try {\r\n//       dispatch({ type: 'ADD_LABEL', label })\r\n//     } catch (err) {\r\n//       console.log('err cardAction CLEAR STATE', err);\r\n//     }\r\n//   }\r\n// }\r\n\r\n","import { Component } from 'react'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\nexport class CardAdd extends Component {\r\n    state = {\r\n        isAddOpen: false,\r\n        card: {\r\n            title: '',\r\n        }\r\n    }\r\n\r\n    openInput = () => {\r\n        this.setState({ isAddOpen: true }, () => {\r\n            this.props.onScroll(null, 1000)\r\n        })\r\n    }\r\n\r\n    closeInput = () => {\r\n        this.setState({ isAddOpen: false, card: { title: '' } }, () => setTimeout(() => {\r\n            this.props.onScroll(null, 1000)\r\n        }, 150))\r\n    }\r\n\r\n    onSaveCard = (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.card.title) return\r\n        const card = { title: this.state.card.title, id: utilService.makeId(), members: [], labels: [] }\r\n        this.props.onAddCard(card, this.props.groupId)\r\n        this.setState(\r\n            {\r\n                card: { title: '' },\r\n            }, () => this.closeInput())\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const { name } = target\r\n        const { value } = target\r\n        this.setState(prevState => {\r\n            return {\r\n                card: {\r\n                    ...prevState.card,\r\n                    [name]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isAddOpen, card } = this.state\r\n        return <section className=\"add-card-container\" onBlur={this.closeInput} >\r\n            {isAddOpen &&\r\n                <form onSubmit={() => { return }} className=\"new-card-form\">\r\n                    <textarea type=\"text\" name=\"title\" value={card.title} onChange={this.handleInput}\r\n                        className=\"my-input\" placeholder=\"Enter a card title...\" autoFocus required\r\n                        cols=\"35\" rows=\"4\"></textarea>\r\n                    <div className=\"flex\">\r\n                        <button type=\"submit\" onMouseDown={this.onSaveCard} className=\"submit-card-btn\">Add card</button>\r\n                        <button onClick={this.closeInput} className=\"close-input-btn\" >\r\n                            <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610646476/close_voj9v3.png\" alt=\"\" />\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            }\r\n            {!isAddOpen && <button className=\"add-card-btn\" onClick={this.openInput}>\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/plus_ljzrkm.png\" alt=\"\" />\r\n                <span>Add another card</span></button>}\r\n        </section>\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd'\r\nimport { CardPreview } from './CardPreview.jsx'\r\nimport { CardAdd } from './CardAdd';\r\nimport { Component } from 'react'\r\n\r\n\r\n\r\nexport class CardList extends Component {\r\n    state = {\r\n        scrollTop: 0\r\n    }\r\n    // refCard = React.createRef()\r\n    getListStyle = isDraggingOver => ({\r\n        // padding: 5,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        paddingLeft: 5,\r\n        position: \"relative\",\r\n        // backgroundColor: (isDraggingOver) ? 'lightgray' : 'unset'\r\n    })\r\n\r\n    onScroll = (ev, scrolltobottom = 0) => {\r\n        if (!scrolltobottom) return\r\n        const scrollTop = this.refCard.current.scrollTop\r\n        this.setState({\r\n            scrollTop: scrollTop\r\n        }, () => {\r\n            if (scrolltobottom)\r\n                this.props.ref.current.scrollTop = this.props.ref.current.scrollTop + scrolltobottom\r\n        })\r\n    }\r\n    render() {\r\n        const { cards, id, groupTitle, group } = this.props\r\n        if (!cards) return <div>Loading Cards...</div>\r\n\r\n        return (\r\n            // <div className=\"card-list\" ref={this.refCard} onScroll={this.props.onScroll}>\r\n            <div className=\"card-list\" ref={this.props.refs} onScroll={this.props.onScroll}>\r\n                <Droppable droppableId={group.id} type=\"card\">\r\n                    {(provided, snapshot) => (\r\n                        <div ref={provided.innerRef} style={this.getListStyle(snapshot.isDraggingOver)}\r\n                            {...provided.droppableProps}>\r\n                            {cards.map((card, index) =>\r\n\r\n                                <CardPreview key={card.id} card={card} group={group}\r\n                                    index={index} groupId={id} groupTitle={groupTitle} />\r\n                            )}\r\n\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n                {/* {isAddOpen &&\r\n                    <form onSubmit={() => { return }} className=\"new-card-form\">\r\n                        <textarea type=\"text\" name=\"title\" value={card.title} onChange={this.handleInput}\r\n                            className=\"my-input\" placeholder=\"Enter a card title...\" autoFocus required\r\n                            cols=\"35\" rows=\"4\"></textarea>\r\n                        <div className=\"flex\">\r\n                            <button type=\"submit\" onMouseDown={this.onSaveCard} className=\"submit-card-btn\">Add card</button>\r\n                            <button onClick={this.closeInput} className=\"close-input-btn\" >\r\n                                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610646476/close_voj9v3.png\" alt=\"\" />\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                } */}\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { loadBoard, saveBoard } from '../../store/actions/boardAction'\r\nimport { connect } from 'react-redux'\r\n// import { TextField } from '@material-ui/core';\r\nexport class _GroupTitle extends Component {\r\n\r\n    state = {\r\n        groupIdx: null,\r\n        group: {\r\n            title: ''\r\n        }\r\n    }\r\n    textInput = React.createRef()\r\n\r\n    componentDidMount() {\r\n        const groupId = this.props.group.id\r\n        const { board, group } = this.props\r\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n\r\n        this.setState({ groupIdx, group: { title: group.title } })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (this.props.group.title !== prevProps.group.title) {\r\n            this.setState(prevState => ({\r\n                group: {\r\n                    ...prevState.group,\r\n                    title: this.props.group.title\r\n                }\r\n            }))\r\n        }\r\n\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const { name } = target\r\n        const value = target.value\r\n        console.log('target.value', value, name)\r\n        this.setState(prevState => {\r\n            return {\r\n                group: {\r\n                    ...prevState.group,\r\n                    [name]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    onSaveTitle = async (ev) => {\r\n        ev.preventDefault()\r\n        const groupId = this.props.group.id\r\n        const board = { ...this.props.board }\r\n        // console.log('board from title', board)\r\n        const { title } = this.state.group\r\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n        board.groups[groupIdx].title = title\r\n        await this.props.updateBoard(board)\r\n        this.setState({ groupIdx: null })\r\n    }\r\n\r\n    render() {\r\n        const { group } = this.state\r\n        // console.log('GROUP_TITLE:', group.title);\r\n        return <section className=\"group-title\" {...this.props.dragHandle}>\r\n            <form onSubmit={this.onSaveTitle} ref={this.textInput} {...this.props.dragHandle} className=\"title-form flex space-between\">\r\n                {/* <input type=\"text\" ref={this.textInput} name=\"title\" value={group.title} onChange={this.handleInput} */}\r\n                {/* <TextField id=\"standard-basic\" label=\"Standard\" /> */}\r\n                <input type=\"text\" name=\"title\" value={group.title} onChange={this.handleInput}\r\n                    className=\"title-input\" placeholder=\"Enter group title...\" autoComplete=\"off\" onBlur={this.onSaveTitle} />\r\n                <button className=\"more-options-btn\" ><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/more_e8mezf.png\" alt=\"\" /></button>\r\n            </form>\r\n        </section>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        // filterBy: state.boardModule.filterBy,\r\n        // loggedInUser: state.userModule.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    saveBoard,\r\n}\r\n\r\n\r\n\r\nexport const GroupTitle = connect(mapStateToProps, mapDispatchToProps)(_GroupTitle);","import React, { Component } from 'react'\r\nimport { CardList } from '../Card/CardList.jsx'\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { GroupTitle } from './GroupTitle';\r\nimport { CardAdd } from '../Card/CardAdd.jsx';\r\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd'\r\n\r\nexport class GroupPreview extends Component {\r\n    // function isScroll() {\r\n\r\n    // }\r\n    state = {\r\n        scrollTop: 0\r\n    }\r\n    refCard = React.createRef()\r\n    onScroll = (ev, scrolltobottom = 0) => {\r\n        if (!scrolltobottom) return\r\n        const scrollTop = this.refCard.current.scrollTop\r\n        this.setState({\r\n            scrollTop: scrollTop\r\n        }, () => {\r\n            if (scrolltobottom)\r\n                this.refCard.current.scrollTop = this.refCard.current.scrollTop + scrolltobottom\r\n        })\r\n    }\r\n    render() {\r\n        const { group, idx, onAddCard, updateBoard } = this.props\r\n        // console.log('GROUP_PREVIEW', group)\r\n        return (\r\n            <Draggable draggableId={group.id} index={idx} >\r\n                {(provided, snapshot) => (\r\n                    <NaturalDragAnimation\r\n                        style={provided.draggableProps.style}\r\n                        snapshot={snapshot}\r\n                    >\r\n                        {style => (\r\n                            <div>\r\n                                <article className=\"group-preview\" {...provided.draggableProps}\r\n                                    style={getItemStyle(snapshot.isDragging, provided.draggableProps.style, style)}\r\n                                    ref={provided.innerRef}>\r\n                                    <div  {...provided.dragHandleProps} style={{ width: 272, height: '0.8rem' }}>\r\n                                    </div>\r\n                                    <GroupTitle updateBoard={updateBoard} group={group} dragHandle={provided.dragHandleProps} />\r\n                                    <CardList refs={this.refCard} cards={group.cards}\r\n                                        id={idx} group={group} onScroll={this.onScroll}\r\n                                        grpTitle={group.title} groupId={group.id} onAddCard={onAddCard} />\r\n                                    <CardAdd groupId={group.id} onAddCard={onAddCard} onScroll={this.onScroll} />\r\n                                </article>\r\n                            </div>\r\n                        )}\r\n                    </NaturalDragAnimation>\r\n                )}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\nconst getItemStyle = (isDragging, draggableStyle, style) => ({\r\n    // userSelect: 'none',\r\n    // padding: 8,\r\n    margin: `0 8px 0 0`,\r\n    ...draggableStyle,\r\n    ...style\r\n});","import { GroupAdd } from './GroupAdd.jsx';\r\nimport { GroupPreview } from './GroupPreview.jsx'\r\n\r\nexport function GroupList({ groups, onAddCard, onAddGroup, onScroll, updateBoard }) {\r\n    return (\r\n        <div className=\"group-list\">\r\n            {groups.map((group, idx) =>\r\n                <GroupPreview updateBoard={updateBoard} key={group.id} group={group} idx={idx} onAddCard={onAddCard} />\r\n            )}\r\n            <GroupAdd onAddGroup={onAddGroup} onScroll={onScroll} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","export function CardHeader({ card, onHandleInputChange, group }) {\r\n  return (\r\n    <div className=\"card-header\"> \r\n      <div className=\"card-title-area flex\">\r\n        <img className=\"card-title-img\" src=\"https://res.cloudinary.com/basimgs/image/upload/v1610782307/document-header_xtqrpy.png\" alt=\"\" />\r\n        <textarea\r\n          className=\"title-textarea my-input\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={card.title}\r\n          onChange={onHandleInputChange}\r\n          placeholder={card.title}\r\n          spellCheck=\"false\"\r\n        />\r\n      </div>\r\n      <p className=\"card-title-p\">In list {group.title}</p>\r\n    </div>)\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/utilService'\r\nimport TimeAgo from 'react-timeago'\r\nimport { socketService } from '../../services/socketService'\r\n\r\nclass _CardActivityContainer extends Component {\r\n\r\n  state = {\r\n    comments: null,\r\n    isSaveOpen: false,\r\n    newComment: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    // socketService.setup()\r\n\r\n    // socketService.on('commented', (cmt) => {\r\n    //   console.log('cmt', cmt)\r\n    // }) \r\n\r\n    const { comments } = this.props.card\r\n    this.setState({ comments })\r\n  }\r\n\r\n  onHandleCommentChange = ({ target }) => {\r\n    const { value } = target\r\n    if (value) this.onToggleIsSaveOpen(true)\r\n    else this.onToggleIsSaveOpen(false)\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        newComment: value\r\n      }\r\n    })\r\n  }\r\n\r\n  onToggleIsSaveOpen = (isOpen) => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        isSaveOpen: isOpen\r\n      }\r\n    })\r\n  }\r\n\r\n  createComment = () => {\r\n    const { newComment } = this.state\r\n    const loggedInUser = this.props.loggedInUser\r\n    let byMember = null;\r\n\r\n    if (loggedInUser) {\r\n      byMember = {\r\n        _id: loggedInUser._id,\r\n        fullname: loggedInUser.fullname,\r\n        imgUrl: loggedInUser.imgUrl\r\n      }\r\n    }\r\n\r\n    return {\r\n      id: utilService.makeId(),\r\n      txt: newComment,\r\n      createdAt: Date.now(),\r\n      byMember\r\n    }\r\n  }\r\n\r\n  onSaveNewComment = () => {\r\n\r\n    const comment = this.createComment()\r\n    let commentsCopy = this.state.comments\r\n    if (commentsCopy) commentsCopy.unshift(comment)\r\n    else commentsCopy = new Array(comment)\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        comments: commentsCopy\r\n      }\r\n    }, () => {\r\n      this.props.onHandleActivitiesChange(this.state.comments)\r\n      this.setState(prevState => {\r\n        return {\r\n          ...prevState,\r\n          newComment: '',\r\n          isSaveOpen: false\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { newComment, isSaveOpen, comments } = this.state\r\n    const loggedInUser = this.props.loggedInUser\r\n    return (\r\n      <div className=\"activity-container\">\r\n        <div className=\"activity-header flex\">\r\n          <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610792909/menu_1_o2l8cs.png\" alt=\"\" />\r\n          <h3>Activity</h3>\r\n        </div>\r\n        <div className=\"flex column\">\r\n          <div className=\"flex\">\r\n            <div className=\"member\">\r\n              {loggedInUser ? utilService.convertName(loggedInUser.fullname) : 'G'}\r\n            </div>\r\n            <textarea\r\n              className=\"activity-textarea\"\r\n              type=\"text\"\r\n              name=\"txt\"\r\n              value={newComment}\r\n              onChange={this.onHandleCommentChange}\r\n              placeholder=\"Write a comment...\"\r\n            />\r\n          </div>\r\n          {isSaveOpen && <button className=\"save-btn\" onMouseDown={this.onSaveNewComment} >Save</button>}\r\n        </div>\r\n        {comments && comments.map((comment, index) => {\r\n          return <div key={index} className=\"activity-comment-wrapper flex\">\r\n            <div className=\"member\">\r\n              {comment.byMember ? utilService.convertName(comment.byMember.fullname) : 'G'}\r\n            </div>\r\n            <div className=\"activity-comment\">\r\n              <p>{loggedInUser ? loggedInUser.fullname : 'Guest'}: {comment.txt}</p>\r\n              <TimeAgo className=\"activity-time\" date={comment.createdAt} />\r\n            </div>\r\n          </div>\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// TODO: loggedInUser\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardActivityContainer = connect(mapStateToProps, mapDispatchToProps)(_CardActivityContainer)","import { utilService } from \"./utilService\"\r\n\r\nexport const cardService = {\r\n  createTodo,\r\n  createChecklist\r\n}\r\n\r\nfunction createTodo(title) {\r\n  return {\r\n    id: utilService.makeId(),\r\n    title,\r\n    isDone: false\r\n  }\r\n}\r\n\r\nfunction createChecklist() {\r\n  return {\r\n    id: utilService.makeId(),\r\n    title: '',\r\n    todos: [createTodo('')]\r\n  }\r\n}\r\n\r\n\r\n","import { Component } from 'react'\r\nimport { cardService } from '../../services/cardService'\r\n// import { on, emit } from '../services/eventBusService.js'\r\n\r\nexport class CardChecklist extends Component {\r\n  state = {\r\n    checklist: null,\r\n    isAddOpen: false,\r\n    newTodoTitle: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { checklist } = this.props.card\r\n    this.setState({ checklist })\r\n  }\r\n\r\n  onHandleTitleChange = ({ target }) => {\r\n    const { value, name } = target\r\n\r\n    this.setState(prevState => ({\r\n      checklist: {\r\n        ...prevState.checklist,\r\n        [name]: value\r\n      }\r\n    }), () => this.props.onHandleChecklistChange(this.state.checklist))\r\n  }\r\n\r\n  onHandleTodosChange = (ev, todo) => {\r\n    const { todos } = this.state.checklist\r\n    const value = ev.target.type === 'checkbox' ? ev.target.checked : ev.target.value\r\n    const { name } = ev.target\r\n    todo[name] = value\r\n\r\n    const updatedTodos = [...todos]\r\n\r\n    this.saveTodos(updatedTodos)\r\n  }\r\n\r\n  onRemoveTodo = (idx) => {\r\n    if (this.state.checklist.todos.length === 1) this.props.addOrCancelChecklist(null)\r\n\r\n    const todosCopy = [...this.state.checklist.todos]\r\n    todosCopy.splice(idx, 1)\r\n    this.saveTodos(todosCopy)\r\n  }\r\n\r\n  saveNewTodo = () => {\r\n    const { todos } = this.state.checklist\r\n    const { newTodoTitle } = this.state\r\n    let todosCopy = [...todos]\r\n\r\n    const todoToSave = cardService.createTodo(newTodoTitle)\r\n    todosCopy.push(todoToSave)\r\n\r\n    this.saveTodos(todosCopy)\r\n  }\r\n\r\n  saveTodos = (updatedTodos) => {\r\n    this.setState(prevState => ({\r\n      checklist: {\r\n        ...prevState.checklist,\r\n        todos: [...updatedTodos]\r\n      },\r\n      newTodoTitle: ''\r\n    }), () => this.props.onHandleChecklistChange(this.state.checklist))\r\n  }\r\n\r\n  onHandleNewTodoChange = ({ target }) => {\r\n    const { value } = target\r\n    this.setState({ newTodoTitle: value })\r\n  }\r\n\r\n  toggleIsAddOpen = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        isAddOpen: !this.state.isAddOpen\r\n      }\r\n    })\r\n  }\r\n\r\n  progressBarPrecentage = () => {\r\n    const { checklist } = this.state\r\n    let acc = 0;\r\n    checklist.todos.forEach((todo) => { if (todo.isDone) acc += 1 })\r\n\r\n    const todosPrecent = 100 / checklist.todos.length\r\n\r\n    if (acc === 0) return 0\r\n    return todosPrecent * acc\r\n  }\r\n\r\n  render() {\r\n    const { checklist, isAddOpen, newTodoTitle } = this.state\r\n    if (!checklist) return <div>Loading...</div>\r\n    return (\r\n      <div className=\"checklist flex column\" >\r\n        <div className=\"checklist-header flex\">\r\n          <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/check-box_pzd2ul.png\" alt=\"\" />\r\n          <input\r\n            className=\"my-input\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Checklist\"\r\n            value={checklist.title}\r\n            onChange={this.onHandleTitleChange}\r\n          />\r\n        </div>\r\n        <div className=\"progress-bar\"><div style={{ width: `${this.progressBarPrecentage()}%` }}></div></div>\r\n        {checklist.todos && checklist.todos.map((todo, idx) => {\r\n          return <div className=\"checklist-todo flex\" key={idx}>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"isDone\"\r\n              checked={todo.isDone}\r\n              onChange={(ev) => this.onHandleTodosChange(ev, todo)}\r\n            />\r\n            <input\r\n              className=\"add-todo-input my-input\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"Add an item\"\r\n              value={todo.title}\r\n              onChange={(ev) => this.onHandleTodosChange(ev, todo)}\r\n            />\r\n            <button className=\"delete-todo\" onClick={() => this.onRemoveTodo(idx)}>✕</button>\r\n          </div>\r\n        })}\r\n\r\n        {isAddOpen && <div className=\"flex\">\r\n          <input\r\n            type=\"text\"\r\n            autoFocus\r\n            placeholder=\"Add an item\"\r\n            className=\"new-todo-input\"\r\n            value={newTodoTitle}\r\n            onChange={this.onHandleNewTodoChange}\r\n            onBlur={this.toggleIsAddOpen}\r\n          />\r\n          <button className=\"save-btn\" onMouseDown={this.saveNewTodo} >Save</button>\r\n        </div>}\r\n\r\n        {!isAddOpen && <button className=\"add-todo\" onClick={this.toggleIsAddOpen}>Add todo</button>}\r\n      </div >\r\n    )\r\n  }\r\n}\r\n","import { utilService } from \"../../services/utilService\"\r\nimport { CardActivityContainer } from \"./CardActivityContainer\";\r\nimport { CardChecklist } from \"./CardChecklist\"\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport moment from \"moment\"\r\n\r\nexport function CardInfo({ card, onHandleInputChange, onHandleChecklistChange, onHandleActivitiesChange, addOrCancelChecklist }) {\r\n  return (\r\n    <div className=\"card-info\">\r\n\r\n      {card.members && <div className=\"members flex column\">\r\n        <h2 className=\"members-header\">Members</h2>\r\n        {/* <div className=\"members-list flex\"> */}\r\n        <TransitionGroup className=\"members-list flex\">\r\n          {card.members.map((member, idx) => \r\n          <CSSTransition key={idx} timeout={500} classNames=\"item\">\r\n             <span key={idx} className=\"member\" style={{backgroundColor: member.color? member.color: \"#3f72af\"}}>{utilService.convertName(member.fullname)}</span>\r\n             </CSSTransition>\r\n        )}\r\n          </TransitionGroup>\r\n        {/* </div> */}\r\n      </div>}\r\n\r\n      {card.labels && card.labels.length > 0 && <div className=\"card-labels-section\">\r\n        <h2 className=\"card-label-h2\">Labels</h2>\r\n        <div className=\"flex labels-container\">\r\n          {card.labels.map((label, idx) => {\r\n            return <button key={idx} className=\"label-btn\" style={{ backgroundColor: label.color }}>{label.title}</button>\r\n          })}\r\n        </div>\r\n      </div>}\r\n\r\n      {card.dueDate && <div className=\"due-date-wrapper\">\r\n        <h2 className=\"due-date-h2\">Due Date</h2>\r\n        <p className=\"due-date\">{moment(card.dueDate).format('LLL')}</p>\r\n      </div>}\r\n\r\n      <div className=\"card-description\">\r\n        <div className=\"flex\">\r\n          <span><img className=\"desc-img\" src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/left-align_qaakok.png\" alt=\"\" /></span>\r\n          <h3>Description</h3>\r\n        </div>\r\n        <textarea\r\n          className=\"desc-textarea my-input\"\r\n          type=\"text\"\r\n          name=\"description\"\r\n          value={card.description || ''}\r\n          onChange={onHandleInputChange}\r\n          placeholder=\"Add more detailed description...\"\r\n        />\r\n      </div>\r\n\r\n      {card.checklist?.todos?.length > 0 &&\r\n        <CardChecklist card={card} onHandleChecklistChange={onHandleChecklistChange} addOrCancelChecklist={addOrCancelChecklist} />}\r\n      <CardActivityContainer card={card} onHandleActivitiesChange={onHandleActivitiesChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\n// {/* <TransitionGroup className=\"cards-preview-list\">\r\n//                                 {cards.map((card, index) =>\r\n//                                     <CSSTransition\r\n//                                         key={card.id}\r\n//                                         timeout={500}\r\n//                                         classNames=\"item\"\r\n//                                     >\r\n//                                         <CardPreview key={card.id} card={card} group={group}\r\n//                                             index={index} groupId={id} groupTitle={groupTitle} />\r\n//                                     </CSSTransition>\r\n//                                 )}\r\n//                             </TransitionGroup> */}","export const cloudinaryService = {\r\n  uploadImg\r\n}\r\nasync function uploadImg(file) {\r\n  const CLOUD_NAME = 'basimgs'\r\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', file)\r\n  formData.append('upload_preset', 'misterToy');\r\n  try {\r\n    const res = await fetch(UPLOAD_URL, {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n    const data = await res.json()\r\n    return data\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n","import { Component } from 'react'\r\nimport { cloudinaryService } from '../../services/cloudinaryService.js'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nexport class CardCover extends Component {\r\n\r\n    state = {\r\n        isUploading: false,\r\n        mounted: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ mounted: true })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({ mounted: false })\r\n    }\r\n\r\n    coverColors = () => {\r\n        return ['#f9ed69', '#a56cc1', '#f38181', '#95e1d3', '#878ecd', '#3fc1c9',\r\n            '#a1dd70', '#ffcc29', '#19456b', '#d32626', '#16c79a', '#fcbad3', '#ffaa64', '#de95ba', '#17b978',]\r\n    }\r\n\r\n    onUploadImg = async ev => {\r\n        this.setState({ isUploading: true })\r\n        const { secure_url } = await cloudinaryService.uploadImg(ev.target.files[0])\r\n        this.setState({ isUploading: false }, () => this.props.onFinishUpload(secure_url))\r\n    }\r\n\r\n    setColor = (color) => {\r\n        console.log('the chosen color is', color);\r\n        this.props.onUpdateCoverColor(color)\r\n\r\n    }\r\n\r\n    render() {\r\n        const { isUploading, mounted } = this.state\r\n        return (\r\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleCoverMenu}>\r\n                <div className=\"card-cover-modal flex column\">\r\n                    <div className=\"uploader\">\r\n                        <label className=\"upload-btn\" htmlFor=\"imageUploader\">{isUploading ? 'Uploading....' : 'Upload Image'}</label>\r\n                        <input onChange={this.onUploadImg} hidden\r\n                            type=\"file\" accept=\"image/*\" id=\"imageUploader\" />\r\n                    </div>\r\n                    <h3>Colors</h3>\r\n                    <div className=\"card-cover-colors\">\r\n                        {this.coverColors().map((color, idx) => {\r\n                            return <div className=\"cover-colors-menu\" key={idx}\r\n                                style={{ backgroundColor: color }} onClick={() => this.setColor(color)}></div>\r\n                        })}\r\n                    </div>\r\n                    <div className=\"card-cover-btns flex\">\r\n                        <button onClick={this.onClose} className=\"card-cover-btn\">Ok</button>\r\n                        <button onClick={this.onClose} className=\"card-cover-btn\">✕</button>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/utilService'\r\nimport { eventBusService } from '../../services/eventBusService'\r\nimport { CSSTransition } from 'react-transition-group'\r\n// import { cardService } from '../../services/cardService'\r\n// TODO: maybe put in two cmps\r\n\r\nclass _CardLabels extends Component {\r\n\r\n  state = {\r\n    labels: [],\r\n    isCreateLabel: false,\r\n    currLabel: {\r\n      id: '',\r\n      title: '',\r\n      color: '#f2d601'\r\n    },\r\n    colors: ['#f2d601', '#ff9f19', '#eb5a46', '#c377e0', '#0179bf', '#04c2e0',\r\n      '#61bd50', '#50e898', '#ff78cb', '#344563', '#b3bac5'],\r\n    // mounted: false\r\n  }\r\n\r\n  // onClose = () => {\r\n  //   this.setState({ mounted: false })\r\n  // }\r\n\r\n  componentDidMount() {\r\n    // const { labels } = this.props.currCard //fucked me up\r\n    const { labels } = this.props.card\r\n    if (labels) {\r\n      this.setState(prevState => {\r\n        return {\r\n          ...prevState,\r\n          labels: [...labels],\r\n          mounted: true\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onEditClick = (label) => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        isCreateLabel: true,\r\n        currLabel: { ...label }\r\n      }\r\n    })\r\n  }\r\n\r\n  onHandleNewLabel = (val) => {\r\n    let name = 'color'\r\n\r\n    if (typeof (val) !== 'string') {\r\n      val = val.target.value\r\n      name = 'title'\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        currLabel: {\r\n          ...this.state.currLabel,\r\n          [name]: val\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  onToggleLabel = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        isCreateLabel: !this.state.isCreateLabel\r\n      }\r\n    })\r\n  }\r\n\r\n  onAddLabel = () => {\r\n    const { currLabel } = this.state\r\n    let labelsCopy = [...this.state.labels]\r\n\r\n    if (!currLabel.id) {\r\n      currLabel.id = utilService.makeId()\r\n      labelsCopy.push(currLabel)\r\n    } else {\r\n      const idx = labelsCopy.findIndex((label) => label.id === currLabel.id)\r\n      labelsCopy.splice(idx, 1, currLabel)\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        labels: [...labelsCopy]\r\n      }\r\n    }, () => {\r\n      this.props.onHandleLabelsChange(this.state.labels)\r\n      eventBusService.emit('label-added', currLabel)\r\n      this.onToggleLabel()\r\n      this.clearNewLabel()\r\n    })\r\n  }\r\n\r\n  clearNewLabel = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        currLabel: {\r\n          id: '',\r\n          title: '',\r\n          color: '#f2d601'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  onChooseLabel = (label) => {\r\n    // const readyLabel = cardService.createLabel(label)\r\n    const isDuplicated = this.checkForDuplicate(label)\r\n\r\n    if (isDuplicated) {\r\n      this.removeLabel(label)\r\n      return\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        labels: [...prevState.labels, label]\r\n      }\r\n    }, () => this.props.onHandleLabelsChange(this.state.labels))\r\n  }\r\n\r\n  checkForDuplicate = (label) => {\r\n    const { labels } = this.state\r\n    if (!labels) return false\r\n\r\n    const isFound = labels.find((currLabel) => currLabel.id === label.id)\r\n    if (isFound) return true\r\n  }\r\n\r\n  removeLabel = (label, isClose = false) => {\r\n    const labelsCopy = [...this.state.labels]\r\n    const idx = labelsCopy.findIndex((currLabel) => currLabel.id === label.id)\r\n    labelsCopy.splice(idx, 1)\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        labels: labelsCopy\r\n      }\r\n    }, () => {\r\n        this.props.onHandleLabelsChange(this.state.labels)\r\n        if (isClose) this.props.onToggleLabels()\r\n        this.clearNewLabel()\r\n        this.onToggleLabel()\r\n    })\r\n  }\r\n\r\n  checkForMark = (label) => {\r\n    const { labels } = this.state\r\n\r\n    const isFound = labels.find((currLabel) => currLabel.id === label.id)\r\n    return isFound\r\n  }\r\n\r\n  onRemoveLabel = (label) => {\r\n    this.removeLabel(label, true)\r\n    eventBusService.emit('label-remove', label)\r\n  }\r\n\r\n  render() {\r\n    const { board } = this.props\r\n    const { isCreateLabel, colors, currLabel, mounted } = this.state\r\n    return (\r\n      <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleLabelMenu}>\r\n        <div className=\"card-labels flex column\" style={{ height: isCreateLabel ? '320px' : '450px' }}>\r\n\r\n          <header className=\"labels-header flex\">\r\n            {isCreateLabel && <button className=\"go-back\" onClick={this.onToggleLabel}> 〈</button>}\r\n            <p>{!isCreateLabel ? 'Labels' : 'Create Label'}</p>\r\n            <button className=\"close-btn inside-close\" onClick={this.props.toggleLabelMenu}>✕</button>\r\n          </header>\r\n\r\n          {!isCreateLabel && <section className=\"label-choose-container flex column\">\r\n            <ul>\r\n              {board.labels?.map((label) => (\r\n                <li key={label.id} className=\"label flex\">\r\n                  <div className=\"label-title flex space-between\" onClick={() => this.onChooseLabel(label)} style={{ backgroundColor: label.color }}>\r\n                    <p>{label.title} </p>\r\n                    <span className=\"checkmark\">{this.checkForMark(label) ? '✓' : ''}</span>\r\n                  </div>\r\n                  <button className=\"label-edit-btn\" onClick={() => this.onEditClick(label)}>\r\n                    <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610872377/pen_so2afr.png\" alt=\"\" />\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </section>}\r\n\r\n          {isCreateLabel && <section className=\"create-label-container flex column\">\r\n            <label htmlFor=\"title\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter label name...\"\r\n              name=\"title\"\r\n              id=\"title\"\r\n              value={currLabel.title}\r\n              onChange={this.onHandleNewLabel}\r\n            />\r\n            <p>Select a color</p>\r\n            <ul className=\"flex\">\r\n              {colors.map((color) => (\r\n                <li\r\n                  className=\"label-color-picker flex align-center justify-center\"\r\n                  key={color}\r\n                  name=\"color\"\r\n                  style={{ backgroundColor: color }}\r\n                  onClick={() => this.onHandleNewLabel(color)}\r\n                >{currLabel.color === color ? '✓' : ''}</li>\r\n              ))}\r\n            </ul>\r\n            <div className=\"flex space-between\">\r\n              <button className=\"save-btn\" onClick={this.onAddLabel}>Create</button>\r\n              {currLabel.id && <button className=\"delete-btn\" onClick={() => this.onRemoveLabel(currLabel)}>Delete</button>}\r\n            </div>\r\n          </section>}\r\n\r\n          {!isCreateLabel &&\r\n            <footer>\r\n              <button className=\"add-label-btn\" onClick={this.onToggleLabel}>+ Create New Label</button>\r\n            </footer>}\r\n\r\n        </div>\r\n      </CSSTransition>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n    currCard: state.cardModule.currCard\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  // saveBoard,\r\n}\r\n\r\nexport const CardLabels = connect(mapStateToProps, mapDispatchToProps)(_CardLabels)","import { Component } from 'react'\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nexport class DatePicker extends Component {\r\n\r\n    state = {\r\n        mounted: false,\r\n        value: new Date()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ mounted: true })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({ mounted: false })\r\n    }\r\n\r\n    onChange = (value) => {\r\n        this.setState({ value }, () => this.props.onSavedueDate((this.state.value + '').substring(4, 32)))\r\n        this.setState({ mounted: false })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { value, mounted } = this.state\r\n        return (\r\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleDate}>\r\n                <div className=\"date-picker\">\r\n                    <button onClick={this.onClose} className=\"close-date-btn\">✕</button>\r\n                    <Calendar style={{ zIndex: 2000, position: 'absolute' }}\r\n                        onChange={this.onChange}\r\n                        value={value}\r\n                    />\r\n                </div>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n// import Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { cardService } from '../../services/cardService';\r\nimport { CardCover } from './CardCover';\r\nimport { CardLabels } from './CardLabels';\r\nimport { AddMember } from '../AddMember';\r\nimport { DatePicker } from './DatePicker';\r\n// import { DatePicker } from '@material-ui/pickers';\r\n\r\nexport class CardSide extends Component {\r\n\r\n  state = {\r\n    // value: new Date(),\r\n    isDateShown: false,\r\n    isLabelsShown: false,\r\n    isLabelsMenuShown: false,\r\n    isCoverMenuShown: false,\r\n    isMoreMembersShown: false\r\n  }\r\n\r\n  onRemoveCard = () => {\r\n    this.props.onRemoveCard()\r\n  }\r\n\r\n  toggleMembers = () => {\r\n    this.setState({ isMoreMembersShown: !this.state.isMoreMembersShown })\r\n  }\r\n\r\n  toggleDate = () => {\r\n    this.setState({ isDateShown: !this.state.isDateShown })\r\n  }\r\n\r\n  toggleCoverMenu = () => {\r\n    this.setState({ isCoverMenuShown: !this.state.isCoverMenuShown })\r\n  }\r\n\r\n  toggleLabelMenu = () => {\r\n    this.setState({ isLabelsMenuShown: !this.state.isLabelsMenuShown })\r\n    window.isLabelsMenuShown = this.state.isLabelsMenuShown\r\n  }\r\n\r\n\r\n\r\n  onAddChecklist = () => {\r\n    const checklist = cardService.createChecklist()\r\n    this.props.addOrCancelChecklist(checklist)\r\n  }\r\n\r\n  onToggleLabels = () => {\r\n    this.setState({ isLabelsShown: !this.state.isLabelsShown })\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { value, isDateShown, isLabelsShown, isCoverMenuShown, isMoreMembersShown, isLabelsMenuShown } = this.state\r\n    const { card, onHandleLabelsChange, saveChanges, users } = this.props\r\n    return (\r\n      <>\r\n        {isLabelsMenuShown && <CardLabels saveChanges={saveChanges} card={card} onToggleLabels={this.onToggleLabels} toggleLabelMenu={this.toggleLabelMenu} onHandleLabelsChange={onHandleLabelsChange} />}\r\n        {isCoverMenuShown && <CardCover onFinishUpload={this.props.onUploadCardCoverImg}\r\n          onUpdateCoverColor={this.props.onUpdateCoverColor} toggleCoverMenu={this.toggleCoverMenu} />}\r\n        {isDateShown && <DatePicker onSavedueDate={this.props.onSavedueDate} toggleDate={this.toggleDate} />}\r\n        {isMoreMembersShown && <AddMember toggleMembers={this.toggleMembers}\r\n          onUpdateMembers={this.props.onUpdateMembers} onSetUserFilter={this.props.onSetUserFilter} members={card.members} users={users} />}\r\n        {/* {isMoreMembersShown && <div className=\"card-details-member-container\"><AddMember toggleMembers={this.toggleMembers}\r\n          onUpdateMembers={this.props.onUpdateMembers} onSetUserFilter={this.props.onSetUserFilter} members={card.members} users={users} /></div>} */}\r\n        {/* <DatePicker /> */}\r\n        <div className=\"card-side flex column\">\r\n          <button className=\"side-btn\" onClick={this.toggleMembers}>\r\n            <span>\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/user_g2y481.png\" alt=\"\" />\r\n            </span> Members</button>\r\n\r\n          <button className=\"side-btn\" onClick={this.toggleLabelMenu}>\r\n            <span>\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610794160/price-tag_evse4z.png\" alt=\"\" />\r\n            </span> Labels</button>\r\n\r\n          {!card.checklist && <button className=\"side-btn\" onClick={this.onAddChecklist}>\r\n            <span>\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610794290/check-box_srgv0c.png\" alt=\"\" />\r\n            </span> Checklist</button>}\r\n\r\n          <button className=\"side-btn\" onClick={this.toggleDate}>\r\n            <span>\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"\" />\r\n            </span> Due date</button>\r\n\r\n          <button className=\"side-btn\" onClick={this.toggleCoverMenu}>\r\n            <span>\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793767/picture_omnffh.png\" alt=\"\" />\r\n            </span> Cover</button>\r\n\r\n          <button className=\"side-btn\" onClick={this.onRemoveCard}>\r\n            <span>\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793816/trash_nrq5xi.png\" alt=\"\" />\r\n            </span> Delete</button>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import { utilService } from \"./utilService\"\r\n\r\nexport const activityService = {\r\n  createActivity\r\n}\r\n\r\nfunction createActivity(user, txt, card, group, action, moveTo) {\r\n  let byMember = null\r\n  let toGroup = null\r\n\r\n  if (user) {\r\n    byMember = {\r\n      _id: user._id,\r\n      fullname: user.fullname,\r\n      imgUrl: user.imgUrl\r\n    }\r\n  }\r\n\r\n  if (moveTo) {\r\n    toGroup = {\r\n      id: moveTo.id,\r\n      title: moveTo.title\r\n    }\r\n  }\r\n\r\n  if (card) {\r\n    card =  {\r\n      id: card.id,\r\n      title: `${card.title} ${action}`\r\n    }\r\n  } else card = null\r\n\r\n\r\n  return {\r\n    id: utilService.makeId(),\r\n    txt,\r\n    createdAt: Date.now(),\r\n    byMember,\r\n    card,\r\n    group: {\r\n      id: group.id,\r\n      title: group.title\r\n    },\r\n    toGroup\r\n  }\r\n}","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ReactDOM from 'react-dom'\r\nimport { CardHeader } from './CardHeader'\r\nimport { CardInfo } from './CardInfo'\r\nimport { clearState } from '../../store/actions/cardAction.js'\r\nimport { saveBoard } from '../../store/actions/boardAction.js'\r\nimport { CardSide } from './CardSide'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { socketService } from '../../services/socketService'\r\nimport { activityService } from '../../services/activityService'\r\n// TODO: go back to handle click outside async lielm1995\r\n\r\nclass _CardDetails extends Component {\r\n  state = {\r\n    card: null,\r\n    filterBy: {\r\n      fullname: ''\r\n    },\r\n    mounted: false,\r\n    initialCard: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    socketService.setup()\r\n    const { card } = this.props\r\n    this.setState({ mounted: true, card, initialCard: card })\r\n  }\r\n\r\n  onClose = () => {\r\n    this.saveChanges(true)\r\n    this.checklistValidation()\r\n    this.setState({ mounted: false })\r\n  }\r\n\r\n  saveChanges = (isActivityUpdate = false) => {\r\n    // this.checklistValidation()\r\n    this.sendUpdatedBoard(isActivityUpdate)\r\n  }\r\n\r\n  sendUpdatedBoard = async (isActivityUpdate = false) => {\r\n    const board = { ...this.props.board }\r\n    const group = { ...this.props.group }\r\n    const { card, initialCard } = this.state\r\n    const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\r\n    group.cards[cardIdx] = card\r\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n    board.groups[groupIdx] = group\r\n\r\n    if (isActivityUpdate && JSON.stringify(initialCard) !== JSON.stringify(card)) {\r\n      var activity = activityService.createActivity(this.props.loggedInUser, 'update card ', card, board.groups[groupIdx], ' in')\r\n      board.activities ? board.activities.unshift(activity) : board.activities = new Array(activity)\r\n    }\r\n\r\n    await this.props.saveBoard(board)\r\n    // socketService.emit('card changed', board)\r\n  }\r\n\r\n  onHandleInputChange = ({ target }) => {\r\n    const { value, name } = target\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        [name]: value\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onHandleChecklistChange = (checklist) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        checklist: { ...checklist }\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onHandleActivitiesChange = (comments) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        comments: [...comments]\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onHandleLabelsChange = (labels) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        labels: [...labels]\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  addOrCancelChecklist = (checklist) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        checklist\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onSavedueDate = (date) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        dueDate: Date.parse(date)\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onUploadCardCoverImg = (url) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        style: { imgUrl: url, color: '' }\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onUpdateCoverColor = (color) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        style: { imgUrl: '', color: color }\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onRemoveCard = () => {\r\n    const { board, group } = this.props\r\n    const { card } = this.state\r\n    const cardIdx = group.cards.findIndex((currCard) => currCard.id === card.id)\r\n    group.cards.splice(cardIdx, 1)\r\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n    board.groups[groupIdx] = group\r\n    this.props.saveBoard(board)\r\n    this.props.toggleDetails(false)\r\n  }\r\n\r\n  onUpdateMembers = async (member) => {\r\n    console.log('new members', member);\r\n    const { board, group } = this.props\r\n    const { card } = this.state\r\n    const newCard = { ...card }\r\n    const memberIdx = card.members.findIndex(currMember => currMember._id === member._id)\r\n    if (memberIdx > -1) {\r\n      newCard.members.splice(memberIdx, 1)\r\n    } else {\r\n      newCard.members.push(member)\r\n    }\r\n    const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\r\n    group.cards[cardIdx] = newCard\r\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n    board.groups[groupIdx] = group\r\n\r\n    this.setState({ card: newCard }, () => { this.props.saveBoard(board) })\r\n  }\r\n\r\n  checklistValidation = () => {\r\n    const { checklist } = this.state.card\r\n    if (checklist && checklist.todos.length === 1 && !checklist.todos[0].title) {\r\n      this.addOrCancelChecklist(null)\r\n    }\r\n  }\r\n\r\n  onSetUserFilter = (filterBy) => {\r\n    this.setState({ filterBy })\r\n  }\r\n\r\n  get usersForDisplay() {\r\n    const { board } = this.props\r\n    const { filterBy } = this.state;\r\n    const filterRegex = new RegExp(filterBy.fullname, 'i');\r\n    const users = board.members.filter(member => filterRegex.test(member.fullname))\r\n    return users\r\n  }\r\n\r\n  onDeleteCover = () => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        style: null\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n\r\n  render() {\r\n    const { card, mounted } = this.state\r\n    const { group } = this.props\r\n    const usersForDisplay = this.usersForDisplay\r\n    if (!card) return <div>Loading...</div>\r\n\r\n    return (\r\n      <div className=\"modal-cover\" onClick={this.onClose}>\r\n        <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleDetails}>\r\n          <div className=\"card-details flex column align-center\" onClick={ev => ev.stopPropagation()}>\r\n            <button className=\"close-btn\" onClick={this.onClose}>✕</button>\r\n            {card.style?.color &&\r\n              <div className=\"details-img-wrapper\" style={{ backgroundColor: card.style.color, height: '150px' }}>\r\n                <img onClick={this.onDeleteCover} src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793816/trash_nrq5xi.png\" className=\"trash\" alt=\"\" />\r\n              </div>\r\n            }\r\n\r\n            {\r\n              card.style?.imgUrl &&\r\n              <div className=\"details-img-wrapper flex justify-center\" style={{ height: '200px' }}>\r\n                <img src={card.style.imgUrl} alt=\"\" />\r\n                <img onClick={this.onDeleteCover} src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793816/trash_nrq5xi.png\" className=\"trash\" alt=\"\" />\r\n              </div >}\r\n\r\n            <div className=\"card-details-wrapper flex column\" style={{ paddingTop: (card.style?.imgUrl || card.style?.color) ? '0' : '15px' }}>\r\n              <CardHeader card={card} onHandleInputChange={this.onHandleInputChange} group={group} />\r\n              <div className=\"card-content flex\">\r\n                <CardInfo\r\n                  card={card}\r\n                  onHandleChecklistChange={this.onHandleChecklistChange}\r\n                  onHandleInputChange={this.onHandleInputChange}\r\n                  onHandleActivitiesChange={this.onHandleActivitiesChange}\r\n                  addOrCancelChecklist={this.addOrCancelChecklist}\r\n                />\r\n                <CardSide\r\n                  card={card}\r\n                  onRemoveCard={this.onRemoveCard}\r\n                  onSavedueDate={this.onSavedueDate}\r\n                  addOrCancelChecklist={this.addOrCancelChecklist}\r\n                  onUploadCardCoverImg={this.onUploadCardCoverImg}\r\n                  onHandleLabelsChange={this.onHandleLabelsChange}\r\n                  onUpdateCoverColor={this.onUpdateCoverColor}\r\n                  saveChanges={this.saveChanges}\r\n                  users={usersForDisplay}\r\n                  onUpdateMembers={this.onUpdateMembers}\r\n                  onSetUserFilter={this.onSetUserFilter}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div >\r\n        </CSSTransition >\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  saveBoard,\r\n  clearState\r\n}\r\n\r\nexport const CardDetails = connect(mapStateToProps, mapDispatchToProps)(_CardDetails)\r\n// import { Component } from 'react'\r\n// import { connect } from 'react-redux'\r\n// import ReactDOM from 'react-dom'\r\n// import { CardHeader } from './CardHeader'\r\n// import { CardInfo } from './CardInfo'\r\n// import { clearState } from '../../store/actions/cardAction.js'\r\n// import { saveBoard } from '../../store/actions/boardAction.js'\r\n// import { CardSide } from './CardSide'\r\n// import { CSSTransition } from 'react-transition-group'\r\n// import { socketService } from '../../services/socketService'\r\n// import { activityService } from '../../services/activityService'\r\n// // TODO: find a way to merge all handle inputs\r\n// // TODO: go back to handle click outside async lielm1995\r\n\r\n// class _CardDetails extends Component {\r\n//   state = {\r\n//     card: null,\r\n//     filterBy: {\r\n//       fullname: ''\r\n//     },\r\n//     mounted: false\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     socketService.setup()\r\n//     const { card } = this.props\r\n//     this.setState({ mounted: true })\r\n//     this.setState({ card })\r\n//     // document.addEventListener('click', this.handleClickOutside, true)\r\n//   }\r\n\r\n//   // componentWillUnmount() {\r\n//   //   socketService.terminate()\r\n//   // }\r\n\r\n\r\n//   onClose = () => {\r\n//     this.saveChanges()\r\n//     this.setState({ mounted: false })\r\n//   }\r\n\r\n//   // componentWillUnmount() {\r\n//   //   document.removeEventListener('click', this.handleClickOutside, true)\r\n//   // }\r\n\r\n//   // handleClickOutside = event => {\r\n//   //   const domNode = ReactDOM.findDOMNode(this)\r\n//   //   if (!domNode || !domNode.contains(event.target)) {\r\n//   //     this.saveChanges()\r\n//   //     // this.props.clearState(null)\r\n//   //   }\r\n//   // }\r\n\r\n//   saveChanges = () => {\r\n//     this.checklistValidation()\r\n//     this.sendUpdatedBoard()\r\n//   }\r\n\r\n//   sendUpdatedBoard = async () => {\r\n//     const { board, group } = this.props\r\n//     const { card } = this.state\r\n//     const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\r\n//     group.cards[cardIdx] = card\r\n//     const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n//     board.groups[groupIdx] = group\r\n//     await this.props.saveBoard(board)\r\n\r\n//     // socketService.emit('card changed', board)\r\n//   }\r\n\r\n//   onHandleInputChange = ({ target }) => {\r\n//     const { value, name } = target\r\n//     this.setState(prevState => ({\r\n//       card: {\r\n//         ...prevState.card,\r\n//         [name]: value\r\n//       }\r\n//     }), () => this.saveChanges())\r\n//   }\r\n\r\n//   onHandleChecklistChange = (checklist) => {\r\n//     this.setState(prevState => ({\r\n//       card: {\r\n//         ...prevState.card,\r\n//         checklist: { ...checklist }\r\n//       }\r\n//     }))\r\n//     // }), () => this.saveChanges())\r\n//   }\r\n\r\n//   onHandleActivitiesChange = (comments) => {\r\n//     this.setState(prevState => ({\r\n//       card: {\r\n//         ...prevState.card,\r\n//         comments: [...comments]\r\n//       }\r\n//     }), () => this.saveChanges())\r\n//   }\r\n\r\n//   onHandleLabelsChange = (labels) => {\r\n//     this.setState(prevState => ({\r\n//       card: {\r\n//         ...prevState.card,\r\n//         labels: [...labels]\r\n//       }\r\n//     }), () => this.saveChanges())\r\n//   }\r\n\r\n//   addOrCancelChecklist = (checklist) => {\r\n//     this.setState(prevState => ({\r\n//       card: {\r\n//         ...prevState.card,\r\n//         checklist\r\n//       }\r\n//     }))\r\n//   }\r\n\r\n//   onRemoveCard = () => {\r\n//     const { board, group } = this.props\r\n//     const { card } = this.state\r\n//     const cardIdx = group.cards.findIndex((currCard) => currCard.id === card.id)\r\n//     group.cards.splice(cardIdx, 1)\r\n//     const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n//     board.groups[groupIdx] = group\r\n//     this.props.saveBoard(board)\r\n//     this.props.toggleDetails(false)\r\n//   }\r\n\r\n//   onSavedueDate = (date) => {\r\n//     this.setState(prevState => ({\r\n//       card: {\r\n//         ...prevState.card,\r\n//         dueDate: Date.parse(date)\r\n//       }\r\n//     }))\r\n//     const { card } = this.state\r\n//     const newCard = { ...card }\r\n//     newCard.dueDate = Date.parse(date)\r\n//     this.onUpdateCard(newCard)\r\n//   }\r\n\r\n//   onUploadCardCoverImg = (url) => {\r\n//     const { card } = this.state\r\n//     const newCard = { ...card }\r\n//     const style = { imgUrl: url, color: '' }\r\n//     newCard.style = style\r\n//     this.onUpdateCard(newCard)\r\n//   }\r\n\r\n//   onUpdateCard = (updatedCard) => {\r\n//     const { board, group } = this.props\r\n//     const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\r\n//     group.cards[cardIdx] = updatedCard\r\n//     const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n//     board.groups[groupIdx] = group\r\n//     this.setState({ card: updatedCard }, () => { this.props.saveBoard(board) })\r\n//   }\r\n\r\n//   onUpdateCoverColor = (color) => {\r\n//     const { card } = this.state\r\n//     const newCard = { ...card }\r\n//     const style = { imgUrl: '', color: color }\r\n//     newCard.style = style\r\n//     this.onUpdateCard(newCard)\r\n//   }\r\n\r\n//   onUpdateMembers = async (member) => {\r\n//     console.log('new members', member);\r\n//     const { board, group } = this.props\r\n//     const { card } = this.state\r\n//     const newCard = { ...card }\r\n//     const memberIdx = card.members.findIndex(currMember => currMember._id === member._id)\r\n//     if (memberIdx > -1) {\r\n//       newCard.members.splice(memberIdx, 1)\r\n//     } else {\r\n//       newCard.members.push(member)\r\n//     }\r\n//     const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\r\n//     group.cards[cardIdx] = newCard\r\n//     const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n//     board.groups[groupIdx] = group\r\n//     this.setState({ card: newCard }, () => { this.props.saveBoard(board) })\r\n//   }\r\n\r\n//   checklistValidation = () => {\r\n//     const { checklist } = this.state.card\r\n//     if (checklist && checklist.todos.length === 1 && !checklist.todos[0].title) {\r\n//       this.addOrCancelChecklist(null)\r\n//     }\r\n//   }\r\n\r\n//   onSetUserFilter = (filterBy) => {\r\n//     this.setState({ filterBy })\r\n//   }\r\n\r\n//   get usersForDisplay() {\r\n//     const { board } = this.props\r\n//     const { filterBy } = this.state;\r\n//     const filterRegex = new RegExp(filterBy.fullname, 'i');\r\n//     const users = board.members.filter(member => filterRegex.test(member.fullname))\r\n//     return users\r\n//   }\r\n\r\n\r\n\r\n//   render() {\r\n//     const { card, mounted } = this.state\r\n//     const { group } = this.props\r\n//     const usersForDisplay = this.usersForDisplay\r\n//     if (!card) return <div>Loading...</div>\r\n\r\n//     return (\r\n//       <div className=\"modal-cover\" onClick={this.onClose}>\r\n//         <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleDetails}>\r\n//           <div className=\"card-details flex column align-center\" onClick={ev => ev.stopPropagation()}>\r\n//             {card.style?.color &&\r\n//               <div className=\"details-img-wrapper\" style={{ backgroundColor: card.style.color, height: '150px' }}>\r\n//               </div>}\r\n\r\n//             {card.style?.imgUrl &&\r\n//               <div className=\"details-img-wrapper flex justify-center\" style={{ height: '200px' }}>\r\n//                 <img src={card.style.imgUrl} alt=\"\" />\r\n//               </div>}\r\n\r\n//             <div className=\"card-details-wrapper flex column\">\r\n//               <CardHeader card={card} onHandleInputChange={this.onHandleInputChange} group={group} />\r\n//               <div className=\"card-content flex\">\r\n//                 <CardInfo\r\n//                   card={card}\r\n//                   onHandleChecklistChange={this.onHandleChecklistChange}\r\n//                   onHandleInputChange={this.onHandleInputChange}\r\n//                   onHandleActivitiesChange={this.onHandleActivitiesChange}\r\n//                   addOrCancelChecklist={this.addOrCancelChecklist}\r\n//                 />\r\n//                 <CardSide\r\n//                   card={card}\r\n//                   onRemoveCard={this.onRemoveCard}\r\n//                   onSavedueDate={this.onSavedueDate}\r\n//                   addOrCancelChecklist={this.addOrCancelChecklist}\r\n//                   onUploadCardCoverImg={this.onUploadCardCoverImg}\r\n//                   onHandleLabelsChange={this.onHandleLabelsChange}\r\n//                   onUpdateCoverColor={this.onUpdateCoverColor}\r\n//                   saveChanges={this.saveChanges}\r\n//                   users={usersForDisplay}\r\n//                   onUpdateMembers={this.onUpdateMembers}\r\n//                   onSetUserFilter={this.onSetUserFilter}\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </CSSTransition>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     board: state.boardModule.currBoard,\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   saveBoard,\r\n//   clearState\r\n// }\r\n\r\n// export const CardDetails = connect(mapStateToProps, mapDispatchToProps)(_CardDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CardLabels } from './CardLabels'\r\nimport Calendar from 'react-calendar';\r\nimport { saveBoard } from '../../store/actions/boardAction'\r\nimport { AddMember } from '../AddMember';\r\n\r\nclass _CardPreviewDetails extends Component {\r\n  state = {\r\n    card: null,\r\n    userClicked: null,\r\n    isCreateLabel: false,\r\n    isChangeMembers: false,\r\n    isChangeDueDate: false,\r\n    value: new Date()\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setState({ card: this.props.card }, () => console.log(this.state.card))\r\n    this.setState({ card: this.props.card, userClicked: this.props?.userClicked })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({\r\n      card: null,\r\n      userClicked: null,\r\n      isCreateLabel: false,\r\n      isChangeMembers: false,\r\n      isChangeDueDate: false,\r\n    })\r\n  }\r\n  modalRef = React.createRef()\r\n  modalLabelRef = React.createRef()\r\n\r\n  closeModal = () => {\r\n    this.modalRef.current.style.visibility = 'hidden'\r\n    this.props.showPreviewCardDetails()\r\n  }\r\n\r\n  toggleLabelMenu = () => {\r\n    this.setState({ isCreateLabel: !this.state.isCreateLabel })\r\n  }\r\n  showMembers = () => {\r\n    this.setState({ isChangeMembers: !this.state.isChangeMembers })\r\n  }\r\n  showDueDate = () => {\r\n    this.setState({ isChangeDueDate: !this.state.isChangeDueDate })\r\n  }\r\n\r\n  onHandleInputChange = ({ target }) => {\r\n    const { value, name } = target\r\n    console.log(target, name, value);\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n  onHandleLabelsChange = (labels) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        labels: [...labels]\r\n      }\r\n    }), () => this.onUpdateCard(this.state.card))\r\n  }\r\n\r\n  onChange = (value) => {\r\n    this.setState({ value }, () => this.onSavedueDate((this.state.value + '').substring(4, 32)))\r\n    this.showDueDate()\r\n  }\r\n\r\n  onSavedueDate = (date) => {\r\n    const { card } = this.state\r\n    const newCard = { ...card }\r\n    newCard.dueDate = Date.parse(date)\r\n    this.onUpdateCard(newCard)\r\n  }\r\n\r\n  onUpdateMembers = async (member) => {\r\n    const copyCard = { ...this.state.card }\r\n    console.log('copyCard', copyCard);\r\n    const memberIdx = copyCard.members.findIndex(currMember => currMember._id === member._id)\r\n    console.log('copyCard', memberIdx);\r\n    if (memberIdx > -1) {\r\n      copyCard.members.splice(memberIdx, 1)\r\n      this.setState({ card: copyCard })\r\n    } else {\r\n      copyCard.members.push(member)\r\n      this.setState({ card: copyCard })\r\n\r\n    }\r\n    this.onUpdateCard(this.state.card)\r\n  }\r\n\r\n  onUpdateCard = (updatedCard, isSave = null) => {\r\n    const { board, group } = this.props\r\n    const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\r\n    group.cards[cardIdx] = updatedCard\r\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n    board.groups[groupIdx] = group\r\n    this.setState({ card: updatedCard }, () => {\r\n      this.props.saveBoard(board)\r\n      if (isSave) this.closeModal()\r\n    })\r\n  }\r\n\r\n  onRemoveCard = () => {\r\n    const { board, group } = this.props\r\n    const { card } = this.state\r\n    const cardIdx = group.cards.findIndex((currCard) => currCard.id === card.id)\r\n    group.cards.splice(cardIdx, 1)\r\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n    board.groups[groupIdx] = group\r\n    this.props.saveBoard(board)\r\n    this.closeModal()\r\n  }\r\n\r\n  render() {\r\n    const { userClicked, card, isCreateLabel, isChangeMembers, isChangeDueDate, value } = this.state\r\n    // const { users } = this.props\r\n    if (!card) return <div>Loading...</div>\r\n    // console.log('x', userClicked.x);\r\n    // console.log('y', userClicked.y);\r\n    return (\r\n      <>\r\n        <div className=\"wrapper-preview-details\" ref={this.modalRef} onClick={this.closeModal} style={{\r\n          position: 'absolute',\r\n          zIndex: 9000, top: 0, left: 0, right: 0, bottom: 0,\r\n          backgroundColor: 'black', opacity: 0.5\r\n        }}></div>\r\n        <div className=\"card-preview-details flex\" style={{\r\n          position: 'absolute',\r\n          zIndex: 10000, top: userClicked?.y + 10, left: userClicked?.x - 217\r\n        }}>\r\n          <div className=\"flex column space-between\">\r\n            <textarea className=\"card-preview-details-textarea\" name=\"title\" cols=\"28\" wrap=\"hard\" rows=\"8\" onChange={this.onHandleInputChange} value={card.title} autoFocus ></textarea>\r\n            <button className=\"card-preview-details-save\" onClick={() => this.onUpdateCard(card, 'save')}>Save</button>\r\n          </div>\r\n          <div className=\"card-preview-details-changes flex column\">\r\n            <button className=\"card-preview-details-changes-btn\" onClick={this.toggleLabelMenu}><span className=\"card-preview-details-changes-icon\">\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610794160/price-tag_evse4z.png\" alt=\"label\" />\r\n            </span>Edit Labels</button>\r\n            {isCreateLabel &&\r\n              <div className=\"card-preview-details-label-wrap\" style={{ top: -45, right: -130 }}>\r\n                <CardLabels toggleLabelMenu={this.toggleLabelMenu}\r\n                  onHandleLabelsChange={this.onHandleLabelsChange} card={card} /></div>}\r\n            <button className=\"card-preview-details-changes-btn flex space-between\"\r\n              onClick={this.showMembers}><span className=\"card-preview-details-changes-icon\">\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/user_g2y481.png\" alt=\"member\" />\r\n              </span><span style={{ flexGrow: 1 }}>Change Members</span>\r\n            </button>\r\n            {isChangeMembers && <div className=\"card-details-member-container\"\r\n              style={{ position: \"absolute\", top: 0, left: 0 }} >\r\n              <AddMember toggleMembers={this.showMembers}\r\n                onUpdateMembers={this.onUpdateMembers}\r\n                onSetUserFilter={this.props.onSetUserFilter} members={card.members}\r\n                users={this.props.board.members} /></div>}\r\n            <button className=\"card-preview-details-changes-btn\" onClick={this.showDueDate}>\r\n              <span className=\"card-preview-details-changes-icon\">\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"clock\" />\r\n              </span><span style={{ flexGrow: 1 }}> Change Due Date</span></button>\r\n            {isChangeDueDate && <div className=\"date-picker\">\r\n              <button onClick={this.showDueDate} className=\"close-date-btn\">✕</button>\r\n              <Calendar onChange={this.onChange} value={value} />\r\n            </div>}\r\n            <button className=\"card-preview-details-changes-btn\" onClick={this.onRemoveCard}>\r\n              <span className=\"card-preview-details-changes-icon\">\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793816/trash_nrq5xi.png\" alt=\"Trash\" />\r\n              </span>\r\n              <span style={{ flexGrow: 1, textAlign: 'left' }}>Delete</span></button>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  board: state.boardModule.currBoard,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  saveBoard\r\n}\r\n\r\nexport const CardPreviewDetails = connect(mapStateToProps, mapDispatchToProps)(_CardPreviewDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoard, saveBoard, cleanBoard } from '../store/actions/boardAction'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\nimport { BoardHeader } from '../cmps/BoardHeader/BoardHeader'\r\nimport { GroupList } from '../cmps/Group/GroupList'\r\nimport { CardDetails } from '../cmps/Card/CardDetails'\r\nimport { boardService } from '../services/boardService'\r\nimport { eventBusService } from '../services/eventBusService.js'\r\nimport { CardPreviewDetails } from '../cmps/Card/CardPreviewDetails'\r\nimport { socketService } from '../services/socketService'\r\nimport { activityService } from '../services/activityService'\r\n\r\nexport class _BoardApp extends Component {\r\n    state = {\r\n        isDetailsShown: false,\r\n        scrollLeft: 0,\r\n        isPreviewDetailsShown: false,\r\n        userClicked: {\r\n            x: null,\r\n            y: null\r\n        }\r\n    }\r\n    refBoard = React.createRef()\r\n    componentDidMount() {\r\n        this.loadBoard()\r\n        socketService.setup()\r\n        socketService.on('load board', (board) => this.updateBoard(board, true))\r\n\r\n        this.eventBusTerminate = eventBusService.on('show-details', this.toggleDetails)\r\n        this.eventBusLabelTerminate = eventBusService.on('label-added', this.onAddLabel)\r\n        this.eventBusRemoveTerminate = eventBusService.on('label-remove', this.onRemoveLabel)\r\n        this.eventBusShowPreviewDetailsTerminate = eventBusService.on('show-preview-details', this.showPreviewCardDetails)\r\n    }\r\n\r\n    // componentDidUpdate(prevProps) {\r\n    //     if (this.props.board === prevProps.board) {\r\n    //     // if (this.props.board !== prevProps.board && !this.props.board) {\r\n    //         this.props.loadBoards()\r\n    //         // this.props.history.push(`board/${this.props.board._id}`)\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        this.eventBusTerminate()\r\n        this.eventBusLabelTerminate()\r\n        this.eventBusRemoveTerminate()\r\n        this.eventBusShowPreviewDetailsTerminate()\r\n        socketService.terminate()\r\n        this.props.cleanBoard()\r\n        // this.props.board = null\r\n    }\r\n\r\n    updateBoard = (board, isRenderSocket = false) => {\r\n        console.log('here')\r\n        this.props.saveBoard(board, isRenderSocket)\r\n    }\r\n\r\n    loadBoard = async () => {\r\n        const { boardId } = this.props.match.params\r\n        await this.props.loadBoard(boardId)\r\n        socketService.emit('set label', boardId)\r\n    }\r\n\r\n    onAddGroup = async (group) => {\r\n        const { board } = this.props\r\n        const copyBoard = { ...board }\r\n        copyBoard.groups.push(group)\r\n        await this.props.saveBoard(copyBoard)\r\n\r\n        // socketService.emit('group added', board)\r\n    }\r\n\r\n    onRemoveLabel = async (label) => {\r\n        const { board } = this.props\r\n        const copyBoard = { ...board }\r\n        // const labels = [...copyBoard.labels]\r\n        const idx = copyBoard.labels.findIndex((currLabel) => currLabel.id === label.id)\r\n        copyBoard.labels.splice(idx, 1)\r\n\r\n        // copyBoard.labels = [...labels]\r\n        await this.props.saveBoard(copyBoard)\r\n    }\r\n\r\n    onAddLabel = async (label) => {\r\n        const { board } = this.props\r\n        let updatedLabels;\r\n        let isUpdate;\r\n\r\n        if (board.labels) {\r\n            isUpdate = board.labels.find((currLabel) => currLabel.id === label.id)\r\n            if (isUpdate) {\r\n                updatedLabels = board.labels.map((currLabel) => currLabel.id === label.id ? label : currLabel)\r\n            } else {\r\n                updatedLabels = [...board.labels, label]\r\n            }\r\n        } else {\r\n            updatedLabels = new Array(label)\r\n        }\r\n\r\n        board.labels = [...updatedLabels]\r\n        await this.props.saveBoard(board)\r\n    }\r\n\r\n    onDragCard = async (sourceGroup = null, destinationGroup = null) => {\r\n        const { board } = this.props\r\n        const copyBoard = { ...board }\r\n\r\n        if (sourceGroup && destinationGroup) {\r\n            if (sourceGroup.title !== destinationGroup.title) {\r\n                var activity = activityService.createActivity(this.props.loggedInUser, 'moved card ', null, sourceGroup, ' to', destinationGroup)\r\n                copyBoard.activities ? copyBoard.activities.unshift(activity) : copyBoard.activities = new Array(activity)\r\n            }\r\n        }\r\n\r\n        await this.props.saveBoard(copyBoard)\r\n        // socketService.emit('card dragged', board) \r\n    }\r\n\r\n    onAddCard = async (card, groupId) => {\r\n        const { board } = this.props\r\n        const copyBoard = { ...board }\r\n\r\n        const groupIdx = await boardService.getGroupIdxById(board._id, groupId)\r\n        copyBoard.groups[groupIdx].cards.push(card)\r\n\r\n        const activity = activityService.createActivity(this.props.loggedInUser, 'added card ', card, copyBoard.groups[groupIdx], 'to')\r\n        copyBoard.activities ? copyBoard.activities.unshift(activity) : copyBoard.activities = new Array(activity)\r\n\r\n        await this.props.saveBoard(copyBoard)\r\n\r\n        // socketService.emit('card added', board)\r\n    }\r\n\r\n    onDragEnd = (result) => {\r\n        const { destination, source, draggableId, type } = result\r\n        const { groups } = this.props.board\r\n        if (!destination) return\r\n        if (type === 'group') {\r\n            const dragGroup = groups.find(group => group.id === draggableId)\r\n            groups.splice(source.index, 1)\r\n            groups.splice(destination.index, 0, dragGroup)\r\n            this.onDragCard()\r\n            return\r\n        }\r\n        const sourceGroup = groups.find(group => group.id === source.droppableId)\r\n        const destinationGroup = groups.find(group => group.id === destination.droppableId)\r\n        const draggingCard = sourceGroup.cards.find(card => card.id === draggableId)\r\n        sourceGroup.cards.splice(source.index, 1)\r\n        destinationGroup.cards.splice(destination.index, 0, draggingCard)\r\n        this.onDragCard(sourceGroup, destinationGroup)\r\n    }\r\n\r\n    toggleDetails = () => {\r\n        this.setState({ isDetailsShown: !this.state.isDetailsShown })\r\n    }\r\n    onScroll = (ev, scrolltoleft = 0) => {\r\n\r\n        if (!scrolltoleft) return\r\n        const scrollLeft = this.refBoard.current.scrollLeft\r\n        this.setState({\r\n            scrollLeft: scrollLeft\r\n        }, () => {\r\n            if (scrolltoleft)\r\n                this.refBoard.current.scrollLeft += scrolltoleft\r\n        })\r\n    }\r\n    showPreviewCardDetails = (ev) => {\r\n        console.log(ev);\r\n        this.setState({\r\n            userClicked: { x: ev?.clientX, y: ev?.clientY },\r\n            isPreviewDetailsShown: !this.state.isPreviewDetailsShown\r\n        })\r\n    }\r\n    render() {\r\n        const { board } = this.props\r\n        console.log('want to check if a new board is add', board);\r\n        if (!board) return <p>Loading...</p>\r\n        // console.log('board', board._id)\r\n        let { isDetailsShown, isPreviewDetailsShown, userClicked } = this.state\r\n        // console.log('this.props.board', this.props.board)\r\n        // socketService.emit('set label', this.props.board._id) // was here\r\n        return (\r\n            <>\r\n                {this.props.currCard && isDetailsShown &&\r\n                    <>\r\n                        {/* <div className=\"modal-cover\" onClick={this.toggleDetails}> </div> */}\r\n                        <CardDetails card={this.props.currCard} group={this.props.currGroup} toggleDetails={this.toggleDetails} />\r\n                    </>}\r\n                {isPreviewDetailsShown && <CardPreviewDetails board={board} showPreviewCardDetails={this.showPreviewCardDetails} userClicked={userClicked} card={this.props.currCard} group={this.props.currGroup} />}\r\n                <BoardHeader title={board.title} members={board.members} onAddGroup={this.onAddGroup} />\r\n                <section className=\"board-container\" ref={this.refBoard} onScroll={this.onScroll}>\r\n                    <DragDropContext onDragEnd={this.onDragEnd} >\r\n                        <Droppable droppableId=\"app\" type=\"group\" direction=\"horizontal\" >\r\n                            {(provided) => (\r\n                                <div style={{ width: (board.groups.length) * 287 }} ref={provided.innerRef} {...provided.droppableProps}>\r\n                                    <GroupList updateBoard={this.updateBoard} groups={board.groups} onAddCard={this.onAddCard} onAddGroup={this.onAddGroup} onScroll={this.onScroll} />\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                </section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCard: state.cardModule.currCard,\r\n        currGroup: state.cardModule.currGroup,\r\n        loggedInUser: state.userModule.loggedInUser\r\n        // filterBy: state.boardModule.filterBy,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    saveBoard,\r\n    cleanBoard\r\n}\r\n\r\nexport const BoardApp = connect(mapStateToProps, mapDispatchToProps)(_BoardApp);\r\n","import { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../store/actions/userAction.js'\r\n\r\nexport class _Login extends Component {\r\n  state = {\r\n    user: {\r\n      username: '',\r\n      password: '',\r\n    },\r\n    err: ''\r\n  }\r\n  handleChange = ({ target }) => {\r\n    const field = target.name\r\n    const value = (target.type === 'number') ? +target.value : target.value\r\n\r\n    this.setState(prevState => ({\r\n      user: {\r\n        ...prevState.user,\r\n        [field]: value\r\n      }\r\n    }))\r\n  }\r\n  onLogin = async (ev) => {\r\n    console.log(ev);\r\n    ev.preventDefault()\r\n    try {\r\n      ev.preventDefault()\r\n      await this.props.login(this.state.user)\r\n      console.log(this.props.loggedInUser);\r\n      if (this.props.loggedInUser) this.props.history.push('/boards')\r\n    } catch (err) {\r\n      ev.preventDefault()\r\n      this.props.history.push('/login')\r\n      console.log('login', err);\r\n      this.setState({ err: 'no user' })\r\n    }\r\n  }\r\n  render() {\r\n    const { user, err } = this.state\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\" >\r\n        <CssBaseline />\r\n        <div style={{\r\n          marginTop: '10px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}>\r\n          <Avatar style={{\r\n            margin: '10px',\r\n            backgroundColor: 'blue',\r\n          }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h2\" variant=\"h5\">\r\n            Login\r\n        </Typography>\r\n          <div className=\"err\">{err}</div>\r\n          <form style={{\r\n            width: '100%',\r\n            marginTop: '5px'\r\n          }} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"Username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              autoFocus\r\n              value={user.username}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={user.password}\r\n              onChange={this.handleChange}\r\n            />\r\n            {err && <span>err</span>}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginTop: '10px' }}\r\n              onClick={this.onLogin}\r\n            >\r\n              Login\r\n          </Button>\r\n            <Grid container>\r\n              <Grid item xs style={{ marginTop: '10px' }}>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n              </Link>\r\n              </Grid>\r\n              <Grid item style={{ marginTop: '10px' }}>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n\r\n        </Box>\r\n      </Container >\r\n    );\r\n  }\r\n}\r\nconst mapGlobalStateToProps = (state) => {\r\n\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  login\r\n}\r\nexport const Login = connect(mapGlobalStateToProps, mapDispatchToProps)(_Login)","import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { TextField } from '@material-ui/core';\r\nimport { login } from '../store/actions/userAction.js'\r\nimport { connect } from 'react-redux'\r\nclass _Login1 extends Component {\r\n  state = {\r\n    user: {\r\n      username: '',\r\n      password: '',\r\n    },\r\n    err: ''\r\n  }\r\n  handleChange = ({ target }) => {\r\n    const field = target.name\r\n    const value = target.value\r\n\r\n    this.setState(prevState => ({\r\n      user: {\r\n        ...prevState.user,\r\n        [field]: value\r\n      }\r\n    }))\r\n  }\r\n  // validate(values) {\r\n  //   console.log(values);\r\n  //   const errors = {};\r\n  //   if (!values.email) {\r\n  //     errors.email = 'Required';\r\n  //   } else if (\r\n  //     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n  //   ) {\r\n  //     errors.email = 'Invalid email address';\r\n  //   }\r\n  //   if (values.password.length < 5) {\r\n  //     errors.password = 'Password is too short!'\r\n  //   }\r\n  //   return errors;\r\n  // }\r\n  // onSubmitForm(values, { setSubmitting }) {\r\n  //   setTimeout(() => {\r\n  //     alert(JSON.stringify(values, null, 2));\r\n  //     setSubmitting(false);\r\n  //   }, 400);\r\n  // }\r\n  onLogin = async (ev) => {\r\n    try {\r\n      await this.props.login(this.state.user)\r\n      console.log(this.props.loggedInUser);\r\n      if (this.props.loggedInUser) this.props.history.push('/boards')\r\n    } catch (err) {\r\n      // this.props.history.push('/login1')\r\n      console.log('login', err);\r\n      this.setState({ err: 'no user' })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Any place in your app!</h1>\r\n        <Formik\r\n          initialValues={{ username: '', password: '' }}\r\n          // validate={this.validate}\r\n          onSubmit={this.onLogin}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form>\r\n              <Field type=\"text\" name=\"username\" required value={this.state.user.username} onChange={this.handleChange} placeholder=\"username\" as={TextField} />\r\n              <ErrorMessage name=\"username\" className=\"err-msg\" />\r\n              <Field type=\"password\" required placeholder=\"password\" value={this.state.user.password} onChange={this.handleChange} as={TextField} name=\"password\" />\r\n              <ErrorMessage name=\"password\" className=\"err-msg\" component=\"span\" />\r\n              <button type=\"submit\" disabled={isSubmitting}>\r\n                Submit\r\n          </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div >\r\n    )\r\n  }\r\n}\r\nconst mapGlobalStateToProps = (state) => {\r\n\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  login\r\n}\r\nexport const Login1 = connect(mapGlobalStateToProps, mapDispatchToProps)(_Login1)","import { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from 'react-redux'\r\nimport { signup } from '../store/actions/userAction.js';\r\n\r\nclass _Signup extends Component {\r\n  state = {\r\n    user: {\r\n      username: '',\r\n      fullname: '',\r\n      password: ''\r\n    },\r\n    err: {\r\n      txt: ''\r\n    }\r\n  }\r\n  handleChange = ({ target }) => {\r\n    const field = target.name\r\n    const value = (target.type === 'number') ? +target.value : target.value\r\n    this.setState(prevState => ({\r\n      user: {\r\n        ...prevState.user,\r\n        [field]: value\r\n      }\r\n    }))\r\n  }\r\n  onSignUpUser = async (ev) => {\r\n    ev.preventDefault()\r\n    try {\r\n      await this.props.signup(this.state.user)\r\n      this.props.history.push('/boards')\r\n    } catch (err) {\r\n      this.setState({ err })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user, err } = this.state\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\" >\r\n        <CssBaseline />\r\n        <div style={{\r\n          marginTop: '10px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}>\r\n          <Avatar style={{\r\n            margin: '10px',\r\n            backgroundColor: 'blue',\r\n          }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h2\" variant=\"h5\">\r\n            Sign Up\r\n        </Typography>\r\n          <div className=\"err\">{err && err.txt}</div>\r\n          <form onSubmit={this.onSignUpUser} style={{\r\n            width: '100%',\r\n            marginTop: '5px'\r\n          }} >\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"Username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              autoFocus\r\n              value={user.username}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"fullname\"\r\n              label=\"Full Name\"\r\n              name=\"fullname\"\r\n              value={user.fullname}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={user.password}\r\n              onChange={this.handleChange}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginTop: '10px' }}\r\n            >\r\n              Sign Up\r\n          </Button>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n\r\n        </Box>\r\n      </Container >\r\n    );\r\n  }\r\n\r\n}\r\nconst mapGlobalStateToProps = (state) => {\r\n\r\n  return {\r\n    users: state.userModule.users\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  signup\r\n}\r\nexport const Signup = connect(mapGlobalStateToProps, mapDispatchToProps)(_Signup)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Line, Doughnut, Bar, Radar } from 'react-chartjs-2'\r\nimport { loadBoard } from '../store/actions/boardAction.js'\r\nimport { loadUsers } from '../store/actions/userAction.js'\r\nimport { utilService } from '../services/utilService.js'\r\n\r\nexport class _DashBoard extends Component {\r\n  state = {\r\n    board: null\r\n  }\r\n  async componentDidMount() {\r\n    const board = this.props.board\r\n    if (!board) {\r\n      let boardId = this.props.match.params.boardId\r\n      await this.loadBoard(boardId)\r\n      console.log(boardId);\r\n      this.setState({ board: this.props.board }, () => console.log(this.state.board))\r\n    }\r\n    this.setState({ board: this.props.board })\r\n\r\n  }\r\n\r\n  loadBoard = async (boardId) => {\r\n    await this.props.loadBoard(boardId)\r\n  }\r\n\r\n  showTaskPerGroup = () => {\r\n    const mapGroup = this.state.board.groups.reduce((acc, group) => {\r\n      acc[group.title] = group.cards.length\r\n      return acc\r\n    }, {})\r\n    console.log(mapGroup);\r\n    console.log(Object.keys(mapGroup).map(title => title));\r\n    console.log(Object.values(mapGroup).map(title => title));\r\n    return {\r\n\r\n      labels:\r\n        Object.keys(mapGroup).map(title => title),\r\n      datasets: [{\r\n        data: Object.values(mapGroup).map(title => title),\r\n        backgroundColor: [\r\n          ...Object.keys(mapGroup).map(() => utilService.getRandomColor())\r\n        ],\r\n        hoverBackgroundColor: [\r\n          ...Object.keys(mapGroup).map(() => '#FFFFFF')\r\n        ]\r\n      }]\r\n    };\r\n\r\n  }\r\n\r\n  showTaskPerLabel = () => {\r\n    const mapLabels = this.state.board.groups.reduce((acc, group) => {\r\n      group.cards.forEach(card => {\r\n        card.labels.forEach(label => {\r\n          if (!acc[label.title]) acc[label.title] = 1\r\n          else acc[label.title] += 1\r\n        })\r\n\r\n      })\r\n      return acc\r\n    }, {})\r\n    return {\r\n      labels:\r\n        [...Object.keys(mapLabels).map(title => title)],\r\n      datasets: [{\r\n        data: [...Object.values(mapLabels).map(title => title)],\r\n        backgroundColor: [\r\n          ...Object.keys(mapLabels).map(() => utilService.getRandomColor())\r\n\r\n        ],\r\n        hoverBackgroundColor: [\r\n          ...Object.keys(mapLabels).map(() => '#FFFFFF')\r\n        ]\r\n      }]\r\n    };\r\n  }\r\n\r\n  showTotalCards = () => {\r\n    let cardNum = 0\r\n    let cardUnassignedNum = 0\r\n    this.state.board.groups.forEach(group => {\r\n      group.cards.forEach(card => {\r\n        if (card.members?.length > 0) {\r\n          cardUnassignedNum++\r\n        }\r\n        cardNum++\r\n      })\r\n    })\r\n    cardUnassignedNum = cardNum - cardUnassignedNum\r\n    return { cardNum, cardUnassignedNum }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.board) return <div>Loading...</div>\r\n    return (\r\n      <div className=\"statistics-page\">\r\n        <h1>Hello Statisctis</h1>\r\n        <header className=\"dashboard-header flex\">\r\n          <div className=\"dashboard-preview flex column\"><span>{this.showTotalCards().cardNum}</span> <span> TOTAL CARDS</span></div>\r\n          <div className=\"dashboard-preview flex column\"><span>{this.showTotalCards().cardUnassignedNum}</span> <span> UNASSIGNED CARDS</span></div>\r\n          <div className=\"dashboard-preview flex column\"><span>0</span> <span> ADDED TODAY</span></div>\r\n        </header>\r\n        <div className=\"dashboard-content flex\" style={{ margin: '0 auto', height: '600px', width: '600px', flexWrap: 'wrap' }}>\r\n          {/* <Polar className=\"test\" data={this.showStatistics()} /> */}\r\n          <Bar options={{\r\n            scales: {\r\n              yAxes: [{\r\n                stacked: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"rgba(255,255,255,0.8)\"\r\n                }\r\n              }],\r\n              xAxes: [{\r\n                gridLines: {\r\n                  display: false\r\n                }\r\n              }]\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Task Per Group',\r\n              fontSize: 25\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: 'right'\r\n            },\r\n            labels: {\r\n              fontColor: 'rgb(0, 0, 0)'\r\n            }\r\n          }} className=\"test\" data={this.showTaskPerGroup()} />\r\n          <Doughnut options={{\r\n            scales: {\r\n              yAxes: [{\r\n                stacked: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"rgba(255,255,255,0.8)\"\r\n                }\r\n              }],\r\n              xAxes: [{\r\n                gridLines: {\r\n                  display: false\r\n                }\r\n              }]\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Task Per Label',\r\n              fontSize: 25\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: 'right'\r\n            }\r\n          }} className=\"test\" data={this.showTaskPerLabel()} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  board: state.boardModule.currBoard,\r\n  users: state.userModule.users\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  loadUsers,\r\n  loadBoard\r\n}\r\n\r\nexport const DashBoard = connect(mapStateToProps, mapDispatchToProps)(_DashBoard)\r\n","import { connect } from 'react-redux'\r\nimport { AppHeader } from './cmps/AppHeader'\r\nimport { Home } from './pages/Home'\r\nimport { Boards } from './pages/Boards'\r\nimport { BoardApp } from './pages/BoardApp'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { saveBoard } from './store/actions/boardAction'\r\nimport { Login } from './pages/Login'\r\nimport { Login1 } from './pages/Login1'\r\nimport { Signup } from './pages/Signup'\r\nimport { DashBoard } from './pages/DashBoard'\r\nexport function _App({ currBoard }) {\r\n  return (\r\n    <div className=\"App\" style={{ backgroundImage: `url(${(currBoard) ? currBoard.style.backgroundImage : 'white'})` }}>\r\n      <AppHeader />\r\n      <Switch>\r\n\r\n        <Route component={Login1} path=\"/login1\" />\r\n        <Route component={Login} path=\"/login\" />\r\n        <Route component={Signup} path=\"/signup\" />\r\n        <Route component={DashBoard} path=\"/board/:boardId/dashboard\" />\r\n        <Route component={BoardApp} path=\"/board/:boardId\" />\r\n        <Route component={Boards} path=\"/boards\" />\r\n        <Route component={Home} path=\"/\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currBoard: state.boardModule.currBoard\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  saveBoard,\r\n\r\n}\r\n\r\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App)\r\n\r\n\r\n","const initialState = {\r\n  currBoard: null,\r\n  boards: [],\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return { ...state, boards: action.boards }\r\n    case 'SET_BOARD':\r\n      return { ...state, currBoard: { ...action.board } }\r\n    case 'UPDATE_BOARD':\r\n      return { ...state, currBoard: action.board }\r\n    case 'CLEAN_BOARD':\r\n      return { ...state, currBoard: null }\r\n    case 'ADD_BOARD':\r\n      return { ...state, boards: [...state.boards, action.board], currBoard: { ...action.board } }\r\n    case 'SAVE_BOARD':\r\n      return {\r\n        ...state, boards: state.boards.map(board => {\r\n          if (board._id === action.board._id) return action.board\r\n          else return board\r\n        })\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  currCard: null,\r\n  currGroup: null\r\n}\r\n\r\nexport function cardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_CARD':\r\n      return { ...state, currCard: { ...action.card } }\r\n    case 'SET_GROUP':\r\n      return { ...state, currGroup: { ...action.group } }\r\n    case 'CLEAR_STATE':\r\n      return { ...state, currGroup: action.clear, currCard: action.clear }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// case 'ADD_LABEL':\r\n//   return { ...state, currCard: { ...state.currCard, labels: [action.label, ...state.currCard.labels] } }","\r\nconst initialState = {\r\n  // loggedInUser: null,\r\n  loggedInUser: JSON.parse(sessionStorage.getItem('loggedinUser')) || null,\r\n  users: [],\r\n  filterBy: { fullname: '' }\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'LOGIN':\r\n      return { ...state, loggedInUser: { ...action.user } }\r\n    case 'LOGOUT':\r\n      return { ...state, loggedInUser: null }\r\n    case 'SIGNUP':\r\n      return { ...state, users: [...state.users, action.user], loggedInUser: action.user }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\n\r\n\r\nimport { boardReducer } from './reducers/boardReducer.js';\r\nimport { cardReducer } from './reducers/cardReducer.js';\r\nimport { userReducer } from './reducers/userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    boardModule: boardReducer,\r\n    cardModule: cardReducer,\r\n    userModule: userReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\nwindow.theStore = store;\r\nstore.subscribe(() => {\r\n    console.log('Global State is:', store.getState())\r\n})","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App.jsx';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from '../src/store/store';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './assets/styles/main.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}