{"version":3,"sources":["services/httpService.js","services/sessionStorage.js","services/userService.js","store/actions/userAction.js","services/boardService.js","services/socketService.js","store/actions/boardAction.js","services/utilService.js","cmps/BoardHeader/AddBoard.jsx","cmps/AppHeader.jsx","pages/Home.jsx","cmps/BoardPreview.jsx","pages/Boards.jsx","cmps/AddMember.jsx","cmps/BoardHeader/BoardColors.jsx","cmps/BoardHeader/BoardPhotos.jsx","cmps/BoardHeader/ChangeBackground.jsx","cmps/BoardHeader/BoardMenu.jsx","cmps/BoardHeader/BoardHeader.jsx","cmps/BoardHeader/FilterCards.jsx","cmps/Group/GroupAdd.jsx","services/eventBusService.js","store/actions/cardAction.js","cmps/Card/CardPreviewLabel.jsx","cmps/Card/CardPreviewBottom.jsx","cmps/Card/CardPreview.jsx","cmps/Card/CardAddForm.jsx","cmps/Card/CardList.jsx","cmps/Group/GroupTitle.jsx","cmps/Card/CardAdd.jsx","cmps/Group/GroupPreview.jsx","cmps/Group/GroupList.jsx","cmps/Group/GroupMenu.jsx","cmps/Card/CardHeader.jsx","cmps/Card/CardActivityContainer.jsx","services/cardService.js","cmps/Card/CardChecklist.jsx","cmps/Card/CardInfo.jsx","services/cloudinaryService.js","cmps/Card/CardCover.jsx","cmps/Card/CardLabels.jsx","cmps/Card/DatePicker.jsx","cmps/Card/CardSide.jsx","services/activityService.js","cmps/Card/CardDetails.jsx","cmps/Card/CardPreviewDetails.jsx","pages/BoardApp.jsx","pages/Login.jsx","pages/Login1.jsx","pages/Signup.jsx","pages/DashBoard.jsx","App.jsx","store/reducers/boardReducer.js","store/reducers/cardReducer.js","store/reducers/userReducer.js","store/store.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","console","log","ajax","a","method","url","res","dir","response","status","window","location","assign","storageService","store","key","value","sessionStorage","JSON","stringify","load","defaultValue","parse","clear","STORAGE_KEY","userService","query","login","logout","signup","loadUser","filterBy","credentials","user","_handleLogin","newUser","loadUsers","dispatch","users","type","userCred","boardService","remove","boardId","save","board","_id","getBoardById","getGroupIdxById","groupId","groupIdx","groups","findIndex","group","id","socketService","socket","setup","io","on","eventName","cb","off","emit","terminate","createSocketService","loadBoard","saveBoard","isRenderSocket","savedBoard","utilService","getRandomInt","min","max","Math","ceil","floor","random","makeId","length","text","possible","i","charAt","createTime","timeNow","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","timeString","getDueDate","timeStamp","stampDate","month","getMonth","day","getDate","convertName","fullname","letterName","names","split","toUpperCase","getTodoProgress","card","checklist","todos","doneTodos","filter","todo","isDone","total","done","getRandomDarkColor","idx","getRandomBrightColor","getModalPos","ev","width","height","diffX","innerWidth","clientX","diffY","innerHeight","clientY","pos","x","y","AddBoard","state","title","imgUrlLarge","imgUrlmedium","mounted","picked","onClose","setState","bgColors","setBgcImg","prevState","onAddBoard","preventDefault","style","backgroundImage","backgroundImagePreview","props","addBoard","handleInput","target","name","this","CSSTransition","in","classNames","timeout","onExited","toggleAddBoard","className","onClick","map","color","src","alt","onSubmit","onChange","placeholder","autoComplete","required","Component","_AppHeader","loggedInUser","isAddBoardShow","newBoardId","history","push","prevProps","to","imgUrl","mapDispatchToProps","AppHeader","connect","userModule","boardModule","currBoard","withRouter","Home","BoardPreview","backgroundColor","backgroundRepeat","backgroundSize","backgroundPosition","_Boards","isAddBoardShown","loadBoards","boards","Boards","_AddMember","handleChange","field","onSetUserFilter","onToggleUser","onUpdateMembers","members","toggleMembers","modalChangePos","position","top","left","Input","currUser","AddMember","_BoardColors","getImgForBgc","toggleMenu","BoardColors","_BoardPhotos","photos","imgUrlSmall","useImgForBgc","photo","BoardPhotos","ChangeBackground","bgcFrom","chooseBgcFrom","from","onChangeBackground","_BoardMenu","mainRef","isChanging","stopPropagation","ref","opacity","visibility","activities","activity","byMember","toGroup","txt","date","createdAt","BoardMenu","_BoardHeader","isWrapper","isMoreMembersShown","filterUserBy","isStatisticShown","current","boardMenuVisibility","React","createRef","onSaveTitle","member","memberIdx","currMember","splice","setUserFilter","currBoardId","onBlur","TransitionGroup","BoardHeader","GroupAdd","isAddOpen","openInput","closeInput","onSaveGroup","cards","onAddGroup","onScroll","autoFocus","eventBusService","listener","callListener","detail","addEventListener","removeEventListener","dispatchEvent","CustomEvent","setGroup","err","CardPreviewLabel","isLableTitleShown","toggleLableTitle","labels","label","CardPreviewBottom","progress","dueDate","now","comments","_CardPreview","onShowCard","setCard","showPreviewDetails","newClientPos","index","draggableId","provided","snapshot","draggableProps","innerRef","dragHandleProps","getItemStyle","isDragging","isDraggingOver","draggableStyle","userSelect","padding","margin","borderRadius","background","boxShadow","CardPreview","currCard","cardModule","CardAddForm","openCardAdd","setTimeout","onSaveCard","onAddCard","eventBusTerminate","cols","rows","marginTop","onMouseDown","CardList","scrollTop","getListStyle","paddingTop","paddingBottom","paddingLeft","groupTitle","refs","droppableId","droppableProps","_GroupTitle","isTitleShown","textInput","updateBoard","showGroupMenu","showInput","dragHandle","fontFamily","fontWeight","fontSize","GroupTitle","CardAdd","GroupPreview","refCard","scrolltobottom","outline","grpTitle","GroupList","_GroupMenu","userClicked","onRemoveGroup","copyBoard","currGroup","onCopyGroup","copyGroup","zIndex","GroupMenu","CardHeader","onHandleInputChange","spellCheck","_CardActivityContainer","isSaveOpen","newComment","onHandleCommentChange","onToggleIsSaveOpen","isOpen","createComment","onSaveNewComment","comment","commentsCopy","unshift","Array","onHandleActivitiesChange","CardActivityContainer","cardService","createTodo","createChecklist","CardChecklist","newTodoTitle","onHandleTitleChange","onHandleChecklistChange","onHandleTodosChange","checked","updatedTodos","saveTodos","onRemoveTodo","addOrCancelChecklist","todosCopy","saveNewTodo","todoToSave","onHandleNewTodoChange","toggleIsAddOpen","progressBarPrecentage","acc","forEach","todosPrecent","CardInfo","moment","format","description","cloudinaryService","uploadImg","file","UPLOAD_URL","formData","FormData","append","fetch","body","json","CardCover","isUploading","coverColors","onUploadImg","files","secure_url","onFinishUpload","setColor","onUpdateCoverColor","toggleCoverMenu","htmlFor","hidden","accept","_CardLabels","isCreateLabel","currLabel","colors","onEditClick","onHandleNewLabel","val","onToggleLabel","onAddLabel","labelsCopy","onHandleLabelsChange","clearNewLabel","onChooseLabel","checkForDuplicate","removeLabel","find","isClose","onToggleLabels","checkForMark","onRemoveLabel","toggleLabelMenu","CardLabels","DatePicker","onSavedueDate","substring","toggleDate","CardSide","isDateShown","isLabelsShown","isLabelsMenuShown","isCoverMenuShown","onRemoveCard","onAddChecklist","saveChanges","onUploadCardCoverImg","activityService","createActivity","action","moveTo","_CardDetails","initialCard","checklistValidation","isActivityUpdate","sendUpdatedBoard","cardIdx","toggleDetails","newCard","onDeleteCover","usersForDisplay","filterRegex","RegExp","test","clearState","CardDetails","_CardPreviewDetails","isChangeMembers","isChangeDueDate","modalRef","modalLabelRef","closeModal","showPreviewCardDetails","getNewPos","showMembers","showDueDate","onUpdateCard","copyCard","updatedCard","isSave","size","right","bottom","wrap","flexGrow","textAlign","CardPreviewDetails","_BoardApp","isDetailsShown","scrollLeft","isPreviewDetailsShown","isGroupMenuShown","scrollWidth","refBoard","match","params","isUpdate","updatedLabels","onDragCard","sourceGroup","destinationGroup","onDragEnd","result","destination","source","dragGroup","draggingCard","scrolltoleft","eventBusLabelTerminate","eventBusRemoveTerminate","eventBusShowPreviewDetailsTerminate","eventBusShowGroupMenuTerminate","cleanBoard","direction","BoardApp","_Login","username","password","onLogin","Container","component","maxWidth","CssBaseline","display","flexDirection","alignItems","Avatar","Typography","variant","TextField","fullWidth","Button","Grid","container","item","xs","Link","href","Box","mt","Login","_Login1","initialValues","isSubmitting","as","disabled","Login1","_Signup","onSignUpUser","Signup","_DashBoard","textSize","updateTextSize","showTaskPerGroup","mapGroup","reduce","Object","keys","datasets","values","hoverBackgroundColor","showTaskPerLabel","mapLabels","showTaskPerMember","mapMembers","showTotalCards","cardNum","cardUnassignedNum","flexWrap","options","responsive","scales","yAxes","stacked","gridLines","fontColor","legend","align","ticks","beginAtZero","xAxes","DashBoard","App","path","initialState","getItem","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","process","origin","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.85a57648.chunk.js","sourcesContent":["import Axios from 'axios'\n\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? '/api/'\n    : '//localhost:3030/api/'\n// : '//localhost:3030/'\n\nvar axios = Axios.create({\n    withCredentials: true\n})\n\nexport const httpService = {\n    get(endpoint, data) {\n        console.log('data', data);\n        return ajax(endpoint, 'GET', data)\n\n    },\n    post(endpoint, data) {\n        return ajax(endpoint, 'POST', data)\n    },\n    put(endpoint, data) {\n        return ajax(endpoint, 'PUT', data)\n    },\n    delete(endpoint, data) {\n        return ajax(endpoint, 'DELETE', data)\n    }\n}\n\nasync function ajax(endpoint, method = 'get', data = null) {\n    try {\n        const res = await axios({\n            url: `${BASE_URL}${endpoint}`,\n            method,\n            data\n        })\n        return res.data\n    } catch (err) {\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\n        console.dir(err)\n        if (err.response && err.response.status === 401) {\n            window.location.assign('/#/login')\n        }\n        throw err\n    }\n}","export const storageService = {\n  store,\n  load,\n  clear\n}\n\nfunction store(key, value) {\n  sessionStorage[key] = JSON.stringify(value);\n\n}\n\nfunction load(key, defaultValue = null) {\n  let value = sessionStorage[key];\n  if (!value) return defaultValue\n  else return JSON.parse(value);\n}\n\n\nfunction clear() {\n  sessionStorage.clear()\n}\n\n","import { httpService } from './httpService.js'\nimport { storageService } from './sessionStorage.js'\n\nconst STORAGE_KEY = 'loggedinUser'\n\n\nexport const userService = {\n    query,\n    login,\n    logout,\n    signup,\n    loadUser\n}\n\n\n\n// const baseUrl = 'http://localhost:3030/api/user'\n// const baseUrl = 'http://localhost:3030/user'\n// const baseUrl = 'http://localhost:3030/api/auth';\n\nasync function query(filterBy) {\n    console.log('fiter by', filterBy)\n    return httpService.get(`user`, filterBy )\n}\n\nasync function login(credentials) {\n    //loadUser()\n    const user = await httpService.post(`auth/login`, credentials);\n    return _handleLogin(user);\n}\n\nasync function logout() {//check with liel how to do this\n    storageService.clear();\n    await httpService.post(`auth/logout`);\n}\n\n\nasync function signup(credentials) {\n    // console.log('credentials', credentials)\n    const newUser = await httpService.post(`auth/signup`, credentials);\n    return _handleLogin(newUser);\n}\n\nasync function loadUser() {\n    const user = storageService.load(STORAGE_KEY)\n    // console.log('user', user);\n    return user\n}\nfunction _handleLogin(user) {\n    storageService.store(STORAGE_KEY, user)\n    return user\n}","import { userService } from '../../services/userService.js'\n\n\nexport function loadUsers(filterBy) {\n    return async (dispatch) => {\n        try {\n            const users = await userService.query(filterBy)\n            dispatch({ type: 'SET_USERS', users })\n        } catch (err) {\n            console.log('err userAction LOAD users', err);\n        }\n    }\n}\n\nexport function login(userCred) {\n    return async (dispatch) => {\n        try {\n            const user = await userService.login(userCred)\n            dispatch({ type: 'LOGIN', user })\n        } catch (err) {\n            console.log('err userAction LOGIN USER', err);\n        }\n    }\n}\n\nexport function logout() {\n    return async (dispatch) => {\n        try {\n            await userService.logout()\n            dispatch({ type: 'LOGOUT' })\n        } catch (err) {\n            console.log('err userAction LOGOUT USER', err);\n        }\n    }\n}\n\nexport function signup(userCred) {\n    return async (dispatch) => {\n        try {\n            const user = await userService.signup(userCred)\n            dispatch({ type: 'SIGNUP', user })\n        } catch (err) {\n            console.log('err userAction SIGNUP USER', err);\n        }\n    }\n}\n\nexport function loadUser(userCred) {\n    return async (dispatch) => {\n        try {\n            const user = await userService.loadUser(userCred)\n            dispatch({ type: 'SET_USER', user })\n        } catch (err) {\n            console.log('err userAction LOAD USER', err);\n        }\n    }\n}\n\n\nexport function setUserFilter(filterBy) {\n    return (dispatch) => { dispatch({ type: 'SET_FILTER', filterBy }) }\n}\n","import { httpService } from './httpService.js'\n\nexport const boardService = {\n    query,\n    remove,\n    save,\n    getBoardById,\n    getGroupIdxById,\n}\n\nfunction query() {\n    return httpService.get(`board`)\n}\n\nfunction remove(boardId) {\n    return httpService.delete(`board/${boardId}`)\n}\nfunction save(board) {\n    if (board._id) {\n        return httpService.put(`board/${board._id}`, board)\n    } else {\n        return httpService.post('board', board)\n    }\n}\n\nfunction getBoardById(boardId) {\n    return httpService.get(`board/${boardId}`)\n}\n\nasync function getGroupIdxById(boardId, groupId) {\n    try {\n        const board = await getBoardById(boardId)\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\n        return groupIdx\n    } catch (err) {\n        console.log('err boardService GET GROUP IDX BY ID', err)\n    }\n}\n\n","import io from 'socket.io-client'\n\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\nexport const socketService = createSocketService()\n// export const socketService = createDummySocketService()\n\nwindow.socketService = socketService\n\n\nfunction createSocketService() {\n  var socket\n  const socketService = {\n    setup() {\n      socket = io(baseUrl)\n    },\n    on(eventName, cb) {\n      socket.on(eventName, cb)\n    },\n    off(eventName, cb) {\n      socket.off(eventName, cb)\n    },\n    emit(eventName, data) {\n      socket.emit(eventName, data)\n    },\n    terminate() {\n      socket = null\n    }\n  }\n  return socketService\n}\n\n// eslint-disable-next-line\nfunction createDummySocketService() {\n  var listenersMap = {}\n  const socketService = {\n    setup() {\n      listenersMap = {}\n    },\n    terminate() {\n      this.setup()\n    },\n    on(eventName, cb) {\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\n    },\n    off(eventName, cb) {\n      if (!listenersMap[eventName]) return\n      listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\n    },\n    emit(eventName, data) {\n      if (!listenersMap[eventName]) return\n      listenersMap[eventName].forEach(listener => {\n        listener(data)\n      })\n    },\n    debugMsg() {\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\n    },\n  }\n  return socketService\n}\n\n\n// Basic Tests\n// function cb(x) { console.log(x) }\n// socketService.on('baba', cb)\n// socketService.emit('baba', 'DATA')\n// socketService.off('baba', cb)\n","import { boardService } from '../../services/boardService.js'\nimport { socketService } from '../../services/socketService.js';\n\nexport function loadBoards() { // Action Creator\n    return async (dispatch) => {\n        try {\n            const boards = await boardService.query()\n            dispatch({ type: 'SET_BOARDS', boards })\n        } catch (err) {\n            console.log('err boardAction LOAD BOARDS', err);\n        }\n    }\n}\n\nexport function loadBoard(boardId) {\n    return async (dispatch) => {\n        try {\n            const board = await boardService.getBoardById(boardId)\n            console.log('board from DISPATCH', board)\n            dispatch({ type: 'SET_BOARD', board })\n        } catch (err) {\n            console.log('err boardAction LOAD BOARD', err);\n        }\n    }\n}\n\nexport function saveBoard(board, isRenderSocket = false) {\n    return async (dispatch) => {\n        try {\n            const savedBoard = await boardService.save(board)\n            // console.log('savedBoard', savedBoard);\n            if (!isRenderSocket) {\n                console.log('ACTIONboard', board)\n                socketService.emit('render', board)\n                // socketService.emit('render', board)\n            }\n            dispatch({ type: (board._id) ? 'UPDATE_BOARD' : 'ADD_BOARD', board: savedBoard })\n        } catch (err) {\n            console.log('err boardAction SAVE BOARD', err);\n        }\n    }\n}\n\nexport function cleanBoard() {\n    return (dispatch) => {\n        try {\n            dispatch({ type: 'CLEAN_BOARD' })\n        } catch (err) {\n            console.log('err boardAction CLEAN BOARD', err);\n        }\n    }\n}\n\n\n","export const utilService = {\n  getRandomInt,\n  makeId,\n  createTime,\n  getDueDate,\n  convertName,\n  getTodoProgress,\n  getRandomDarkColor,\n  getRandomBrightColor,\n  getModalPos,\n\n}\n\nfunction getModalPos(ev, { width, height }) {\n  if (!ev) return\n\n  const diffX = window.innerWidth - ev.clientX\n  const diffY = window.innerHeight - ev.clientY\n  const pos = { x: ev.clientX, y: ev.clientY }\n\n  if (pos.x < width) pos.x = 10\n  if (diffX < width) pos.x = window.innerWidth - (width + 10)\n  if (diffY < height) pos.y -= (height - diffY)\n\n  return pos\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction makeId(length = 7) {\n  var text = \"\";\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (var i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}\n\nfunction createTime() {\n  var timeNow = new Date();\n  var hours = timeNow.getHours();\n  var minutes = timeNow.getMinutes();\n  var seconds = timeNow.getSeconds();\n  var timeString = \"\" + ((hours > 12) ? hours - 12 : hours);\n  timeString += ((minutes < 10) ? \":0\" : \":\") + minutes;\n  timeString += ((seconds < 10) ? \":0\" : \":\") + seconds;\n  return timeString;\n}\n\nfunction getDueDate(timeStamp) {\n  var stampDate = new Date(timeStamp);\n  const allMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n    \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  const month = allMonths[stampDate.getMonth()]\n  const day = stampDate.getDate()\n  const date = `${month} ${day}`\n  return date\n}\n\nfunction convertName(fullname) {\n  if (!fullname) return\n  let letterName;\n  const names = fullname.split(' ')\n  if (!names[1]) letterName = names[0][0].toUpperCase()\n  else letterName = names[0][0].toUpperCase() + names[1][0].toUpperCase()\n  return letterName\n}\n\nfunction getTodoProgress(card) {\n  if (card.checklist) {\n    const { todos } = card.checklist\n    let doneTodos = todos.filter(todo => todo.isDone)\n    const progress = { total: todos.length, done: doneTodos.length }\n    return progress\n  }\n  else return\n\n}\nfunction getRandomDarkColor(idx) {\n  var colors = ['#FF6384', '#36A2EB', '#FFCE56', '#16c79a', '#9e9e9e',\n  '#FF6384', '#36A2EB', '#FFCE56', '#16c79a', '#9e9e9e']\n\n  // return colors[getRandomInt(0, 5)];\n  return colors[idx];\n}\nfunction getRandomBrightColor(idx) {\n  var colors = ['#FF6384', '#40a7ec', '#FFCE56', '#16c79a', '#c1c1c1',\n  '#FF6384', '#36A2EB', '#FFCE56', '#16c79a', '#c1c1c1']\n\n  // return colors[getRandomInt(0, 5)];\n  return colors[idx];\n}\n","import React, { Component } from 'react'\nimport { CSSTransition } from 'react-transition-group'\n\nexport class AddBoard extends Component {\n\n    state = {\n        board: {\n            title: '',\n            imgUrlLarge: '',\n            imgUrlmedium: ''\n        },\n        mounted: false,\n        picked: ''\n    }\n\n    componentDidMount() {\n        this.setState({ mounted: true })\n    }\n\n    onClose = () => {\n        this.setState({ mounted: false })\n    }\n\n    // coverColors = () => {\n    //     return ['#f9ed69', '#a56cc1', '#f38181', '#95e1d3', '#878ecd', '#3fc1c9',\n    //         '#a1dd70', '#ffcc29']\n    // }\n\n    bgColors = () => {\n\n        return [{ imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg'},\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg'},\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg'},\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg'},\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712052/pexels-pixabay-461940_znnsxj.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610712052/pexels-pixabay-461940_znnsxj.jpg'},\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/green-1_rp1fjx.jpg', imgUrlmedium:'https://res.cloudinary.com/basimgs/image/upload/v1611084082/green-1_rp1fjx.jpg' },\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/cooldownpink_y0m0db.jpg', imgUrlmedium:'https://res.cloudinary.com/basimgs/image/upload/v1611084082/cooldownpink_y0m0db.jpg' },\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/mizu_qlr5uq.png', imgUrlmedium:'https://res.cloudinary.com/basimgs/image/upload/v1611084082/mizu_qlr5uq.png' },\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/0322_purple_hkmphn.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/0322_purple_hkmphn.jpg'}]\n      }\n\n    setBgcImg = (imgUrlLarge, imgUrlmedium, idx) => {\n        console.log('the chosen url is', imgUrlLarge);\n        this.setState(prevState => {\n            return {board: { ...prevState.board, imgUrlLarge, imgUrlmedium}}\n        })\n        this.setState({ picked: idx })\n    }\n\n    onAddBoard = (ev) => {\n        ev.preventDefault()\n        const { title, imgUrlLarge, imgUrlmedium } = this.state.board\n        const board = { title, style: {backgroundImage: imgUrlLarge, backgroundImagePreview: imgUrlmedium} }\n        this.props.addBoard(board)\n        this.onClose()\n    }\n\n    handleInput = ({ target }) => {\n        const { name } = target\n        const { value } = target\n        this.setState(prevState => {\n            return {\n                board: {\n                    ...prevState.board,\n                    [name]: value\n                }\n            }\n        }, () => console.log('input title',this.state.board.title ))\n    }\n\n    render() {\n        const { mounted, picked } = this.state\n        return (\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleAddBoard}>\n            <div className=\"new-board-modal flex column\">\n            <div className=\"new-board-header flex space-around\">\n                <h3>Create New Board</h3>\n                <button onClick={this.onClose}>✕</button>\n            </div>\n                <div className=\"board-cover-colors\">\n                        {this.bgColors().map((color, idx) => {\n                            return <div className={(picked === idx)? \"new-board-color picked\": \"new-board-color\"} key={idx}\n                                onClick={() => this.setBgcImg(color.imgUrlLarge ,color.imgUrlmedium, idx)}><img src={color.imgUrlmedium} alt=\"\"/></div>\n                        })}\n                </div>\n                <form onSubmit={this.onAddBoard}><input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInput}\n                    className=\"add-board-input\" placeholder=\"Enter a board title...\" autoComplete=\"off\" required/>\n                    <button className=\"create-board-btn\">Create board</button></form>\n            </div>\n            </CSSTransition>\n        )\n    }\n}\n","import { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Component } from 'react'\nimport { logout, loadUser } from '../store/actions/userAction.js'\nimport { saveBoard } from '../store/actions/boardAction'\nimport { utilService } from '../services/utilService.js'\nimport { AddBoard } from './BoardHeader/AddBoard.jsx'\nimport { withRouter } from \"react-router\";\n\nclass _AppHeader extends Component {\n\n  state = {\n    loggedInUser: null,\n    isAddBoardShow: false,\n  }\n\n  async componentDidMount() {\n    // console.log(this.props);\n    const user = await this.props.loadUser()\n    if (user) this.setState({ loggedInUser: user })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.loggedInUser !== this.state.loggedInUser)\n      this.setState({ loggedInUser: this.props.loggedInUser })\n  }\n\n  toggleAddBoard = () => {\n    this.setState({ isAddBoardShow: !this.state.isAddBoardShow })\n  }\n\n  addBoard = async (board) => {\n    await this.props.saveBoard(board, true)\n    const newBoardId = this.props.board._id\n    console.log('newBoardId', newBoardId)\n    this.props.history.push(`/`)\n    this.props.history.push(`board/${newBoardId}`)\n  }\n\n  render() {\n    // window.loggedInUser = this.state\n    const { loggedInUser, isAddBoardShow } = this.state\n    // if (!loggedInUser) return <div>Loading...</div>\n    // console.log('LOGGED IN USER', loggedInUser);\n    return (\n      <>\n        {isAddBoardShow && <AddBoard addBoard={this.addBoard} toggleAddBoard={this.toggleAddBoard} />}\n        <header className=\"app-header flex space-between\">\n          <nav>\n            <ul className=\"header-list flex justify-center\">\n              <li ><Link to=\"/\" className=\"home-btn\"><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/home_seebre.png\" alt=\"\" /></Link></li>\n              <li ><Link to=\"/boards\" className=\"boards-btn\">Boards</Link></li>\n            </ul>\n          </nav>\n          <li ><Link to=\"/\" className=\"header-title\"><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1611315507/multitask_1_fjrnbt.png\" alt=\"\" /><h2>TasKooler</h2></Link></li>\n          <div className=\"header-right flex\">\n            <button className=\"header-add-board-btn\" onClick={this.toggleAddBoard}><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/plus_ljzrkm.png\" alt=\"\" /></button>\n            {loggedInUser && <> <div className=\"header-user-logged-in\" style={{ backgroundImage: `url(${(loggedInUser.imgUrl) ? loggedInUser.imgUrl : '#3f72af'})` }}></div> <button className=\"header-log-board-btn\" onClick={this.props.logout}> Logout</button></>}\n            {!loggedInUser && <>  <div className=\"header-user-logged-in\">{'G '} </div> <button className=\"header-log-board-btn\"><Link to=\"/login\">Login</Link></button></>}\n          </div>\n        </header>\n      </>\n    )\n  }\n}\n\nconst mapGlobalStateToProps = (state) => {\n  return {\n    loggedInUser: state.userModule.loggedInUser,\n    board: state.boardModule.currBoard\n  }\n}\nconst mapDispatchToProps = {\n  logout,\n  loadUser,\n  saveBoard,\n}\n\nexport const AppHeader = connect(mapGlobalStateToProps, mapDispatchToProps)(withRouter(_AppHeader))\n","import { Link } from 'react-router-dom'\nexport function Home() {\n    return (\n        <main className=\"home-container\">\n            <div className=\"home-img\"></div>\n            <div className=\"text-container flex column\">\n                <h1 className=\"h1-main-header\">Welcome to TasKooler</h1>\n                <h3 className=\"h3-secondary-header\">TasKooler enables you and your team to organize and prioritize all your projects in a fun, flexible way.</h3>\n                <Link to=\"/boards\" className=\"boards-btn\" className=\"get-started-btn\">GET STARTED!</Link>\n            </div>\n\n        </main>\n    )\n}","import { Link } from 'react-router-dom'\n\nexport function BoardPreview({ board }) {\n    return (\n        <Link style={{ width: '280px' }} to={`/board/${board._id}`}>\n            <div style={{\n                backgroundImage: `url(${board.style.backgroundImagePreview})`, backgroundColor: \"#6DB3F2\",\n                // background: `linear-gradient(\n                //     rgba(0, 0, 0, 0),\n                //     rgba(0, 0, 0, 0.7)\n                //   ),\n                //   url(${board.style.backgroundImagePreview})`,\n                // backgroundColor: \"#6DB3F2\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n                // background: \"linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.65) 100%)\",\n            }} className=\"board-preview\">\n                <h1 >{board.title}</h1>\n            </div>\n        </Link>\n    )\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { BoardPreview } from '../cmps/BoardPreview'\nimport { loadBoards, saveBoard } from '../store/actions/boardAction'\nimport Loader from 'react-loader-spinner'\nimport { AddBoard } from '../cmps/BoardHeader/AddBoard'\n\nexport class _Boards extends Component {\n\n    state = {\n        isAddBoardShown: false\n    }\n\n    componentDidMount() {\n        this.props.loadBoards()\n    }\n\n    toggleAddBoard = () => {\n        this.setState({ isAddBoardShown: !this.state.isAddBoardShown })\n    }\n\n    addBoard = async (board) => {\n        await this.props.saveBoard(board, true)\n        const newBoardId = this.props.board._id\n        console.log('newBoardId', newBoardId)\n        this.props.history.push(`board/${newBoardId}`)\n    }\n\n    render() {\n        const { boards } = this.props\n        if (!boards) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={100} width={100} timeout={3000} /></div>\n        const { isAddBoardShown } = this.state\n        // console.log('this.props UPDATE', this.props)\n        return (\n            <>\n                {isAddBoardShown && <AddBoard addBoard={this.addBoard} toggleAddBoard={this.toggleAddBoard} />}\n                <div className=\"boards-page\">\n                    <h2>Our Boards</h2>\n                    <section className=\"boards-container\">\n                        <div className=\"new-board\" onClick={this.toggleAddBoard}><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/plus_ljzrkm.png\" alt=\"\" /></div>\n                        {boards.map(board => {\n                            return <BoardPreview key={board._id} board={board} />\n                        })}\n                    </section>\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        boards: state.boardModule.boards,\n        board: state.boardModule.currBoard,\n        // loggedInUser: state.userModule.loggedInUser,\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoards,\n    saveBoard,\n    // removeBoard,\n}\n\n\n\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { utilService } from '../services/utilService'\nimport Input from '@material-ui/core/Input';\nimport { CSSTransition } from 'react-transition-group'\n\nexport class _AddMember extends Component {\n\n    state = {\n        mounted: false,\n        filterBy: {\n            fullname: '',\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ mounted: true })\n    }\n\n    onClose = () => {\n        this.setState({ mounted: false })\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const {value} = target\n\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }), () => {\n            this.props.onSetUserFilter(this.state.filterBy)\n        })\n    }\n\n    onToggleUser = (user) => {\n        this.props.onUpdateMembers(user)\n    }\n\n    render() {\n        const { users, members } = this.props\n        const { filterBy, mounted } = this.state\n        return (\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleMembers}>\n                 <div className=\"members-container header-members\" style={this.props.modalChangePos ? { position: \"fixed\", top: this.props.modalChangePos.y, left: this.props.modalChangePos.x } : null}>\n                    <div className=\"add-member-header flex spase-between\">\n                        <h3>Members</h3>\n                        <button onClick={this.onClose} className=\"member-close-btn\">✕</button>\n                    </div>\n                    <Input className=\"member-filter\" type=\"text\" name=\"fullname\" value={filterBy.fullname} onChange={this.handleChange} placeholder=\"Search members...\" autoComplete=\"off\" />\n                    <div className=\"new-member-list flex column\">\n                        {users.map(user => <div key={user._id} className=\"member-items flex space-between\" onClick={() => this.onToggleUser(user)}>\n                            <div className=\"flex space-between\"><div className=\"member-item\" \n                            style={{ backgroundImage: `url(${(user.imgUrl) ? user.imgUrl : '#3f72af'})` }}>\n                            {/* style={{ backgroundColor: user.color ? user.color : \"#3f72af\" }}><span>{utilService.convertName(user.fullname)}</span> */}\n                            </div>\n                                <p>{user.fullname}</p></div>\n                            <button className={(members.findIndex(currUser => currUser._id === user._id) > -1) ?\n                                'checked-member' : 'unchecked-member'}>\n                                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610900476/checked_etlnj9.png\" alt=\"\" />\n                            </button>\n                        </div>)}\n                    </div>\n                </div>\n            </CSSTransition>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        // users: state.userModule.users\n        //   board: state.boardModule.currBoard,\n        // filterBy: state.boardModule.filterBy,\n        // loggedInUser: state.userModule.loggedInUser,\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport const AddMember = connect(mapStateToProps, mapDispatchToProps)(_AddMember);\n","import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { saveBoard } from '../../store/actions/boardAction.js'\n\nclass _BoardColors extends Component {\n  bgColors = () => {\n\n    return [{ imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731294/blue_icz7cd.jpg' },\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731552/yellow_acyunw.jpg' },\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731568/yellow2_gakpte.jpg' },\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731599/green-1_h78uob.jpg' },\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731662/green-2_ura9cy.jpg' },\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731705/red-1_mrdvf7.jpg' },\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731707/red-2_vo74ot.jpg' },\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731757/gray-1_rpkrjg.png' },\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731759/gray-2_shnjdu.jpg' },\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731294/blue_icz7cd.jpg' },]\n  }\n  getImgForBgc = async (imgUrl) => {\n    const { currBoard } = this.props\n    currBoard.style.backgroundImage = imgUrl\n    await this.props.saveBoard(currBoard)\n    this.props.toggleMenu()\n  }\n  render() {\n    return (\n      <div className=\"board-colors flex justify-center\">\n        {this.bgColors().map((color, idx) => { return <div className=\"menu-img-box\" key={idx} ><img  className=\"board-colors-grid\" onClick={() => this.getImgForBgc(color.imgUrl)} src={color.imgUrl} alt=\"not good\" /></div> })}\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n  currBoard: state.boardModule.currBoard\n})\n\nconst mapDispatchToProps = {\n  saveBoard,\n\n}\n\nexport const BoardColors = connect(mapStateToProps, mapDispatchToProps)(_BoardColors)\n","\nimport { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { saveBoard } from '../../store/actions/boardAction.js'\nclass _BoardPhotos extends Component {\n\n\n  photos = () => {\n    return [{ imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712043/pexels-roberto-nickson-2885320_ghwa3m.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712043/pexels-roberto-nickson-2885320_ghwa3m.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712043/pexels-roberto-nickson-2885320_ghwa3m.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712043/pexels-vishnu-r-nair-1105666_nkvc5j.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712043/pexels-vishnu-r-nair-1105666_nkvc5j.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712043/pexels-vishnu-r-nair-1105666_nkvc5j.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611385391/sq-92babc9a34c3443f8a5049859caf4799_cwfiw3.webp', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611385391/sq-92babc9a34c3443f8a5049859caf4799_cwfiw3.webp', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611385391/sq-92babc9a34c3443f8a5049859caf4799_cwfiw3.webp' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712045/pexels-eberhard-grossgasteiger-844297_xsbtqx.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712045/pexels-eberhard-grossgasteiger-844297_xsbtqx.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712045/pexels-eberhard-grossgasteiger-844297_xsbtqx.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/v1611388221/ak5cUXibbvJDtkYeDGv6.width-1280_wwbrjj.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/v1611388221/ak5cUXibbvJDtkYeDGv6.width-1280_wwbrjj.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/v1611388221/ak5cUXibbvJDtkYeDGv6.width-1280_wwbrjj.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg' },\n    \n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611500194/pexels-asad-photo-maldives-1450360_jyudu1.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611500194/pexels-asad-photo-maldives-1450360_jyudu1.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611500194/pexels-asad-photo-maldives-1450360_jyudu1.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611500182/pexels-julius-silver-753325_gnne5q.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611500182/pexels-julius-silver-753325_gnne5q.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611500182/pexels-julius-silver-753325_gnne5q.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611500178/pexels-baskin-creative-studios-1766838_au2rj4.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611500178/pexels-baskin-creative-studios-1766838_au2rj4.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611500178/pexels-baskin-creative-studios-1766838_au2rj4.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611500175/pexels-fabian-reitmeier-707915_xjs29p.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611500175/pexels-fabian-reitmeier-707915_xjs29p.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611500175/pexels-fabian-reitmeier-707915_xjs29p.jpg' },\n   \n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712052/pexels-pixabay-461940_znnsxj.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712052/pexels-pixabay-461940_znnsxj.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712052/pexels-pixabay-461940_znnsxj.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611063807/pexels-pixabay-33545_zzzi4o.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611063807/pexels-pixabay-33545_zzzi4o.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611063807/pexels-pixabay-33545_zzzi4o.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611328466/pexels-asad-photo-maldives-1024967_pnt6jt.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611328466/pexels-asad-photo-maldives-1024967_pnt6jt.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611328466/pexels-asad-photo-maldives-1024967_pnt6jt.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611328467/pexels-fabian-wiktor-994605_vi6pck.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400v1611328467/pexels-fabian-wiktor-994605_vi6pck.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611328467/pexels-fabian-wiktor-994605_vi6pck.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611063800/pexels-steve-397857_n8hqga.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611063800/pexels-steve-397857_n8hqga.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611063800/pexels-steve-397857_n8hqga.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611063805/pexels-roberto-shumski-1903702_vtanbj.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611063805/pexels-roberto-shumski-1903702_vtanbj', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611063805/pexels-roberto-shumski-1903702_vtanbj' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712046/pexels-pixabay-2150_mujmra.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712046/pexels-pixabay-2150_mujmra.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712046/pexels-pixabay-2150_mujmra.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611063801/pexels-pixabay-302769_elwsut.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611063801/pexels-pixabay-302769_elwsut.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611063801/pexels-pixabay-302769_elwsut.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712052/pexels-rakicevic-nenad-769525_axqkwd.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712052/pexels-rakicevic-nenad-769525_axqkwd.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712052/pexels-rakicevic-nenad-769525_axqkwd.jpg' },\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712045/pexels-roberto-nickson-2559941_cguwhp.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712045/pexels-roberto-nickson-2559941_cguwhp.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712045/pexels-roberto-nickson-2559941_cguwhp.jpg' }\n    ]\n  }\n\n\n  useImgForBgc = async (imgUrlLarge, imgUrlmedium) => {\n    const { currBoard } = this.props\n    currBoard.style.backgroundImage = imgUrlLarge\n    currBoard.style.backgroundImagePreview = imgUrlmedium\n    await this.props.saveBoard(currBoard)\n    this.props.toggleMenu()\n  }\n  render() {\n    return (\n      <div className=\"board-photos flex justify-center\">\n        {this.photos().map((photo, idx) => { return <div key={idx} className=\"menu-img-box\"><img onClick={() => this.useImgForBgc(photo.imgUrlLarge, photo.imgUrlmedium)} className=\"board-photos-img\" src={photo.imgUrlSmall} alt=\"not good\" /></div> })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currBoard: state.boardModule.currBoard\n})\n\nconst mapDispatchToProps = {\n  saveBoard,\n\n}\n\nexport const BoardPhotos = connect(mapStateToProps, mapDispatchToProps)(_BoardPhotos)\n","import { Component } from 'react'\nimport { BoardColors } from './BoardColors.jsx'\nimport { BoardPhotos } from './BoardPhotos.jsx'\n\nexport class ChangeBackground extends Component {\n  state = {\n    bgcFrom: null\n  }\n  chooseBgcFrom = (from) => {\n    this.setState({ bgcFrom: from })\n  }\n  render() {\n    const { onChangeBackground, toggleMenu } = this.props\n    const { bgcFrom } = this.state\n    return (\n      <>\n        <div className=\"change-bgc-back\"><button onClick={onChangeBackground}>back</button></div>\n        <div className=\"change-bgc flex justify-center\">\n          {/* <div className=\"change-bgc flex space-between\"> */}\n          {!bgcFrom &&\n            <div className=\"flex align-center\">\n              <div className=\"flex column align-center\"><div onClick={() => this.chooseBgcFrom('Photos')} className=\"photos-btn\" ></div>\n                <span>Photos</span>\n              </div>\n              <div className=\"flex column align-center\">\n                <div onClick={() => this.chooseBgcFrom('Colors')} className=\"colors-menu-btn\"></div>\n                <span>Colors</span></div>\n            </div>}\n          {bgcFrom === 'Photos' && <BoardPhotos toggleMenu={toggleMenu} />}\n          {bgcFrom === 'Colors' && <BoardColors toggleMenu={toggleMenu} />}\n\n        </div>\n      </>\n    )\n  }\n}\n\n","import { Component } from 'react'\nimport { ChangeBackground } from './ChangeBackground.jsx'\nimport TimeAgo from 'react-timeago'\nimport { connect } from 'react-redux'\nimport { utilService } from '../../services/utilService.js'\n\nclass _BoardMenu extends Component {\n  render() {\n    const { toggleMenu, mainRef, onChangeBackground, isChanging, board } = this.props\n    return (\n      <div className=\"board-menu-screen flex justify-center\" onClick={ev => ev.stopPropagation()} ref={mainRef} style={{ opacity: '0', visibility: 'hidden', width: 0 }}>\n\n        <section className=\"menu-container\">\n          <div className=\"board-menu-header flex space-around\">\n            <h3 className=\"board-menu-title\">Menu</h3>\n            <h4 className=\"board-menu-close\" onClick={toggleMenu}>✕</h4>\n          </div>\n\n          {!isChanging &&\n            <>\n              <div className=\"bgc-change flex align-center\">\n                <button onClick={onChangeBackground}>Change Background</button>\n              </div>\n              <div className=\"side-activity-title\" >\n                <span>\n                  <img className=\"desc-img\" src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/left-align_qaakok.png\" alt=\"\" />\n                </span><p> Activity</p></div>\n\n              <section className=\"activities-wrapper\">\n                {board.activities && board.activities.map((activity, idx) => (\n                  <div className=\"activity-comment-wrapper flex\" key={idx}>\n                    {/* <div className=\"member\" style={{ backgroundImage: `url(${(activity.createdBy.imgUrl) ? activity.createdBy.imgUrl : '#3f72af'})` }}>{activity.byMember ? utilService.convertName(activity.byMember.fullname) : 'G'}</div> */}\n                    <div className=\"member\" style={{ backgroundImage: `url(${(activity.byMember?.imgUrl) ? activity.byMember?.imgUrl : '#3f72af'})` }}>{!activity.byMember?.imgUrl ? 'G' : ''}</div>\n\n                    <div className=\"activity-comment\">\n                      {!activity.toGroup && <p>{activity.byMember ? activity.byMember.fullname : 'Guest'}: {activity.txt}\n                        {activity.card?.title} {activity.group?.title}</p>}\n\n                      {activity.toGroup && <p>{activity.byMember ? activity.byMember.fullname : 'Guest'}: {activity.txt}\n                       from {activity.group.title} to {activity.toGroup.title}</p>}\n\n                      <TimeAgo className=\"activity-time\" date={activity.createdAt} />\n                    </div>\n                  </div>))}\n              </section>\n            </>\n          }\n          {isChanging && <ChangeBackground toggleMenu={toggleMenu} onChangeBackground={onChangeBackground} />}\n        </section>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    board: state.boardModule.currBoard\n  }\n}\n\nconst mapDispatchToProps = {\n  // saveBoard,\n  // loadUsers,\n}\n\n\n\nexport const BoardMenu = connect(mapStateToProps, mapDispatchToProps)(_BoardMenu);","import React, { Component } from 'react'\nimport { utilService } from '../../services/utilService'\nimport { saveBoard } from '../../store/actions/boardAction'\nimport { loadUsers, setUserFilter } from '../../store/actions/userAction'\nimport { connect } from 'react-redux'\nimport { AddMember } from '../AddMember'\nimport { BoardMenu } from './BoardMenu'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport { Link } from 'react-router-dom'\nimport Loader from 'react-loader-spinner'\nimport { FilterCards } from './FilterCards'\n\nexport class _BoardHeader extends Component {\n\n  state = {\n    board: {\n      title: ''\n    },\n    isChanging: false,\n    isWrapper: false,\n    isMoreMembersShown: false,\n    filterUserBy: {\n      fullname: ''\n    },\n    isStatisticShown: true\n  }\n\n\n  componentDidMount() {\n    this.props.loadUsers(this.props.filterUserBy)\n    this.setState({ board: { title: this.props.board.title } })\n    var w = window.innerWidth;\n    if(w < 450) this.setState({ isStatisticShown: false })\n  }\n\n  componentDidUpdate(prevProps) {\n\n    if (this.props.board.title !== prevProps.board.title) {\n      this.setState(prevState => ({\n        board: {\n          ...prevState.board,\n          title: this.props.board.title\n        }\n      }))\n    }\n\n  }\n\n\n  toggleMenu = () => {\n    const { current } = this.boardMenuVisibility\n    if (current.style.opacity === '0') {\n      current.style.opacity = '1'\n      current.style.visibility = 'visible'\n      current.style.width = '339px'\n\n    } else if (current.style.opacity === '1') {\n      current.style.opacity = '0'\n      current.style.visibility = 'hidden'\n      current.style.width = '0'\n    }\n    this.setState({ isChanging: false, isWrapper: !this.state.isWrapper })\n  }\n  onChangeBackground = () => {\n    this.setState({ isChanging: !this.state.isChanging })\n  }\n\n  boardMenuVisibility = React.createRef()\n\n  handleInput = ({ target }) => {\n    const { name } = target\n    const value = target.value\n    this.setState(prevState => {\n      return {\n        board: {\n          ...prevState.board,\n          [name]: value\n        }\n      }\n    })\n  }\n\n  onSaveTitle = async (ev) => {\n    ev.preventDefault()\n    const { board } = this.props\n    const { title } = this.state.board\n    board.title = title\n    await this.props.saveBoard(board)\n  }\n\n  toggleMembers = () => {\n    this.setState({ isMoreMembersShown: !this.state.isMoreMembersShown })\n  }\n\n  onUpdateMembers = async (member) => {\n    const { board } = this.props\n    const memberIdx = board.members.findIndex(currMember => currMember._id === member._id)\n    if (memberIdx > -1) {\n      board.members.splice(memberIdx, 1)\n    } else {\n      board.members.push(member)\n    }\n    await this.props.saveBoard(board)\n  }\n\n  onSetUserFilter = (filterBy) => {\n    this.setState({ filterUserBy: filterBy }, () => this.props.setUserFilter(this.state.filterUserBy))\n    this.props.loadUsers(this.props.filterUserBy)\n\n  }\n\n\n  render() {\n    const { members, users } = this.props\n    const { board, isChanging, isWrapper, isMoreMembersShown, isStatisticShown } = this.state\n    const currBoardId = this.props.board._id\n    if (!board && !currBoardId) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={100} width={100} timeout={3000} /></div>\n    return (\n      <>\n        {isMoreMembersShown && <div className=\"board-header-member-box\"><AddMember toggleMembers={this.toggleMembers} onUpdateMembers={this.onUpdateMembers}\n          onSetUserFilter={this.onSetUserFilter} members={members} users={users} /></div>}\n        <header className=\"board-header flex space-between\">\n          <div className=\"header-options flex\">\n            {/* <h2>{title}</h2> */}\n            <form onSubmit={this.onSaveTitle} onBlur={this.onSaveTitle} className=\"board-title-form flex space-between\">\n              <input type=\"text\" name=\"title\" value={board.title} onChange={this.handleInput}\n                className=\"board-title-input\" placeholder=\"Enter board title...\" autoComplete=\"off\" />\n            </form>\n            {isStatisticShown && <Link to={`/board/${currBoardId}/dashboard`}>\n              <button className=\"board-header-btn flex space-around\">\n                <h3>Statistics</h3>\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610626728/pie-chart_fnvwct.png\" alt=\"\" />\n              </button>\n            </Link>}\n            {/* <FilterCards\n              saveBoard={this.props.saveBoard}\n              board={this.props.board}\n              members={members}\n            /> */}\n            <div className=\"header-members flex\">\n              <ul className=\"member-list flex\">\n                <TransitionGroup className=\"members-list flex\">\n                  {members.map((member, idx) =>\n                    <CSSTransition key={idx} timeout={500} classNames=\"item\">\n                      <li key={member.fullname} className=\"header-member\"\n                        style={{ backgroundImage: `url(${(member.imgUrl) ? member.imgUrl : '#3f72af'})` }}>\n                        {/* style={{ backgroundColor: member.color ? member.color : \"#3f72af\" }}> */}\n                        {/* {utilService.convertName(member.fullname)} */}\n                      </li>\n                    </CSSTransition>\n                  )}\n                </TransitionGroup>\n              </ul>\n              <button className=\"add-member\" onClick={this.toggleMembers}>\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625640/add-user_qxgidw.png\" alt=\"\" />\n              </button>\n            </div>\n          </div>\n          {/* <BoardFilter /> */}\n          <BoardMenu\n            toggleMenu={this.toggleMenu}\n            mainRef={this.boardMenuVisibility}\n            onChangeBackground={this.onChangeBackground}\n            isChanging={isChanging}\n          />\n\n\n          {isWrapper && <div className=\"board-menu-wrapper\" onClick={(isWrapper) ? this.toggleMenu : () => { return }}>\n          </div>}\n          <button className=\"menu-btn\" onClick={this.toggleMenu}><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610637597/menu_btis53.png\" alt=\"\" /></button>\n        </header>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    board: state.boardModule.currBoard,\n    users: state.userModule.users,\n    filterUserBy: state.userModule.filterBy,\n    // loggedInUser: state.userModule.loggedInUser,\n  }\n}\n\nconst mapDispatchToProps = {\n  saveBoard,\n  loadUsers,\n  setUserFilter\n}\n\n\n\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(_BoardHeader);","import React, { Component } from 'react'\n\nexport class FilterCards extends Component {\n\n  state = {\n    cardsToShow: null,\n    filterBy: {\n      fullname: ''\n    }\n  }\n\n  componentDidMount() {\n    // this.setCardToShow()\n    // this.setCardToShow(this.props.board.groups)\n    // this.setState({cardsToShow: this.props.board.groups})\n    // console.log('this.props.board', this.props.board.groups)\n    // console.log('this.props.members', this.props.members)\n  }\n\n  setCardToShow = () => {\n    const prevGroups = this.props.board.groups\n    const board = { ...this.props.board }\n\n    const regex = new RegExp('adir', 'i')\n    // const regex = new RegExp(this.state.filterBy.fullname, 'i')\n\n    const res = prevGroups.filter(group => {\n\n      group.cards = group.cards.filter(card => {\n\n        card.members = card.members.filter(member => {\n          return regex.test(member.fullname)\n        })\n        // if (!card.members || card.members.length < 1 ) return null\n        return card\n      })\n\n      return group\n    })\n\n    board.groups = res\n    // this.props.saveBoard(board)\n    console.log('RES', res)\n\n  }\n\n  onHandleInputChange = ({ target }) => {\n    const { name } = target\n    const { value } = target\n\n    this.setState(prevState => ({\n      ...prevState,\n      filterBy: {\n        ...prevState.filterBy,\n        [name]: value\n      }\n    }), () => this.setCardToShow())\n  }\n\n  render() {\n    return (\n      <div className=\"filter-cards\">\n        <input\n          type=\"text\"\n          placeholder=\"Filter by user...\"\n          name=\"fullname\"\n          value={this.state.filterBy.fullname}\n          onChange={this.onHandleInputChange}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { utilService } from '../../services/utilService.js'\n\nexport class GroupAdd extends Component {\n\n    state = {\n        isAddOpen: false,\n        group: {\n            title: ''\n        }\n    }\n\n    openInput = () => {\n        this.setState({\n            isAddOpen: true\n        })\n    }\n\n    closeInput = () => {\n        this.setState({\n            isAddOpen: false\n        })\n    }\n\n    onSaveGroup = (ev) => {\n        ev.preventDefault()\n        const group = { title: this.state.group.title, id: utilService.makeId(), cards: [] }\n        this.props.onAddGroup(group)\n        this.setState(\n            {\n                group: { title: '' },\n                isAddOpen: false\n            }, () => this.props.onScroll(null, 280))\n    }\n\n    handleInput = ({ target }) => {\n        const { name } = target\n        const { value } = target\n        this.setState(prevState => {\n            return {\n                group: {\n                    ...prevState.group,\n                    [name]: value\n                }\n            }\n        })\n    }\n\n    render() {\n        const { isAddOpen, group } = this.state\n        return <section className=\"add-group-container\">\n            {isAddOpen &&\n                <form onSubmit={this.onSaveGroup} className=\"new-group-form\">\n                    <input type=\"text\" name=\"title\" value={group.title} onChange={this.handleInput}\n                        className=\"my-input\" placeholder=\"Enter List title...\" autoFocus autoComplete=\"off\" />\n                    <div>\n                        <button className=\"submit-group-btn\">Add List</button>\n                        <button onClick={this.closeInput} className=\"close-input-btn\" ><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610646476/close_voj9v3.png\" alt=\"\" /></button>\n                    </div>\n                </form>\n            }\n            {!isAddOpen && <button className=\"add-group-btn\" onClick={this.openInput}>\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/plus_ljzrkm.png\" alt=\"\" />\n                <span>Add another List</span></button>}\n        </section>\n    }\n}\n","function on(eventName, listener) {\n  const callListener = ({ detail }) => {\n      listener(detail)\n  }\n  window.addEventListener(eventName, callListener)\n  return () => {\n      window.removeEventListener(eventName, callListener)\n  }\n}\n\nfunction emit(eventName, data) {\n  window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\n}\n\n\nexport const eventBusService = { on, emit }","export function setCard(card) {\n  return (dispatch) => {\n    try {\n      dispatch({ type: 'SET_CARD', card })\n\n    } catch (err) {\n      console.log('err cardAction SET CARD', err);\n    }\n  }\n}\n\nexport function setGroup(group) {\n  return (dispatch) => {\n    try {\n      dispatch({ type: 'SET_GROUP', group })\n    } catch (err) {\n      console.log('err cardAction SET GROUP', err);\n    }\n  }\n}\n\nexport function clearState(clear) {\n  return (dispatch) => {\n    try {\n      dispatch({ type: 'CLEAR_STATE', clear })\n    } catch (err) {\n      console.log('err cardAction CLEAR STATE', err);\n    }\n  }\n}\n\nexport function toggleAddCard(isAddOpen) {\n  return (dispatch) => {\n    try {\n      dispatch({ type: 'TOGGLE_ADD_CARD', isAddOpen })\n    } catch (err) {\n      console.log('err cardAction CLEAR STATE', err);\n    }\n  }\n}\n\n// export function addLabel(label) {\n//   return (dispatch) => {\n//     try {\n//       dispatch({ type: 'ADD_LABEL', label })\n//     } catch (err) {\n//       console.log('err cardAction CLEAR STATE', err);\n//     }\n//   }\n// }\n\n","import React, { Component } from 'react'\n\nexport class CardPreviewLabel extends Component {\n    state = {\n        isLableTitleShown: false\n    }\n\n    toggleLableTitle = (ev) => {\n        ev.stopPropagation()\n        this.setState({ isLableTitleShown: !this.state.isLableTitleShown })\n    }\n\n\n\n    render() {\n        const { card } = this.props\n        const { isLableTitleShown } = this.state\n        return (\n            <div>\n                {card.labels && <div className=\"label-container flex\">\n                    {card.labels.map(label => {\n                        return <div key={label.id} style={{ backgroundColor: label.color }} className={isLableTitleShown ? 'card-label open' : 'card-label'} onClick={this.toggleLableTitle}>\n                            {isLableTitleShown && label.title}\n                        </div>\n                    })}\n                </div>}\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { utilService } from '../../services/utilService'\n\nexport function CardPreviewBottom({ card }) {\n    \n    const progress = utilService.getTodoProgress(card)\n    // const iconsMap = [\n    //     { dueDate: \"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" },\n    //     {comments: \"https://res.cloudinary.com/basimgs/image/upload/v1610704026/messenger_ypya0t.png\"},\n    //     {checklist: \"https://res.cloudinary.com/basimgs/image/upload/v1610625361/check-box_pzd2ul.png\"}\n    // ]\n\n    // const content = [\n    //     { dueDate: utilService.getDueDate(card.dueDate) },\n    //     {comments: card.comments?.length},\n    //     {checklist: progress?.done/progress?.total},\n    //     {members: card.members?.map(member => {\n    //         return <div key={member.fullname} className=\"member\">\n    //             {utilService.convertName(member.fullname)}\n    //         </div>\n    //     })}\n    // ]\n\n        \n        // {\n        //     card[type] && <div className={`${type}-container flex`}>\n        //         <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"\" />\n        //         <p className=\"date\">{utilService.getDueDate(card.dueDate)}</p></div>\n        // }\n\n\n    return (\n        <div className=\"card-extras-container flex space-between\">\n            {/* { Object.keys(card).map((prop, idx) => {\n                return < CardPreviewFeature key={idx} card={ card } type = { prop } src = { iconsMap.prop } content = { content.prop } />\n            })} */}\n            {card.dueDate && <div className={card.dueDate < Date.now()? 'dueDate-container red flex':'dueDate-container flex'}>\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"\" />\n                <p className=\"dueDate\">{utilService.getDueDate(card.dueDate)}</p></div>}\n            {card.comments && <div className=\"comments-container flex\">\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610704026/messenger_ypya0t.png\" alt=\"\" />\n                <p className=\"comments\">{card.comments.length}</p></div>}\n            {card.checklist && <div className={(progress.done===progress.total)? 'check-list-container complete flex' : 'chec-klist-container flex'}>\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/check-box_pzd2ul.png\" alt=\"\" />\n                <p className=\"chec-klist\">{progress.done}/{progress.total}</p></div>}\n            {card.members && <div className=\"preview-members-container flex\">\n                {card.members.map(member => {\n                    return <div key={member.fullname} className=\"member\" \n                    // style={{backgroundColor: member.color? member.color: \"#3f72af\"}}>\n                    style={{ backgroundImage: `url(${(member.imgUrl) ? member.imgUrl : '#3f72af'})` }}>\n                        {/* {utilService.convertName(member.fullname)} */}\n                    </div>\n                })}\n            </div>}\n        </div>\n    )\n}\n\n","import { Component } from 'react'\nimport { Draggable } from \"react-beautiful-dnd\"\nimport { connect } from 'react-redux'\nimport { eventBusService } from '../../services/eventBusService.js'\nimport { setCard, setGroup } from '../../store/actions/cardAction.js'\nimport { CardPreviewLabel } from './CardPreviewLabel'\nimport { CardPreviewBottom } from './CardPreviewBottom'\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd'\nimport { utilService } from '../../services/utilService.js'\n\nexport class _CardPreview extends Component {\n    onShowCard = (card, group) => {\n        this.props.setCard(card)\n        this.props.setGroup(group)\n        eventBusService.emit('show-details', true)\n    }\n\n    showPreviewDetails = (ev, card, group) => {\n        const PreviewDetailsSize = { width: 420, height: 210 }\n        const newClientPos = utilService.getModalPos(ev, PreviewDetailsSize)\n        const pos = { ev, newClientPos }\n\n        this.props.setCard(card)\n        this.props.setGroup(group)\n        ev.stopPropagation()\n        eventBusService.emit('show-preview-details', pos, true)\n    }\n\n    render() {\n        const { card, index, group } = this.props\n        return (\n            <div className=\"card-preview\" onClick={() => this.onShowCard(card, group)}>\n                <Draggable key={card.id} draggableId={card.id} index={index}>\n                    {(provided, snapshot) => (\n                        <NaturalDragAnimation\n                            style={provided.draggableProps.style}\n                            snapshot={snapshot}\n                        >\n                            {style => (\n                                <article className=\"card-preview\"\n                                    ref={provided.innerRef}\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    style={getItemStyle(snapshot.isDragging, provided.draggableProps.style, style, snapshot.isDraggingOver)}\n                                >\n                                    <button className=\"show-preview-details-btn\" onClick={(ev) => this.showPreviewDetails(ev, card, group)}><img className=\"show-preview-details-pen\" src=\"https://res.cloudinary.com/basimgs/image/upload/v1610873061/pen_lgmg47.png\" alt=\"pen\" /></button>\n                                    {card.style && (card.style.imgUrl ? <div className=\"card-img-cover\"><img src={card.style.imgUrl} alt=\"\" /></div>\n                                        : <div className=\"card-color-cover\" style={{ backgroundColor: card.style.color }}></div>)}\n                                    <div className=\"lower-card\">\n                                        <CardPreviewLabel card={card} />\n                                        <div className=\"flex space-between\">\n                                            <pre>{card.title}</pre>\n\n                                        </div>\n                                        <CardPreviewBottom card={card} />\n                                    </div>\n                                </article>\n                            )}\n                        </NaturalDragAnimation>\n                    )}\n                </Draggable>\n            </div>\n        )\n    }\n}\n\nconst getItemStyle = (isDragging, draggableStyle, style, isDraggingOver) => ({\n    userSelect: 'none',\n    padding: '0',\n\n    margin: '0 4px 8px 3px',\n    borderRadius: '3px',\n    background: isDragging ? '##e4e0e0' : 'white',\n    // background: isDraggingOver ? 'black' : 'green',\n    boxShadow: `0 1px 0 rgba(9, 30, 66, 0.25)`,\n    ...draggableStyle,\n    ...style\n});\n\nconst mapStateToProps = state => {\n    return {\n        currCard: state.cardModule.currCard\n    }\n}\n\nconst mapDispatchToProps = {\n    setCard,\n    setGroup\n}\n\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { eventBusService } from '../../services/eventBusService'\nimport { utilService } from '../../services/utilService'\nimport { toggleAddCard } from '../../store/actions/cardAction.js'\n\nexport class CardAddForm extends Component {\n  state = {\n    card: {\n      title: ''\n    },\n    isAddOpen: false,\n    groupId: null\n  }\n  componentDidMount() {\n    this.eventBusTerminate = eventBusService.on('open-card-add', this.openCardAdd)\n  }\n\n  componentWillUnmount() {\n    this.eventBusTerminate()\n  }\n\n  openCardAdd = ({ isAddOpen, groupId }) => {\n    if (this.props.groupId === groupId)\n      this.setState({ isAddOpen: isAddOpen, groupId })\n  }\n\n  handleInput = ({ target }) => {\n    const { name } = target\n    const { value } = target\n    this.setState(prevState => {\n      return {\n        card: {\n          ...prevState.card,\n          [name]: value\n        }\n      }\n    })\n  }\n\n  closeInput = () => {\n    this.setState({ isAddOpen: false, card: { title: '' } }, () => {\n      eventBusService.emit('close-card-add', false, this.state.groupId)\n      setTimeout(() => {\n        this.props.onScroll(null, 1000)\n      }, 150)\n    })\n  }\n\n  onSaveCard = (ev) => {\n    ev.preventDefault()\n    if (!this.state.card.title) return\n    const card = { title: this.state.card.title, id: utilService.makeId(), members: [], labels: [] }\n    this.props.onAddCard(card, this.props.groupId)\n    this.closeInput()\n  }\n\n  render() {\n    const { isAddOpen, card } = this.state\n    return (\n      <div className=\"add-card-container\">\n        { isAddOpen &&\n\n          <form onSubmit={this.onSaveCard} className=\"new-card-form\" >\n            {/* <div style={{ height: 40 }}></div> */}\n            {/* <textarea type=\"text\" name=\"title\" value={card.title} onChange={this.handleInput} onBlur={this.closeInput} */}\n            <textarea type=\"text\" name=\"title\" value={card.title} onChange={this.handleInput}\n              className=\"my-input\" placeholder=\"Enter a card title...\" autoFocus required\n              cols=\"35\" rows=\"4\"></textarea>\n            <div className=\"flex\" style={{ marginTop: 5 }}>\n              <button className=\"submit-card-btn\">Add card</button>\n              <button onMouseDown={this.closeInput} className=\"close-input-btn\" >\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610646476/close_voj9v3.png\" alt=\"\" />\n              </button>\n            </div>\n          </form>\n        }\n      </div >\n    )\n  }\n}\n\n\n","import { Droppable } from 'react-beautiful-dnd'\nimport { CardPreview } from './CardPreview.jsx'\nimport { Component } from 'react'\nimport Loader from 'react-loader-spinner'\nimport { CardAddForm } from './CardAddForm.jsx'\n\n\nexport class CardList extends Component {\n    state = {\n        scrollTop: 0\n    }\n\n    // refCard = React.createRef()\n    getListStyle = isDraggingOver => ({\n        // padding: 5,\n        paddingTop: 1,\n        paddingBottom: 5,\n        // paddingBottom: 5,\n        paddingLeft: 5,\n        position: \"relative\",\n        // backgroundColor: (isDraggingOver) ? 'lightgray' : 'unset'\n    })\n\n    // onScroll = (ev, scrolltobottom = 0) => {\n    //     if (!scrolltobottom) return\n    //     const scrollTop = this.refCard.current.scrollTop\n    //     this.setState({\n    //         scrollTop: scrollTop\n    //     }, () => {\n    //         if (scrolltobottom)\n    //             this.props.ref.current.scrollTop = this.props.ref.current.scrollTop + scrolltobottom\n    //     })\n    // }\n    render() {\n        const { cards, id, groupTitle, group, onAddCard } = this.props\n        if (!cards) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={100} width={100} timeout={3000} /></div>\n\n        return (\n            // <div className=\"card-list\" ref={this.refCard} onScroll={this.props.onScroll}>\n            <div className=\"card-list\" ref={this.props.refs} onScroll={this.props.onScroll}>\n                <Droppable droppableId={group.id} type=\"card\">\n                    {(provided, snapshot) => (\n                        <div ref={provided.innerRef} style={this.getListStyle(snapshot.isDraggingOver)}\n                            {...provided.droppableProps}>\n                            {cards.map((card, index) =>\n\n                                <CardPreview key={card.id} card={card} group={group}\n                                    index={index} groupId={id} groupTitle={groupTitle} />\n                            )}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n                <CardAddForm onAddCard={onAddCard} groupId={group.id} onScroll={this.props.onScroll} />\n\n            </div >\n        )\n    }\n}\n\n\n\n","import React, { Component } from 'react'\nimport { loadBoard, saveBoard } from '../../store/actions/boardAction'\nimport { setGroup } from '../../store/actions/cardAction'\nimport { connect } from 'react-redux'\nimport { eventBusService } from '../../services/eventBusService.js'\nexport class _GroupTitle extends Component {\n\n    state = {\n        groupIdx: null,\n        group: {\n            title: ''\n        },\n        isTitleShown: false\n    }\n    textInput = React.createRef()\n\n    componentDidMount() {\n        const groupId = this.props.group.id\n        const { board, group } = this.props\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\n\n        this.setState({ groupIdx, group: { title: group.title } })\n    }\n\n    componentDidUpdate(prevProps) {\n\n        if (this.props.group.title !== prevProps.group.title) {\n            this.setState(prevState => ({\n                group: {\n                    ...prevState.group,\n                    title: this.props.group.title\n                }\n            }))\n        }\n\n    }\n\n    handleInput = ({ target }) => {\n        const { name } = target\n        const value = target.value\n        console.log('target.value', value, name)\n        this.setState(prevState => {\n            return {\n                group: {\n                    ...prevState.group,\n                    [name]: value\n                }\n            }\n        })\n    }\n\n    onSaveTitle = async (ev) => {\n        ev.preventDefault()\n        const groupId = this.props.group.id\n        const board = { ...this.props.board }\n        // console.log('board from title', board)\n        const { title } = this.state.group\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\n        board.groups[groupIdx].title = title\n        await this.props.updateBoard(board)\n        this.setState({ groupIdx: null, isTitleShown: false })\n    }\n\n    showGroupMenu = (ev) => {\n        const { group } = this.props\n        this.props.setGroup(group)\n        // console.log('curr group', group)\n        ev.stopPropagation()\n        eventBusService.emit('show-group-menu', ev, true)\n    }\n\n    showInput = () => {\n        this.setState(prevState => ({\n            ...prevState,\n            isTitleShown: true\n        }))\n    }\n\n    render() {\n        const { group, isTitleShown } = this.state\n        // console.log('GROUP_TITLE:', group.title);\n        return <section className=\"group-title\" {...this.props.dragHandle}>\n            <form onSubmit={this.onSaveTitle} ref={this.textInput} {...this.props.dragHandle} className=\"title-form flex space-between\">\n                {/* <input type=\"text\" ref={this.textInput} name=\"title\" value={group.title} onChange={this.handleInput} */}\n                {/* <TextField id=\"standard-basic\" label=\"Standard\" /> */}\n                {!isTitleShown && <h3 style={{ width: '100%' }} className=\"title-input title\" onClick={this.showInput}>{group.title}</h3>}\n                {isTitleShown && <input type=\"text\" name=\"title\" style={{\n                    width: '90%', fontFamily: \"montserrat\", fontWeight: 600,\n                    fontSize: \"1rem\", paddingTop: 10, paddingBottom: 10\n                }} autoFocus value={group.title} onChange={this.handleInput}\n                    className=\"title-input\" placeholder=\"Enter List title...\" autoComplete=\"off\" onBlur={this.onSaveTitle} />}\n                {/* <input type=\"text\" name=\"title\" value={group.title} onChange={this.handleInput}\n                    className=\"title-input\" placeholder=\"Enter List title...\" autoComplete=\"off\" onBlur={this.onSaveTitle} /> */}\n                <button className=\"more-options-btn\" onClick={(ev) => this.showGroupMenu(ev)}><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/more_e8mezf.png\" alt=\"\" /></button>\n            </form>\n        </section>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.currBoard,\n        // filterBy: state.boardModule.filterBy,\n        // loggedInUser: state.userModule.loggedInUser,\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoard,\n    saveBoard,\n    setGroup\n}\n\n\n\nexport const GroupTitle = connect(mapStateToProps, mapDispatchToProps)(_GroupTitle);","import { Component } from 'react'\nimport { utilService } from '../../services/utilService.js'\nimport { connect } from 'react-redux'\nimport { toggleAddCard } from '../../store/actions/cardAction.js'\nimport { eventBusService } from '../../services/eventBusService.js'\n\nexport class CardAdd extends Component {\n    state = {\n        isAddOpen: false,\n    }\n    componentDidMount() {\n        this.eventBusTerminate = eventBusService.on('close-card-add', this.closeInput)\n    }\n\n    componentWillUnmount() {\n        this.eventBusTerminate()\n    }\n    openInput = () => {\n        this.setState({ isAddOpen: true }, () => {\n            this.props.onScroll(null, 1000)\n            eventBusService.emit('open-card-add', { isAddOpen: true, groupId: this.props.groupId })\n        })\n    }\n\n    closeInput = ({ groupId }) => {\n        this.setState({ isAddOpen: false }, () => setTimeout(() => {\n            if (this.props.groupId === groupId)\n                this.props.onScroll(null, 1000)\n        }, 150))\n    }\n\n    render() {\n        const { isAddOpen } = this.state\n        return (\n            <section className=\"add-card-container\" >\n                {/* {isAddOpen &&\n                    <form onSubmit={() => { return }} className=\"new-card-form\">\n                        <textarea type=\"text\" name=\"title\" value={card.title} onChange={this.handleInput}\n                            className=\"my-input\" placeholder=\"Enter a card title...\" autoFocus required\n                            cols=\"35\" rows=\"4\"></textarea>\n                        <div className=\"flex\">\n                            <button type=\"submit\" onMouseDown={this.onSaveCard} className=\"submit-card-btn\">Add card</button>\n                            <button onClick={this.closeInput} className=\"close-input-btn\" >\n                                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610646476/close_voj9v3.png\" alt=\"\" />\n                            </button>\n                        </div>\n                    </form>\n                } */}\n                {/* {isAddOpen && <div style={{ height: 45 }}></div>} */}\n                {!isAddOpen && <button className=\"add-card-btn\" onClick={this.openInput}>\n                    <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/plus_ljzrkm.png\" alt=\"\" />\n                    <span>Add another card</span></button>}\n            </section>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { CardList } from '../Card/CardList.jsx'\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { GroupTitle } from './GroupTitle';\nimport { CardAdd } from '../Card/CardAdd.jsx';\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd'\n\nexport class GroupPreview extends Component {\n    state = {\n        scrollTop: 0\n    }\n    refCard = React.createRef()\n\n    onScroll = (ev, scrolltobottom = 0) => {\n        if (!scrolltobottom) return\n        const scrollTop = this.refCard.current.scrollTop\n        this.setState({\n            scrollTop: scrollTop\n        }, () => {\n            if (scrolltobottom)\n                this.refCard.current.scrollTop = this.refCard.current.scrollTop + scrolltobottom\n        })\n    }\n    render() {\n        const { group, idx, onAddCard, updateBoard } = this.props\n        return (\n            <Draggable draggableId={group.id} index={idx} >\n                {(provided, snapshot) => (\n                    <NaturalDragAnimation\n                        style={provided.draggableProps.style}\n                        snapshot={snapshot}\n                    >\n                        {style => (\n                            // <div>\n                            <article className=\"group-preview\" {...provided.draggableProps}\n                                style={getItemStyle(snapshot.isDragging, provided.draggableProps.style, style)}\n                                ref={provided.innerRef}>\n                                <div  {...provided.dragHandleProps} style={{ width: 272, outline: 'none' }}>\n                                </div>\n                                <GroupTitle updateBoard={updateBoard} group={group} dragHandle={provided.dragHandleProps} />\n                                <CardList refs={this.refCard} cards={group.cards}\n                                    id={idx} group={group} onScroll={this.onScroll}\n                                    grpTitle={group.title} groupId={group.id} onAddCard={onAddCard} />\n                                <CardAdd groupId={group.id} onScroll={this.onScroll} />\n                            </article>\n                            // </div>\n                        )}\n                    </NaturalDragAnimation>\n                )}\n            </Draggable>\n        )\n    }\n}\nconst getItemStyle = (isDragging, draggableStyle, style) => ({\n    // userSelect: 'none',\n    // padding: 8,\n    margin: `0 8px 0 0`,\n    ...draggableStyle,\n    ...style\n});","import { GroupAdd } from './GroupAdd.jsx';\nimport { GroupPreview } from './GroupPreview.jsx'\n\nexport function GroupList({ groups, onAddCard, onAddGroup, onScroll, updateBoard }) {\n    return (\n        <div className=\"group-list\">\n            {groups.map((group, idx) =>\n                <GroupPreview updateBoard={updateBoard} key={group.id} group={group} idx={idx} onAddCard={onAddCard} />\n            )}\n\n            <GroupAdd onAddGroup={onAddGroup} onScroll={onScroll} />\n        </div>\n    )\n}\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { saveBoard } from '../../store/actions/boardAction'\nimport { CSSTransition } from 'react-transition-group'\nimport { utilService } from '../../services/utilService'\n\nclass _GroupMenu extends Component {\n    state = {\n        group: null,\n        userClicked: null,\n        mounted: false,\n    }\n\n    componentDidMount() {\n        // this.setState({ card: this.props.card }, () => console.log(this.state.card))\n        this.setState({ group: this.props.group, userClicked: this.props?.userClicked, mounted: true })\n    }\n\n    componentWillUnmount() {\n        this.setState({\n            group: null,\n            userClicked: null,\n        })\n    }\n\n\n    onClose = () => {\n        this.setState({ mounted: false })\n    }\n\n\n    onRemoveGroup = () => {\n        const copyBoard = { ...this.props.board }\n        const { group } = this.state\n        const groupIdx = copyBoard.groups.findIndex((currGroup) => currGroup.id === group.id)\n        copyBoard.groups.splice(groupIdx, 1)\n        this.props.saveBoard(copyBoard)\n        this.onClose()\n    }\n\n    onAddCard = () => {\n        console.log('not working yet');\n    }\n\n    onCopyGroup = async () => {\n        const copyBoard = {...this.props.board}\n        const { group } = this.state\n        const groupIdx = copyBoard.groups.findIndex((currGroup) => currGroup.id === group.id)\n        const copyGroup = {...group, id: utilService.makeId()}\n        copyBoard.groups.splice(groupIdx, 0, copyGroup)\n        await this.props.saveBoard(copyBoard)\n        this.onClose()\n    }\n\n\n    render() {\n        const { userClicked, group, mounted } = this.state\n        if (!group) return <div>Loading...</div>\n        return (\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.showGroupMenu}>\n            <div className=\"group-menu flex column\" style={{\n                position: 'absolute',\n                zIndex: 1000, top: userClicked?.y + 10, left: userClicked?.x - 150\n            }}>\n                <div className=\"group-actions flex spase-between\">\n                    <h3>List Actions</h3>\n                    <button onClick={this.onClose} className=\"group-close-btn\">✕</button>\n                </div>\n                <div className=\"group-menu-btns flex column\">\n                    <button className=\"group-menu-btn\" onClick={this.onAddCard}>\n                    Add Card...</button>\n                    <button className=\"group-menu-btn\" onClick={this.onCopyGroup}>\n                    Copy List...</button>\n                    <button className=\"group-menu-btn\" onClick={this.onRemoveGroup}>\n                    Delete List...</button>\n                    <button className=\"group-menu-btn\">\n                    Watch...</button>\n                    <hr/>\n                    <button className=\"group-menu-btn\">\n                    Sort By...</button>\n                    <hr/>\n                    <button className=\"group-menu-btn\">\n                    Move All Cards In This List...</button>\n                    <button className=\"group-menu-btn\">\n                    Archive All Cards in this List...</button>\n\n                </div>\n            </div>\n            </CSSTransition>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    board: state.boardModule.currBoard,\n})\n\nconst mapDispatchToProps = {\n    saveBoard\n}\n\nexport const GroupMenu = connect(mapStateToProps, mapDispatchToProps)(_GroupMenu)\n","export function CardHeader({ card, onHandleInputChange, group }) {\n  return (\n    <div className=\"card-header\"> \n      <div className=\"card-title-area flex\">\n        <img className=\"card-title-img\" src=\"https://res.cloudinary.com/basimgs/image/upload/v1610782307/document-header_xtqrpy.png\" alt=\"\" />\n        <textarea\n          className=\"title-textarea my-input\"\n          type=\"text\"\n          name=\"title\"\n          value={card.title}\n          onChange={onHandleInputChange}\n          placeholder={card.title}\n          spellCheck=\"false\"\n        />\n      </div>\n      <p className=\"card-title-p\">In list {group.title}</p>\n    </div>)\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { utilService } from '../../services/utilService'\nimport TimeAgo from 'react-timeago'\nimport { socketService } from '../../services/socketService'\n\nclass _CardActivityContainer extends Component {\n\n  state = {\n    comments: null,\n    isSaveOpen: false,\n    newComment: ''\n  }\n\n  componentDidMount() {\n    // socketService.setup()\n\n    // socketService.on('commented', (cmt) => {\n    //   console.log('cmt', cmt)\n    // }) \n\n    const { comments } = this.props.card\n    this.setState({ comments })\n  }\n\n  onHandleCommentChange = ({ target }) => {\n    const { value } = target\n    if (value) this.onToggleIsSaveOpen(true)\n    else this.onToggleIsSaveOpen(false)\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        newComment: value\n      }\n    })\n  }\n\n  onToggleIsSaveOpen = (isOpen) => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        isSaveOpen: isOpen\n      }\n    })\n  }\n\n  createComment = () => {\n    const { newComment } = this.state\n    const loggedInUser = this.props.loggedInUser\n    let byMember = null;\n\n    if (loggedInUser) {\n      byMember = {\n        _id: loggedInUser._id,\n        fullname: loggedInUser.fullname,\n        imgUrl: loggedInUser.imgUrl,\n        color: loggedInUser.color\n\n      }\n    }\n\n    return {\n      id: utilService.makeId(),\n      txt: newComment,\n      createdAt: Date.now(),\n      byMember\n    }\n  }\n\n  onSaveNewComment = () => {\n\n    const comment = this.createComment()\n    let commentsCopy = this.state.comments\n    if (commentsCopy) commentsCopy.unshift(comment)\n    else commentsCopy = new Array(comment)\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        comments: commentsCopy\n      }\n    }, () => {\n      this.props.onHandleActivitiesChange(this.state.comments)\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          newComment: '',\n          isSaveOpen: false\n        }\n      })\n    })\n  }\n\n  render() {\n    const { newComment, isSaveOpen, comments } = this.state\n    const loggedInUser = this.props.loggedInUser\n    return (\n      <div className=\"activity-container\">\n        <div className=\"activity-header flex\">\n          <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1611394931/list_fd3uv1.png\" alt=\"\" />\n          <h3>Activity</h3>\n        </div>\n        <div className=\"flex column\">\n          <div className=\"flex\">\n\n            <div className=\"member\" style={{ backgroundImage: `url(${(loggedInUser?.imgUrl) ? loggedInUser?.imgUrl : '#3f72af'})` }}>{!loggedInUser?.imgUrl ? 'G' : ''}</div>\n\n            <textarea\n              className=\"activity-textarea\"\n              type=\"text\"\n              name=\"txt\"\n              value={newComment}\n              onChange={this.onHandleCommentChange}\n              placeholder=\"Write a comment...\"\n            />\n          </div>\n          {isSaveOpen && <button className=\"save-btn\" onMouseDown={this.onSaveNewComment} >Save</button>}\n        </div>\n        {comments && comments.map((comment, index) => {\n          return <div key={index} className=\"activity-comment-wrapper flex\">\n            <div className=\"member\" style={{ backgroundImage: `url(${(comment.byMember?.imgUrl) ? comment.byMember?.imgUrl : '#3f72af'})` }}>{!comment.byMember?.imgUrl ? 'G' : ''}</div>\n            <div className=\"activity-comment\">\n              <p>{comment.byMember ? comment.byMember.fullname : 'Guest'}: {comment.txt}</p>\n              <TimeAgo className=\"activity-time\" date={comment.createdAt} />\n            </div>\n          </div>\n        })}\n      </div>\n    )\n  }\n}\n\n// TODO: loggedInUser\nconst mapStateToProps = state => {\n  return {\n    board: state.boardModule.currBoard,\n    loggedInUser: state.userModule.loggedInUser\n  }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport const CardActivityContainer = connect(mapStateToProps, mapDispatchToProps)(_CardActivityContainer)","import { utilService } from \"./utilService\"\n\nexport const cardService = {\n  createTodo,\n  createChecklist\n}\n\nfunction createTodo(title) {\n  return {\n    id: utilService.makeId(),\n    title,\n    isDone: false\n  }\n}\n\nfunction createChecklist() {\n  return {\n    id: utilService.makeId(),\n    title: '',\n    todos: [createTodo('')]\n  }\n}\n\n\n","import { Component } from 'react'\nimport { cardService } from '../../services/cardService'\n// import { on, emit } from '../services/eventBusService.js'\nimport Loader from 'react-loader-spinner'\n\nexport class CardChecklist extends Component {\n  state = {\n    checklist: null,\n    isAddOpen: false,\n    newTodoTitle: ''\n  }\n\n  componentDidMount() {\n    const { checklist } = this.props.card\n    this.setState({ checklist })\n  }\n\n  onHandleTitleChange = ({ target }) => {\n    const { value, name } = target\n\n    this.setState(prevState => ({\n      checklist: {\n        ...prevState.checklist,\n        [name]: value\n      }\n    }), () => this.props.onHandleChecklistChange(this.state.checklist))\n  }\n\n  onHandleTodosChange = (ev, todo) => {\n    const { todos } = this.state.checklist\n    const value = ev.target.type === 'checkbox' ? ev.target.checked : ev.target.value\n    const { name } = ev.target\n    todo[name] = value\n\n    const updatedTodos = [...todos]\n\n    this.saveTodos(updatedTodos)\n  }\n\n  onRemoveTodo = (idx) => {\n    if (this.state.checklist.todos.length === 1) this.props.addOrCancelChecklist(null)\n\n    const todosCopy = [...this.state.checklist.todos]\n    todosCopy.splice(idx, 1)\n    this.saveTodos(todosCopy)\n  }\n\n  saveNewTodo = () => {\n    const { todos } = this.state.checklist\n    const { newTodoTitle } = this.state\n    let todosCopy = [...todos]\n\n    const todoToSave = cardService.createTodo(newTodoTitle)\n    todosCopy.push(todoToSave)\n\n    this.saveTodos(todosCopy)\n  }\n\n  saveTodos = (updatedTodos) => {\n    this.setState(prevState => ({\n      checklist: {\n        ...prevState.checklist,\n        todos: [...updatedTodos]\n      },\n      newTodoTitle: ''\n    }), () => this.props.onHandleChecklistChange(this.state.checklist))\n  }\n\n  onHandleNewTodoChange = ({ target }) => {\n    const { value } = target\n    this.setState({ newTodoTitle: value })\n  }\n\n  toggleIsAddOpen = () => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        isAddOpen: !this.state.isAddOpen\n      }\n    })\n  }\n\n  progressBarPrecentage = () => {\n    const { checklist } = this.state\n    let acc = 0;\n    checklist.todos.forEach((todo) => { if (todo.isDone) acc += 1 })\n\n    const todosPrecent = 100 / checklist.todos.length\n\n    if (acc === 0) return 0\n    return todosPrecent * acc\n  }\n\n  render() {\n    const { checklist, isAddOpen, newTodoTitle } = this.state\n    if (!checklist) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={100} width={100} timeout={3000} /></div>\n    return (\n      <div className=\"checklist flex column\" >\n        <div className=\"checklist-header flex\">\n          <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/check-box_pzd2ul.png\" alt=\"\" />\n          <input\n            className=\"my-input\"\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Checklist\"\n            value={checklist.title}\n            onChange={this.onHandleTitleChange}\n          />\n        </div>\n        <div className=\"progress-container flex space-between\"><p>{Math.floor(this.progressBarPrecentage())}%</p>\n          <div className=\"progress-bar flex\"><div style={{ width: `${this.progressBarPrecentage()}%` }} className=\"todo-progress\"></div></div></div>\n        {checklist.todos && checklist.todos.map((todo, idx) => {\n          return <div className=\"checklist-todo flex\" key={idx}>\n            <input\n              type=\"checkbox\"\n              name=\"isDone\"\n              checked={todo.isDone}\n              onChange={(ev) => this.onHandleTodosChange(ev, todo)}\n            />\n            <input\n              className=\"add-todo-input my-input\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Add an item\"\n              value={todo.title}\n              onChange={(ev) => this.onHandleTodosChange(ev, todo)}\n            />\n            <button className=\"delete-todo\" onClick={() => this.onRemoveTodo(idx)}>✕</button>\n          </div>\n        })}\n\n        {isAddOpen && <div className=\"flex\">\n          <input\n            type=\"text\"\n            autoFocus\n            placeholder=\"Add an item\"\n            className=\"new-todo-input\"\n            value={newTodoTitle}\n            onChange={this.onHandleNewTodoChange}\n            onBlur={this.toggleIsAddOpen}\n          />\n          <button className=\"save-btn\" onMouseDown={this.saveNewTodo} >Save</button>\n        </div>}\n\n        {!isAddOpen && <button className=\"add-todo\" onClick={this.toggleIsAddOpen}>Add todo</button>}\n      </div >\n    )\n  }\n}\n","import { utilService } from \"../../services/utilService\"\nimport { CardActivityContainer } from \"./CardActivityContainer\";\nimport { CardChecklist } from \"./CardChecklist\"\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport moment from \"moment\"\n\nexport function CardInfo({ card, onHandleInputChange, onHandleChecklistChange, onHandleActivitiesChange, addOrCancelChecklist }) {\n  return (\n    <div className=\"card-info\">\n\n      {card.members && <div className=\"members flex column\">\n        <h2 className=\"members-header\">Members</h2>\n        {/* <div className=\"members-list flex\"> */}\n        <TransitionGroup className=\"members-list flex\">\n          {card.members.map((member, idx) => \n          <CSSTransition key={idx} timeout={500} classNames=\"item\">\n             <span key={idx} className=\"member\" \n             style={{ backgroundImage: `url(${(member.imgUrl) ? member.imgUrl : '#3f72af'})` }}></span>\n             {/* style={{backgroundColor: member.color? member.color: \"#3f72af\"}}>{utilService.convertName(member.fullname)}</span> */}\n             </CSSTransition>\n        )}\n          </TransitionGroup>\n        {/* </div> */}\n      </div>}\n\n      {card.labels && card.labels.length > 0 && <div className=\"card-labels-section\">\n        <h2 className=\"card-label-h2\">Labels</h2>\n        <div className=\"flex labels-container\">\n          {card.labels.map((label, idx) => {\n            return <button key={idx} className=\"label-btn\" style={{ backgroundColor: label.color }}>{label.title}</button>\n          })}\n        </div>\n      </div>}\n\n      {card.dueDate && <div className=\"due-date-wrapper\">\n        <h2 className=\"due-date-h2\">Due Date</h2>\n        <p className=\"due-date\">{moment(card.dueDate).format('LLL')}</p>\n      </div>}\n\n      <div className=\"card-description\">\n        <div className=\"flex\">\n          <span><img className=\"desc-img\" src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/left-align_qaakok.png\" alt=\"\" /></span>\n          <h3>Description</h3>\n        </div>\n        <textarea\n          className=\"desc-textarea my-input\"\n          type=\"text\"\n          name=\"description\"\n          value={card.description || ''}\n          onChange={onHandleInputChange}\n          placeholder=\"Add more detailed description...\"\n        />\n      </div>\n\n      {card.checklist?.todos?.length > 0 &&\n        <CardChecklist card={card} onHandleChecklistChange={onHandleChecklistChange} addOrCancelChecklist={addOrCancelChecklist} />}\n      <CardActivityContainer card={card} onHandleActivitiesChange={onHandleActivitiesChange} />\n    </div>\n  )\n}\n\n","export const cloudinaryService = {\n  uploadImg\n}\nasync function uploadImg(file) {\n  const CLOUD_NAME = 'basimgs'\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n\n  const formData = new FormData();\n  formData.append('file', file)\n  formData.append('upload_preset', 'misterToy');\n  try {\n    const res = await fetch(UPLOAD_URL, {\n      method: 'POST',\n      body: formData\n    })\n    const data = await res.json()\n    return data\n\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import { Component } from 'react'\nimport { cloudinaryService } from '../../services/cloudinaryService.js'\nimport { CSSTransition } from 'react-transition-group'\n\nexport class CardCover extends Component {\n\n    state = {\n        isUploading: false,\n        mounted: false\n    }\n\n    componentDidMount() {\n        this.setState({ mounted: true })\n    }\n\n    onClose = () => {\n        this.setState({ mounted: false })\n    }\n\n    coverColors = () => {\n        return ['#f9ed69', '#a56cc1', '#f38181', '#95e1d3', '#878ecd', '#3fc1c9',\n            '#a1dd70', '#ffcc29', '#19456b', '#d32626', '#16c79a', '#fcbad3', '#ffaa64', '#de95ba', '#17b978',]\n    }\n\n    onUploadImg = async ev => {\n        this.setState({ isUploading: true })\n        const { secure_url } = await cloudinaryService.uploadImg(ev.target.files[0])\n        this.setState({ isUploading: false }, () => this.props.onFinishUpload(secure_url))\n    }\n\n    setColor = (color) => {\n        console.log('the chosen color is', color);\n        this.props.onUpdateCoverColor(color)\n\n    }\n\n    render() {\n        const { isUploading, mounted } = this.state\n        return (\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleCoverMenu}>\n                <div className=\"card-cover-modal flex column\">\n                    <div className=\"card-cover-header flex\">\n                        <h3>Cover</h3>\n                        <button onClick={this.onClose} className=\"close-cover-btn\">✕</button>\n                    </div>\n                    <div className=\"uploader\">\n                        <label className=\"upload-btn\" htmlFor=\"imageUploader\">{isUploading ? 'Uploading....' : 'Upload Image'}</label>\n                        <input onChange={this.onUploadImg} hidden\n                            type=\"file\" accept=\"image/*\" id=\"imageUploader\" />\n                    </div>\n                    <h3>Colors</h3>\n                    <div className=\"card-cover-colors\">\n                        {this.coverColors().map((color, idx) => {\n                            return <div className=\"cover-colors-menu\" key={idx}\n                                style={{ backgroundColor: color }} onClick={() => this.setColor(color)}></div>\n                        })}\n                    </div>\n                </div>\n            </CSSTransition>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { utilService } from '../../services/utilService'\nimport { eventBusService } from '../../services/eventBusService'\nimport { CSSTransition } from 'react-transition-group'\n// import { cardService } from '../../services/cardService'\n// TODO: maybe put in two cmps\n\nclass _CardLabels extends Component {\n\n  state = {\n    labels: [],\n    isCreateLabel: false,\n    currLabel: {\n      id: '',\n      title: '',\n      color: '#f2d601'\n    },\n    colors: ['#f2d601', '#ff9f19', '#eb5a46', '#c377e0', '#0179bf', '#04c2e0',\n      '#61bd50', '#50e898', '#ff78cb', '#344563', '#b3bac5'],\n    // mounted: false\n  }\n\n  // onClose = () => {\n  //   this.setState({ mounted: false })\n  // }\n\n  componentDidMount() {\n    // const { labels } = this.props.currCard //fucked me up\n    const { labels } = this.props.card\n    if (labels) {\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          labels: [...labels],\n          mounted: true\n        }\n      })\n    }\n  }\n\n  onEditClick = (label) => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        isCreateLabel: true,\n        currLabel: { ...label }\n      }\n    })\n  }\n\n  onHandleNewLabel = (val) => {\n    let name = 'color'\n\n    if (typeof (val) !== 'string') {\n      val = val.target.value\n      name = 'title'\n    }\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        currLabel: {\n          ...this.state.currLabel,\n          [name]: val\n        }\n      }\n    })\n  }\n\n  onToggleLabel = () => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        isCreateLabel: !this.state.isCreateLabel\n      }\n    })\n  }\n\n  onAddLabel = () => {\n    const { currLabel } = this.state\n    let labelsCopy = [...this.state.labels]\n\n    if (!currLabel.id) {\n      currLabel.id = utilService.makeId()\n      labelsCopy.push(currLabel)\n    } else {\n      const idx = labelsCopy.findIndex((label) => label.id === currLabel.id)\n      labelsCopy.splice(idx, 1, currLabel)\n    }\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        labels: [...labelsCopy]\n      }\n    }, () => {\n      this.props.onHandleLabelsChange(this.state.labels)\n      eventBusService.emit('label-added', currLabel)\n      this.onToggleLabel()\n      this.clearNewLabel()\n    })\n  }\n\n  clearNewLabel = () => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        currLabel: {\n          id: '',\n          title: '',\n          color: '#f2d601'\n        }\n      }\n    })\n  }\n\n  onChooseLabel = (label) => {\n    // const readyLabel = cardService.createLabel(label)\n    const isDuplicated = this.checkForDuplicate(label)\n\n    if (isDuplicated) {\n      this.removeLabel(label)\n      return\n    }\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        labels: [...prevState.labels, label]\n      }\n    }, () => this.props.onHandleLabelsChange(this.state.labels))\n  }\n\n  checkForDuplicate = (label) => {\n    const { labels } = this.state\n    if (!labels) return false\n\n    const isFound = labels.find((currLabel) => currLabel.id === label.id)\n    if (isFound) return true\n  }\n\n  removeLabel = (label, isClose = false) => {\n    const labelsCopy = [...this.state.labels]\n    const idx = labelsCopy.findIndex((currLabel) => currLabel.id === label.id)\n    labelsCopy.splice(idx, 1)\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        labels: labelsCopy\n      }\n    }, () => {\n        this.props.onHandleLabelsChange(this.state.labels)\n        if (isClose) this.props.onToggleLabels()\n        this.clearNewLabel()\n        this.onToggleLabel()\n    })\n  }\n\n  checkForMark = (label) => {\n    const { labels } = this.state\n\n    const isFound = labels.find((currLabel) => currLabel.id === label.id)\n    return isFound\n  }\n\n  onRemoveLabel = (label) => {\n    this.removeLabel(label, true)\n    eventBusService.emit('label-remove', label)\n  }\n\n  render() {\n    const { board } = this.props\n    const { isCreateLabel, colors, currLabel, mounted } = this.state\n    return (\n      <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleLabelMenu}>\n        <div className=\"card-labels flex column\" style={{ height: isCreateLabel ? '320px' : '450px' }}>\n\n          <header className=\"labels-header flex\">\n            {isCreateLabel && <button className=\"go-back\" onClick={this.onToggleLabel}> 〈</button>}\n            <p>{!isCreateLabel ? 'Labels' : 'Create Label'}</p>\n            <button className=\"close-btn inside-close\" onClick={this.props.toggleLabelMenu}>✕</button>\n          </header>\n\n          {!isCreateLabel && <section className=\"label-choose-container flex column\">\n            <ul>\n              {board.labels?.map((label) => (\n                <li key={label.id} className=\"label flex\">\n                  <div className=\"label-title flex space-between\" onClick={() => this.onChooseLabel(label)} style={{ backgroundColor: label.color }}>\n                    <p>{label.title} </p>\n                    <span className=\"checkmark\">{this.checkForMark(label) ? '✓' : ''}</span>\n                  </div>\n                  <button className=\"label-edit-btn\" onClick={() => this.onEditClick(label)}>\n                    <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610872377/pen_so2afr.png\" alt=\"\" />\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </section>}\n\n          {isCreateLabel && <section className=\"create-label-container flex column\">\n            <label htmlFor=\"title\">Name</label>\n            <input\n              type=\"text\"\n              placeholder=\"Enter label name...\"\n              name=\"title\"\n              id=\"title\"\n              value={currLabel.title}\n              onChange={this.onHandleNewLabel}\n            />\n            <p>Select a color</p>\n            <ul className=\"flex\">\n              {colors.map((color) => (\n                <li\n                  className=\"label-color-picker flex align-center justify-center\"\n                  key={color}\n                  name=\"color\"\n                  style={{ backgroundColor: color }}\n                  onClick={() => this.onHandleNewLabel(color)}\n                >{currLabel.color === color ? '✓' : ''}</li>\n              ))}\n            </ul>\n            <div className=\"flex space-between\">\n              <button className=\"save-btn\" onClick={this.onAddLabel}>Create</button>\n              {currLabel.id && <button className=\"delete-btn\" onClick={() => this.onRemoveLabel(currLabel)}>Delete</button>}\n            </div>\n          </section>}\n\n          {!isCreateLabel &&\n            <footer>\n              <button className=\"add-label-btn\" onClick={this.onToggleLabel}>+ Create New Label</button>\n            </footer>}\n\n        </div>\n      </CSSTransition>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    board: state.boardModule.currBoard,\n    currCard: state.cardModule.currCard\n  }\n}\n\nconst mapDispatchToProps = {\n  // saveBoard,\n}\n\nexport const CardLabels = connect(mapStateToProps, mapDispatchToProps)(_CardLabels)","import { Component } from 'react'\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { CSSTransition } from 'react-transition-group'\n\nexport class DatePicker extends Component {\n\n    state = {\n        mounted: false,\n        value: new Date()\n    }\n\n    componentDidMount() {\n        this.setState({ mounted: true })\n    }\n\n    onClose = () => {\n        this.setState({ mounted: false })\n    }\n\n    onChange = (value) => {\n        this.setState({ value }, () => this.props.onSavedueDate((this.state.value + '').substring(4, 32)))\n        this.setState({ mounted: false })\n    }\n\n\n    render() {\n        const { value, mounted } = this.state\n        return (\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleDate}>\n                <div className=\"date-picker\">\n                    <button onClick={this.onClose} className=\"close-date-btn\">✕</button>\n                    <Calendar style={{ zIndex: 2000, position: 'absolute' }}\n                        onChange={this.onChange}\n                        value={value}\n                    />\n                </div>\n            </CSSTransition>\n        )\n    }\n}\n","import React, { Component } from 'react'\n// import Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { cardService } from '../../services/cardService';\nimport { CardCover } from './CardCover';\nimport { CardLabels } from './CardLabels';\nimport { AddMember } from '../AddMember';\nimport { DatePicker } from './DatePicker';\n// import { DatePicker } from '@material-ui/pickers';\n\nexport class CardSide extends Component {\n\n  state = {\n    // value: new Date(),\n    isDateShown: false,\n    isLabelsShown: false,\n    isLabelsMenuShown: false,\n    isCoverMenuShown: false,\n    isMoreMembersShown: false\n  }\n\n  onRemoveCard = () => {\n    this.props.onRemoveCard()\n  }\n\n  toggleMembers = () => {\n    this.setState({ isMoreMembersShown: !this.state.isMoreMembersShown })\n  }\n\n  toggleDate = () => {\n    this.setState({ isDateShown: !this.state.isDateShown })\n  }\n\n  toggleCoverMenu = () => {\n    this.setState({ isCoverMenuShown: !this.state.isCoverMenuShown })\n  }\n\n  toggleLabelMenu = () => {\n    this.setState({ isLabelsMenuShown: !this.state.isLabelsMenuShown })\n    window.isLabelsMenuShown = this.state.isLabelsMenuShown\n  }\n\n\n\n  onAddChecklist = () => {\n    const checklist = cardService.createChecklist()\n    this.props.addOrCancelChecklist(checklist)\n  }\n\n  onToggleLabels = () => {\n    this.setState({ isLabelsShown: !this.state.isLabelsShown })\n  }\n\n\n\n\n  render() {\n    const { isDateShown, isCoverMenuShown, isMoreMembersShown, isLabelsMenuShown } = this.state\n    const { card, onHandleLabelsChange, saveChanges, users } = this.props\n    return (\n      <>\n        {isLabelsMenuShown && <CardLabels saveChanges={saveChanges} card={card} onToggleLabels={this.onToggleLabels} toggleLabelMenu={this.toggleLabelMenu} onHandleLabelsChange={onHandleLabelsChange} />}\n        {isCoverMenuShown && <CardCover onFinishUpload={this.props.onUploadCardCoverImg}\n          onUpdateCoverColor={this.props.onUpdateCoverColor} toggleCoverMenu={this.toggleCoverMenu} />}\n        {isDateShown && <DatePicker onSavedueDate={this.props.onSavedueDate} toggleDate={this.toggleDate} />}\n        {isMoreMembersShown && <AddMember toggleMembers={this.toggleMembers}\n          onUpdateMembers={this.props.onUpdateMembers} onSetUserFilter={this.props.onSetUserFilter} members={card.members} users={users} />}\n        {/* {isMoreMembersShown && <div className=\"card-details-member-container\"><AddMember toggleMembers={this.toggleMembers}\n          onUpdateMembers={this.props.onUpdateMembers} onSetUserFilter={this.props.onSetUserFilter} members={card.members} users={users} /></div>} */}\n        {/* <DatePicker /> */}\n        <div className=\"card-side flex column\">\n          <button className=\"side-btn\" onClick={this.toggleMembers}>\n            <span>\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/user_g2y481.png\" alt=\"\" />\n            </span> Members</button>\n\n          <button className=\"side-btn\" onClick={this.toggleLabelMenu}>\n            <span>\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610794160/price-tag_evse4z.png\" alt=\"\" />\n            </span> Labels</button>\n\n          {!card.checklist && <button className=\"side-btn\" onClick={this.onAddChecklist}>\n            <span>\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610794290/check-box_srgv0c.png\" alt=\"\" />\n            </span> Checklist</button>}\n\n          <button className=\"side-btn\" onClick={this.toggleDate}>\n            <span>\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"\" />\n            </span> Due Date</button>\n\n          <button className=\"side-btn\" onClick={this.toggleCoverMenu}>\n            <span>\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793767/picture_omnffh.png\" alt=\"\" />\n            </span> Cover</button>\n\n          <button className=\"side-btn\" onClick={this.onRemoveCard}>\n            <span>\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793816/trash_nrq5xi.png\" alt=\"\" />\n            </span> Delete</button>\n        </div>\n      </>\n    )\n  }\n}\n","import { utilService } from \"./utilService\"\n\nexport const activityService = {\n  createActivity\n}\n\nfunction createActivity(user, txt, card, group, action, moveTo) {\n  let byMember = null\n  let toGroup = null\n\n  if (user) {\n    byMember = {\n      _id: user._id,\n      fullname: user.fullname,\n      imgUrl: user.imgUrl\n    }\n  }\n\n  if (moveTo) {\n    toGroup = {\n      id: moveTo.id,\n      title: moveTo.title\n    }\n  }\n\n  if (card) {\n    card =  {\n      id: card.id,\n      title: `${card.title} ${action}`\n    }\n  } else card = null\n\n\n  return {\n    id: utilService.makeId(),\n    txt,\n    createdAt: Date.now(),\n    byMember,\n    card,\n    group: {\n      id: group.id,\n      title: group.title\n    },\n    toGroup\n  }\n}","import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { CardHeader } from './CardHeader'\nimport { CardInfo } from './CardInfo'\nimport { clearState } from '../../store/actions/cardAction.js'\nimport { saveBoard } from '../../store/actions/boardAction.js'\nimport { CardSide } from './CardSide'\nimport { CSSTransition } from 'react-transition-group'\nimport { socketService } from '../../services/socketService'\nimport { activityService } from '../../services/activityService'\nimport Loader from 'react-loader-spinner'\n// TODO: go back to handle click outside async lielm1995\n\nclass _CardDetails extends Component {\n  state = {\n    card: null,\n    filterBy: {\n      fullname: ''\n    },\n    mounted: false,\n    initialCard: null\n  }\n\n  componentDidMount() {\n    // socketService.setup()\n    const { card } = this.props\n    this.setState({ mounted: true, card, initialCard: card })\n  }\n\n  onClose = () => {\n    this.saveChanges(true)\n    this.checklistValidation()\n    this.setState({ mounted: false })\n  }\n\n  saveChanges = (isActivityUpdate = false) => {\n    // this.checklistValidation()\n    this.sendUpdatedBoard(isActivityUpdate)\n  }\n\n  sendUpdatedBoard = async (isActivityUpdate = false) => {\n    const board = { ...this.props.board }\n    const group = { ...this.props.group }\n    const { card, initialCard } = this.state\n    const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\n    group.cards[cardIdx] = card\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\n    board.groups[groupIdx] = group\n\n    if (isActivityUpdate && JSON.stringify(initialCard) !== JSON.stringify(card)) {\n      var activity = activityService.createActivity(this.props.loggedInUser, 'update card ', card, board.groups[groupIdx], ' in')\n      board.activities ? board.activities.unshift(activity) : board.activities = new Array(activity)\n    }\n    await this.props.saveBoard(board)\n    // socketService.emit('card changed', board)\n  }\n\n  onHandleInputChange = ({ target }) => {\n    const { value, name } = target\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        [name]: value\n      }\n    }), () => this.saveChanges())\n  }\n\n  onHandleChecklistChange = (checklist) => {\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        checklist: { ...checklist }\n      }\n    }), () => this.saveChanges())\n  }\n\n  onHandleActivitiesChange = (comments) => {\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        comments: [...comments]\n      }\n    }), () => this.saveChanges())\n  }\n\n  onHandleLabelsChange = (labels) => {\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        labels: [...labels]\n      }\n    }), () => this.saveChanges())\n  }\n\n  addOrCancelChecklist = (checklist) => {\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        checklist\n      }\n    }), () => this.saveChanges())\n  }\n\n  onSavedueDate = (date) => {\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        dueDate: Date.parse(date)\n      }\n    }), () => this.saveChanges())\n  }\n\n  onUploadCardCoverImg = (url) => {\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        style: { imgUrl: url, color: '' }\n      }\n    }), () => this.saveChanges())\n  }\n\n  onUpdateCoverColor = (color) => {\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        style: { imgUrl: '', color: color }\n      }\n    }), () => this.saveChanges())\n  }\n\n  onRemoveCard = () => {\n    const { board, group } = this.props\n    const { card } = this.state\n    const cardIdx = group.cards.findIndex((currCard) => currCard.id === card.id)\n    group.cards.splice(cardIdx, 1)\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\n    board.groups[groupIdx] = group\n    this.props.saveBoard(board)\n    this.props.toggleDetails(false)\n  }\n\n  onUpdateMembers = async (member) => {\n    console.log('new members', member);\n    const { board, group } = this.props\n    const { card } = this.state\n    const newCard = { ...card }\n    const memberIdx = card.members.findIndex(currMember => currMember._id === member._id)\n    if (memberIdx > -1) {\n      newCard.members.splice(memberIdx, 1)\n    } else {\n      newCard.members.push(member)\n    }\n    const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\n    group.cards[cardIdx] = newCard\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\n    board.groups[groupIdx] = group\n\n    this.setState({ card: newCard }, () => { this.props.saveBoard(board) })\n  }\n\n  checklistValidation = () => {\n    const { checklist } = this.state.card\n    if (checklist && checklist.todos.length === 1 && !checklist.todos[0].title) {\n      this.addOrCancelChecklist(null)\n    }\n  }\n\n  onSetUserFilter = (filterBy) => {\n    this.setState({ filterBy })\n  }\n\n  get usersForDisplay() {\n    const { board } = this.props\n    const { filterBy } = this.state;\n    const filterRegex = new RegExp(filterBy.fullname, 'i');\n    const users = board.members.filter(member => filterRegex.test(member.fullname))\n    return users\n  }\n\n  onDeleteCover = () => {\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        style: null\n      }\n    }), () => this.saveChanges())\n  }\n\n\n  render() {\n    const { card, mounted } = this.state\n    const { group } = this.props\n    const usersForDisplay = this.usersForDisplay\n    if (!card) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={100} width={100} timeout={3000} /></div>\n\n    return (\n      <div className=\"modal-cover\" onClick={this.onClose}>\n        <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleDetails}>\n          <div className=\"card-details flex column align-center\" onClick={ev => ev.stopPropagation()}>\n            <button className=\"close-modal-btn\" onClick={this.onClose}>✕</button>\n            {card.style?.color &&\n              <div className=\"details-img-wrapper\" style={{ backgroundColor: card.style.color, height: '150px' }}>\n                <img onClick={this.onDeleteCover} src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793816/trash_nrq5xi.png\" className=\"trash\" alt=\"\" />\n              </div>\n            }\n\n            {\n              card.style?.imgUrl &&\n              <div className=\"details-img-wrapper flex justify-center\" style={{ height: '200px' }}>\n                <img src={card.style.imgUrl} alt=\"\" />\n                <img onClick={this.onDeleteCover} src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793816/trash_nrq5xi.png\" className=\"trash\" alt=\"\" />\n              </div >}\n\n            <div className=\"card-details-wrapper flex column\" style={{ paddingTop: (card.style?.imgUrl || card.style?.color) ? '0' : '15px' }}>\n              <CardHeader card={card} onHandleInputChange={this.onHandleInputChange} group={group} />\n              <div className=\"card-content flex\">\n                <CardInfo\n                  card={card}\n                  onHandleChecklistChange={this.onHandleChecklistChange}\n                  onHandleInputChange={this.onHandleInputChange}\n                  onHandleActivitiesChange={this.onHandleActivitiesChange}\n                  addOrCancelChecklist={this.addOrCancelChecklist}\n                />\n                <CardSide\n                  card={card}\n                  onRemoveCard={this.onRemoveCard}\n                  onSavedueDate={this.onSavedueDate}\n                  addOrCancelChecklist={this.addOrCancelChecklist}\n                  onUploadCardCoverImg={this.onUploadCardCoverImg}\n                  onHandleLabelsChange={this.onHandleLabelsChange}\n                  onUpdateCoverColor={this.onUpdateCoverColor}\n                  saveChanges={this.saveChanges}\n                  users={usersForDisplay}\n                  onUpdateMembers={this.onUpdateMembers}\n                  onSetUserFilter={this.onSetUserFilter}\n                />\n              </div>\n            </div>\n          </div >\n        </CSSTransition >\n      </div >\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    board: state.boardModule.currBoard,\n    loggedInUser: state.userModule.loggedInUser\n  }\n}\n\nconst mapDispatchToProps = {\n  saveBoard,\n  clearState\n}\n\nexport const CardDetails = connect(mapStateToProps, mapDispatchToProps)(_CardDetails)\n// import { Component } from 'react'\n// import { connect } from 'react-redux'\n// import ReactDOM from 'react-dom'\n// import { CardHeader } from './CardHeader'\n// import { CardInfo } from './CardInfo'\n// import { clearState } from '../../store/actions/cardAction.js'\n// import { saveBoard } from '../../store/actions/boardAction.js'\n// import { CardSide } from './CardSide'\n// import { CSSTransition } from 'react-transition-group'\n// import { socketService } from '../../services/socketService'\n// import { activityService } from '../../services/activityService'\n// // TODO: find a way to merge all handle inputs\n// // TODO: go back to handle click outside async lielm1995\n\n// class _CardDetails extends Component {\n//   state = {\n//     card: null,\n//     filterBy: {\n//       fullname: ''\n//     },\n//     mounted: false\n//   }\n\n//   componentDidMount() {\n//     socketService.setup()\n//     const { card } = this.props\n//     this.setState({ mounted: true })\n//     this.setState({ card })\n//     // document.addEventListener('click', this.handleClickOutside, true)\n//   }\n\n//   // componentWillUnmount() {\n//   //   socketService.terminate()\n//   // }\n\n\n//   onClose = () => {\n//     this.saveChanges()\n//     this.setState({ mounted: false })\n//   }\n\n//   // componentWillUnmount() {\n//   //   document.removeEventListener('click', this.handleClickOutside, true)\n//   // }\n\n//   // handleClickOutside = event => {\n//   //   const domNode = ReactDOM.findDOMNode(this)\n//   //   if (!domNode || !domNode.contains(event.target)) {\n//   //     this.saveChanges()\n//   //     // this.props.clearState(null)\n//   //   }\n//   // }\n\n//   saveChanges = () => {\n//     this.checklistValidation()\n//     this.sendUpdatedBoard()\n//   }\n\n//   sendUpdatedBoard = async () => {\n//     const { board, group } = this.props\n//     const { card } = this.state\n//     const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\n//     group.cards[cardIdx] = card\n//     const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\n//     board.groups[groupIdx] = group\n//     await this.props.saveBoard(board)\n\n//     // socketService.emit('card changed', board)\n//   }\n\n//   onHandleInputChange = ({ target }) => {\n//     const { value, name } = target\n//     this.setState(prevState => ({\n//       card: {\n//         ...prevState.card,\n//         [name]: value\n//       }\n//     }), () => this.saveChanges())\n//   }\n\n//   onHandleChecklistChange = (checklist) => {\n//     this.setState(prevState => ({\n//       card: {\n//         ...prevState.card,\n//         checklist: { ...checklist }\n//       }\n//     }))\n//     // }), () => this.saveChanges())\n//   }\n\n//   onHandleActivitiesChange = (comments) => {\n//     this.setState(prevState => ({\n//       card: {\n//         ...prevState.card,\n//         comments: [...comments]\n//       }\n//     }), () => this.saveChanges())\n//   }\n\n//   onHandleLabelsChange = (labels) => {\n//     this.setState(prevState => ({\n//       card: {\n//         ...prevState.card,\n//         labels: [...labels]\n//       }\n//     }), () => this.saveChanges())\n//   }\n\n//   addOrCancelChecklist = (checklist) => {\n//     this.setState(prevState => ({\n//       card: {\n//         ...prevState.card,\n//         checklist\n//       }\n//     }))\n//   }\n\n//   onRemoveCard = () => {\n//     const { board, group } = this.props\n//     const { card } = this.state\n//     const cardIdx = group.cards.findIndex((currCard) => currCard.id === card.id)\n//     group.cards.splice(cardIdx, 1)\n//     const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\n//     board.groups[groupIdx] = group\n//     this.props.saveBoard(board)\n//     this.props.toggleDetails(false)\n//   }\n\n//   onSavedueDate = (date) => {\n//     this.setState(prevState => ({\n//       card: {\n//         ...prevState.card,\n//         dueDate: Date.parse(date)\n//       }\n//     }))\n//     const { card } = this.state\n//     const newCard = { ...card }\n//     newCard.dueDate = Date.parse(date)\n//     this.onUpdateCard(newCard)\n//   }\n\n//   onUploadCardCoverImg = (url) => {\n//     const { card } = this.state\n//     const newCard = { ...card }\n//     const style = { imgUrl: url, color: '' }\n//     newCard.style = style\n//     this.onUpdateCard(newCard)\n//   }\n\n//   onUpdateCard = (updatedCard) => {\n//     const { board, group } = this.props\n//     const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\n//     group.cards[cardIdx] = updatedCard\n//     const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\n//     board.groups[groupIdx] = group\n//     this.setState({ card: updatedCard }, () => { this.props.saveBoard(board) })\n//   }\n\n//   onUpdateCoverColor = (color) => {\n//     const { card } = this.state\n//     const newCard = { ...card }\n//     const style = { imgUrl: '', color: color }\n//     newCard.style = style\n//     this.onUpdateCard(newCard)\n//   }\n\n//   onUpdateMembers = async (member) => {\n//     console.log('new members', member);\n//     const { board, group } = this.props\n//     const { card } = this.state\n//     const newCard = { ...card }\n//     const memberIdx = card.members.findIndex(currMember => currMember._id === member._id)\n//     if (memberIdx > -1) {\n//       newCard.members.splice(memberIdx, 1)\n//     } else {\n//       newCard.members.push(member)\n//     }\n//     const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\n//     group.cards[cardIdx] = newCard\n//     const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\n//     board.groups[groupIdx] = group\n//     this.setState({ card: newCard }, () => { this.props.saveBoard(board) })\n//   }\n\n//   checklistValidation = () => {\n//     const { checklist } = this.state.card\n//     if (checklist && checklist.todos.length === 1 && !checklist.todos[0].title) {\n//       this.addOrCancelChecklist(null)\n//     }\n//   }\n\n//   onSetUserFilter = (filterBy) => {\n//     this.setState({ filterBy })\n//   }\n\n//   get usersForDisplay() {\n//     const { board } = this.props\n//     const { filterBy } = this.state;\n//     const filterRegex = new RegExp(filterBy.fullname, 'i');\n//     const users = board.members.filter(member => filterRegex.test(member.fullname))\n//     return users\n//   }\n\n\n\n//   render() {\n//     const { card, mounted } = this.state\n//     const { group } = this.props\n//     const usersForDisplay = this.usersForDisplay\n//     if (!card) return <div>Loading...</div>\n\n//     return (\n//       <div className=\"modal-cover\" onClick={this.onClose}>\n//         <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleDetails}>\n//           <div className=\"card-details flex column align-center\" onClick={ev => ev.stopPropagation()}>\n//             {card.style?.color &&\n//               <div className=\"details-img-wrapper\" style={{ backgroundColor: card.style.color, height: '150px' }}>\n//               </div>}\n\n//             {card.style?.imgUrl &&\n//               <div className=\"details-img-wrapper flex justify-center\" style={{ height: '200px' }}>\n//                 <img src={card.style.imgUrl} alt=\"\" />\n//               </div>}\n\n//             <div className=\"card-details-wrapper flex column\">\n//               <CardHeader card={card} onHandleInputChange={this.onHandleInputChange} group={group} />\n//               <div className=\"card-content flex\">\n//                 <CardInfo\n//                   card={card}\n//                   onHandleChecklistChange={this.onHandleChecklistChange}\n//                   onHandleInputChange={this.onHandleInputChange}\n//                   onHandleActivitiesChange={this.onHandleActivitiesChange}\n//                   addOrCancelChecklist={this.addOrCancelChecklist}\n//                 />\n//                 <CardSide\n//                   card={card}\n//                   onRemoveCard={this.onRemoveCard}\n//                   onSavedueDate={this.onSavedueDate}\n//                   addOrCancelChecklist={this.addOrCancelChecklist}\n//                   onUploadCardCoverImg={this.onUploadCardCoverImg}\n//                   onHandleLabelsChange={this.onHandleLabelsChange}\n//                   onUpdateCoverColor={this.onUpdateCoverColor}\n//                   saveChanges={this.saveChanges}\n//                   users={usersForDisplay}\n//                   onUpdateMembers={this.onUpdateMembers}\n//                   onSetUserFilter={this.onSetUserFilter}\n//                 />\n//               </div>\n//             </div>\n//           </div>\n//         </CSSTransition>\n//       </div>\n//     )\n//   }\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     board: state.boardModule.currBoard,\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   saveBoard,\n//   clearState\n// }\n\n// export const CardDetails = connect(mapStateToProps, mapDispatchToProps)(_CardDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { CardLabels } from './CardLabels'\nimport Calendar from 'react-calendar';\nimport { saveBoard } from '../../store/actions/boardAction'\nimport { AddMember } from '../AddMember';\nimport Loader from 'react-loader-spinner'\nimport { eventBusService } from '../../services/eventBusService'\nimport { utilService } from '../../services/utilService';\n\nclass _CardPreviewDetails extends Component {\n  state = {\n    card: null,\n    userClicked: null,\n    isCreateLabel: false,\n    isChangeMembers: false,\n    isChangeDueDate: false,\n    value: new Date(),\n    modalChangePos: null\n  }\n\n  componentDidMount() {\n    // this.setState({ card: this.props.card }, () => console.log(this.state.card))\n    this.setState({ card: this.props.card, userClicked: this.props?.userClicked })\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      card: null,\n      userClicked: null,\n      isCreateLabel: false,\n      isChangeMembers: false,\n      isChangeDueDate: false,\n    })\n  }\n  modalRef = React.createRef()\n  modalLabelRef = React.createRef()\n\n  closeModal = () => {\n    this.modalRef.current.style.visibility = 'hidden'\n    this.props.showPreviewCardDetails()\n  }\n\n  toggleLabelMenu = (ev) => {\n    const pos = this.getNewPos(ev, 300, 450)\n\n    this.setState({ isCreateLabel: !this.state.isCreateLabel, modalChangePos: pos })\n  }\n\n  showMembers = (ev) => {\n    const pos = this.getNewPos(ev, 300, 450)\n    this.setState({ isChangeMembers: !this.state.isChangeMembers, modalChangePos: pos })\n  }\n\n  showDueDate = (ev) => {\n    const pos = this.getNewPos(ev, 340, 288)\n    this.setState({ isChangeDueDate: !this.state.isChangeDueDate, modalChangePos: pos })\n  }\n\n  onHandleInputChange = ({ target }) => {\n    const { value, name } = target\n    console.log(target, name, value);\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        [name]: value\n      }\n    }))\n  }\n\n  onHandleLabelsChange = (labels) => {\n    this.setState(prevState => ({\n      card: {\n        ...prevState.card,\n        labels: [...labels]\n      }\n    }), () => this.onUpdateCard(this.state.card))\n  }\n\n  onChange = (value) => {\n    this.setState({ value }, () => this.onSavedueDate((this.state.value + '').substring(4, 32)))\n    this.showDueDate()\n  }\n\n  onSavedueDate = (date) => {\n    const { card } = this.state\n    const newCard = { ...card }\n    newCard.dueDate = Date.parse(date)\n    this.onUpdateCard(newCard)\n  }\n\n  onUpdateMembers = async (member) => {\n    const copyCard = { ...this.state.card }\n    console.log('copyCard', copyCard);\n    const memberIdx = copyCard.members.findIndex(currMember => currMember._id === member._id)\n    console.log('copyCard', memberIdx);\n    if (memberIdx > -1) {\n      copyCard.members.splice(memberIdx, 1)\n      this.setState({ card: copyCard })\n    } else {\n      copyCard.members.push(member)\n      this.setState({ card: copyCard })\n\n    }\n    this.onUpdateCard(this.state.card)\n  }\n\n  onUpdateCard = (updatedCard, isSave = null) => {\n    const { board, group } = this.props\n    const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\n    group.cards[cardIdx] = updatedCard\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\n    board.groups[groupIdx] = group\n    this.setState({ card: updatedCard }, () => {\n      this.props.saveBoard(board)\n      if (isSave) this.closeModal()\n    })\n  }\n\n  onRemoveCard = () => {\n    const { board, group } = this.props\n    const { card } = this.state\n    const cardIdx = group.cards.findIndex((currCard) => currCard.id === card.id)\n    group.cards.splice(cardIdx, 1)\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\n    board.groups[groupIdx] = group\n    this.props.saveBoard(board)\n    this.closeModal()\n  }\n\n  getNewPos = (ev, width, height) => {\n    const size = { width, height }\n    return utilService.getModalPos(ev, size)\n  }\n\n  render() {\n    const { userClicked, card, isCreateLabel, isChangeMembers, isChangeDueDate, value, modalChangePos } = this.state\n    console.log('modalChangePos', modalChangePos)\n    if (!card) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={100} width={100} timeout={3000} /></div>\n    return (\n      <>\n        <div className=\"wrapper-preview-details\" ref={this.modalRef} onClick={this.closeModal} style={{\n          position: 'absolute',\n          zIndex: 9000, top: 0, left: 0, right: 0, bottom: 0,\n          backgroundColor: 'black', opacity: 0.5\n        }}></div>\n        <div className=\"card-preview-details flex\" style={{\n          position: 'absolute',\n          top: userClicked.y,\n          left: userClicked.x,\n          zIndex: 10000\n        }}>\n          <div className=\"flex column space-between\">\n            <textarea className=\"card-preview-details-textarea\" name=\"title\" cols=\"28\" wrap=\"hard\" rows=\"8\" onChange={this.onHandleInputChange} value={card.title} autoFocus ></textarea>\n            <button className=\"card-preview-details-save\" onClick={() => this.onUpdateCard(card, 'save')}>Save</button>\n          </div>\n          <div className=\"card-preview-details-changes flex column\">\n            <button className=\"card-preview-details-changes-btn\" onClick={this.toggleLabelMenu}><span className=\"card-preview-details-changes-icon\">\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610794160/price-tag_evse4z.png\" alt=\"label\" />\n            </span>Edit Labels</button>\n            {isCreateLabel &&\n              <div className=\"card-preview-details-label-wrap\" style={{ top: -modalChangePos.y, right: -130 }}>\n                <CardLabels toggleLabelMenu={this.toggleLabelMenu}\n                  onHandleLabelsChange={this.onHandleLabelsChange} card={card} /></div>}\n            <button className=\"card-preview-details-changes-btn flex space-between\"\n              onClick={this.showMembers}><span className=\"card-preview-details-changes-icon\">\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/user_g2y481.png\" alt=\"member\" />\n              </span><span style={{ flexGrow: 1 }}>Change Members</span>\n            </button>\n            {isChangeMembers && <AddMember\n              modalChangePos={modalChangePos}\n              toggleMembers={this.showMembers}\n              onUpdateMembers={this.onUpdateMembers}\n              onSetUserFilter={this.props.onSetUserFilter} members={card.members}\n              users={this.props.board.members} />}\n            <button className=\"card-preview-details-changes-btn\" onClick={this.showDueDate}>\n              <span className=\"card-preview-details-changes-icon\">\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"clock\" />\n              </span><span style={{ flexGrow: 1 }}> Change Due Date</span></button>\n            {isChangeDueDate && <div className=\"date-picker \" style={{ position: \"fixed\", top: modalChangePos.y - 30, left: modalChangePos.x }}>\n              <button onClick={this.showDueDate} className=\"close-date-btn\">✕</button>\n              <Calendar\n                onChange={this.onChange}\n                value={value} />\n            </div>}\n            <button className=\"card-preview-details-changes-btn\" onClick={this.onRemoveCard}>\n              <span className=\"card-preview-details-changes-icon\">\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793816/trash_nrq5xi.png\" alt=\"Trash\" />\n              </span>\n              <span style={{ flexGrow: 1, textAlign: 'left' }}>Delete</span></button>\n          </div>\n\n        </div>\n\n      </>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  board: state.boardModule.currBoard,\n})\n\nconst mapDispatchToProps = {\n  saveBoard\n}\n\nexport const CardPreviewDetails = connect(mapStateToProps, mapDispatchToProps)(_CardPreviewDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { loadBoard, saveBoard, cleanBoard } from '../store/actions/boardAction'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport { BoardHeader } from '../cmps/BoardHeader/BoardHeader'\nimport { GroupList } from '../cmps/Group/GroupList'\nimport { GroupMenu } from '../cmps/Group/GroupMenu'\nimport { CardDetails } from '../cmps/Card/CardDetails'\nimport { boardService } from '../services/boardService'\nimport { eventBusService } from '../services/eventBusService.js'\nimport { CardPreviewDetails } from '../cmps/Card/CardPreviewDetails'\nimport { socketService } from '../services/socketService'\nimport { activityService } from '../services/activityService'\nimport Loader from 'react-loader-spinner'\n\nexport class _BoardApp extends Component {\n    state = {\n        isDetailsShown: false,\n        scrollLeft: 0,\n        isPreviewDetailsShown: false,\n        userClicked: {\n            x: null,\n            y: null\n        },\n        isGroupMenuShown: false,\n        scrollWidth: 0\n    }\n    refBoard = React.createRef()\n\n    async componentDidMount() {\n        socketService.setup()\n        await this.loadBoard()\n        // const { scrollWidth } = this.refBoard?.current\n        // this.setState({ scrollWidth })\n        socketService.on('load board', board => this.updateBoard(board, true))\n        this.eventBusTerminate = eventBusService.on('show-details', this.toggleDetails)\n        this.eventBusLabelTerminate = eventBusService.on('label-added', this.onAddLabel)\n        this.eventBusRemoveTerminate = eventBusService.on('label-remove', this.onRemoveLabel)\n        this.eventBusShowPreviewDetailsTerminate = eventBusService.on('show-preview-details', this.showPreviewCardDetails)\n        this.eventBusShowGroupMenuTerminate = eventBusService.on('show-group-menu', this.showGroupMenu)\n    }\n\n    // componentDidUpdate(prevProps, prevState) {\n    //     console.log('prevProps', prevProps);\n    //     console.log('prevState', prevState);\n    //     console.log('this.refBoard.current.scrollWidth', this.refBoard.current.scrollWidth);\n    //     if (prevState.scrollWidth !== this.refBoard.current.scrollWidth) {\n    //         this.setState({ scrollWidth: this.refBoard.current.scrollWidth })\n    //     }\n    // }\n\n    componentWillUnmount() {\n        this.eventBusTerminate()\n        this.eventBusLabelTerminate()\n        this.eventBusRemoveTerminate()\n        this.eventBusShowPreviewDetailsTerminate()\n        socketService.terminate()\n        this.props.cleanBoard()\n        this.eventBusShowGroupMenuTerminate()\n        // this.props.board = null\n    }\n\n    updateBoard = (board, isRenderSocket = false) => {\n        this.props.saveBoard(board, isRenderSocket)\n    }\n\n    loadBoard = async () => {\n        const { boardId } = this.props.match.params\n        socketService.emit('set label', boardId)\n        await this.props.loadBoard(boardId)\n    }\n\n    onAddGroup = async (group) => {\n        const { board } = this.props\n        const copyBoard = { ...board }\n        copyBoard.groups.push(group)\n        await this.props.saveBoard(copyBoard)\n        // socketService.emit('group added', board)\n    }\n\n    onRemoveLabel = async (label) => {\n        const { board } = this.props\n        const copyBoard = { ...board }\n        // const labels = [...copyBoard.labels]\n        const idx = copyBoard.labels.findIndex((currLabel) => currLabel.id === label.id)\n        copyBoard.labels.splice(idx, 1)\n\n        // copyBoard.labels = [...labels]\n        await this.props.saveBoard(copyBoard)\n    }\n\n    onAddLabel = async (label) => {\n        const { board } = this.props\n        let updatedLabels;\n        let isUpdate;\n\n        if (board.labels) {\n            isUpdate = board.labels.find((currLabel) => currLabel.id === label.id)\n            if (isUpdate) {\n                updatedLabels = board.labels.map((currLabel) => currLabel.id === label.id ? label : currLabel)\n            } else {\n                updatedLabels = [...board.labels, label]\n            }\n        } else {\n            updatedLabels = new Array(label)\n        }\n\n        board.labels = [...updatedLabels]\n        await this.props.saveBoard(board)\n    }\n\n    onDragCard = async (sourceGroup = null, destinationGroup = null) => {\n        const { board } = this.props\n        const copyBoard = { ...board }\n\n        if (sourceGroup && destinationGroup) {\n            if (sourceGroup.title !== destinationGroup.title) {\n                var activity = activityService.createActivity(this.props.loggedInUser, 'moved card ', null, sourceGroup, ' to', destinationGroup)\n                copyBoard.activities ? copyBoard.activities.unshift(activity) : copyBoard.activities = new Array(activity)\n            }\n        }\n\n        await this.props.saveBoard(copyBoard)\n        // socketService.emit('card dragged', board) \n    }\n\n    onAddCard = async (card, groupId) => {\n        const { board } = this.props\n        const copyBoard = { ...board }\n\n        const groupIdx = await boardService.getGroupIdxById(board._id, groupId)\n        copyBoard.groups[groupIdx].cards.push(card)\n\n        const activity = activityService.createActivity(this.props.loggedInUser, 'added card ', card, copyBoard.groups[groupIdx], 'to')\n        copyBoard.activities ? copyBoard.activities.unshift(activity) : copyBoard.activities = new Array(activity)\n\n        await this.props.saveBoard(copyBoard)\n\n        // socketService.emit('card added', board)\n    }\n\n    onDragEnd = (result) => {\n        const { destination, source, draggableId, type } = result\n        const { groups } = this.props.board\n\n        if (!destination) return\n        if (type === 'group') {\n            const dragGroup = groups.find(group => group.id === draggableId)\n            groups.splice(source.index, 1)\n            groups.splice(destination.index, 0, dragGroup)\n            this.onDragCard()\n            return\n        }\n        const sourceGroup = groups.find(group => group.id === source.droppableId)\n        const destinationGroup = groups.find(group => group.id === destination.droppableId)\n        const draggingCard = sourceGroup.cards.find(card => card.id === draggableId)\n        sourceGroup.cards.splice(source.index, 1)\n        destinationGroup.cards.splice(destination.index, 0, draggingCard)\n        this.onDragCard(sourceGroup, destinationGroup)\n    }\n\n    toggleDetails = () => {\n        this.setState({ isDetailsShown: !this.state.isDetailsShown })\n    }\n    onScroll = (ev, scrolltoleft = 0) => {\n\n        if (!scrolltoleft) return\n        const scrollLeft = this.refBoard.current.scrollLeft\n        this.setState({\n            scrollLeft: scrollLeft\n        }, () => {\n            if (scrolltoleft)\n                this.refBoard.current.scrollLeft += scrolltoleft\n        })\n    }\n\n    showPreviewCardDetails = (pos) => {\n        this.setState({\n            userClicked: {\n                x: pos?.newClientPos.x,\n                y: pos?.newClientPos.y\n            },\n            isPreviewDetailsShown: !this.state.isPreviewDetailsShown\n        })\n    }\n\n    showGroupMenu = (ev) => {\n        // console.log(ev);\n        this.setState({\n            userClicked: { x: ev?.clientX, y: ev?.clientY },\n            isGroupMenuShown: !this.state.isGroupMenuShown\n        })\n    }\n\n\n    render() {\n        const { board } = this.props\n        console.log('want to check if a new board is add', board);\n        if (!board) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={100} width={100} timeout={3000} /></div>\n        // let { isDetailsShown, isPreviewDetailsShown, userClicked, isGroupMenuShown, scrollWidth } = this.state\n        let { isDetailsShown, isPreviewDetailsShown, userClicked, isGroupMenuShown } = this.state\n        // console.log(scrollWidth);\n\n        //socketService.emit('set label', this.props.board._id) // was here\n        return (\n            < >\n                {this.props.currCard && isDetailsShown &&\n                    <>\n                        {/* <div className=\"modal-cover\" onClick={this.toggleDetails}> </div> */}\n                        <CardDetails card={this.props.currCard} group={this.props.currGroup} toggleDetails={this.toggleDetails} />\n                    </>}\n\n                {isGroupMenuShown && <GroupMenu board={board} showGroupMenu={this.showGroupMenu} userClicked={userClicked} group={this.props.currGroup} />}\n                {isPreviewDetailsShown && <CardPreviewDetails board={board} showPreviewCardDetails={this.showPreviewCardDetails} userClicked={userClicked} card={this.props.currCard} group={this.props.currGroup} />}\n                <BoardHeader title={board.title} members={board.members} onAddGroup={this.onAddGroup} />\n                <section className=\"board-container\" ref={this.refBoard} onScroll={this.onScroll}>\n                    <DragDropContext onDragEnd={this.onDragEnd} >\n                        <Droppable droppableId=\"app\" type=\"group\" direction=\"horizontal\" >\n                            {(provided) => (\n                                <div style={{ width: (board.groups.length) * 287 }} ref={provided.innerRef} {...provided.droppableProps}>\n                                    {/* <div style={{ width: scrollWidth }} ref={provided.innerRef} {...provided.droppableProps}> */}\n                                    <GroupList updateBoard={this.updateBoard} groups={board.groups} onAddCard={this.onAddCard} onAddGroup={this.onAddGroup} onScroll={this.onScroll} />\n                                    {provided.placeholder}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n\n                </section>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        board: state.boardModule.currBoard,\n        currCard: state.cardModule.currCard,\n        currGroup: state.cardModule.currGroup,\n        loggedInUser: state.userModule.loggedInUser\n        // filterBy: state.boardModule.filterBy,\n    }\n}\n\nconst mapDispatchToProps = {\n    loadBoard,\n    saveBoard,\n    cleanBoard\n}\n\nexport const BoardApp = connect(mapStateToProps, mapDispatchToProps)(_BoardApp);\n","import { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux'\nimport { login } from '../store/actions/userAction.js'\n\nexport class _Login extends Component {\n  state = {\n    user: {\n      username: '',\n      password: '',\n    },\n    err: ''\n  }\n  handleChange = ({ target }) => {\n    const field = target.name\n    const value = (target.type === 'number') ? +target.value : target.value\n\n    this.setState(prevState => ({\n      user: {\n        ...prevState.user,\n        [field]: value\n      }\n    }))\n  }\n  onLogin = async (ev) => {\n    console.log(ev);\n    ev.preventDefault()\n    try {\n      ev.preventDefault()\n      await this.props.login(this.state.user)\n      console.log(this.props.loggedInUser);\n      if (this.props.loggedInUser) this.props.history.push('/boards')\n    } catch (err) {\n      ev.preventDefault()\n      this.props.history.push('/login')\n      console.log('login', err);\n      this.setState({ err: 'no user' })\n    }\n  }\n  render() {\n    const { user, err } = this.state\n    return (\n      <Container component=\"main\" maxWidth=\"xs\" >\n        <CssBaseline />\n        <div style={{\n          marginTop: '10px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}>\n          <Avatar style={{\n            margin: '10px',\n            backgroundColor: 'blue',\n          }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h2\" variant=\"h5\">\n            Login\n        </Typography>\n          <div className=\"err\">{err}</div>\n          <form style={{\n            width: '100%',\n            marginTop: '5px'\n          }} >\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"Username\"\n              label=\"Username\"\n              name=\"username\"\n              autoFocus\n              value={user.username}\n              onChange={this.handleChange}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={user.password}\n              onChange={this.handleChange}\n            />\n            {err && <span>err</span>}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginTop: '10px' }}\n              onClick={this.onLogin}\n            >\n              Login\n          </Button>\n            <Grid container>\n              <Grid item xs style={{ marginTop: '10px' }}>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n              </Link>\n              </Grid>\n              <Grid item style={{ marginTop: '10px' }}>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n        <Box mt={8}>\n\n        </Box>\n      </Container >\n    );\n  }\n}\nconst mapGlobalStateToProps = (state) => {\n\n  return {\n    users: state.userModule.users,\n    loggedInUser: state.userModule.loggedInUser\n  }\n\n}\n\nconst mapDispatchToProps = {\n  login\n}\nexport const Login = connect(mapGlobalStateToProps, mapDispatchToProps)(_Login)","import React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { TextField } from '@material-ui/core';\nimport { login } from '../store/actions/userAction.js'\nimport { connect } from 'react-redux'\nclass _Login1 extends Component {\n  state = {\n    user: {\n      username: '',\n      password: '',\n    },\n    err: ''\n  }\n  handleChange = ({ target }) => {\n    const field = target.name\n    const value = target.value\n\n    this.setState(prevState => ({\n      user: {\n        ...prevState.user,\n        [field]: value\n      }\n    }))\n  }\n  // validate(values) {\n  //   console.log(values);\n  //   const errors = {};\n  //   if (!values.email) {\n  //     errors.email = 'Required';\n  //   } else if (\n  //     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n  //   ) {\n  //     errors.email = 'Invalid email address';\n  //   }\n  //   if (values.password.length < 5) {\n  //     errors.password = 'Password is too short!'\n  //   }\n  //   return errors;\n  // }\n  // onSubmitForm(values, { setSubmitting }) {\n  //   setTimeout(() => {\n  //     alert(JSON.stringify(values, null, 2));\n  //     setSubmitting(false);\n  //   }, 400);\n  // }\n  onLogin = async (ev) => {\n    try {\n      await this.props.login(this.state.user)\n      console.log(this.props.loggedInUser);\n      if (this.props.loggedInUser) this.props.history.push('/boards')\n    } catch (err) {\n      // this.props.history.push('/login1')\n      console.log('login', err);\n      this.setState({ err: 'no user' })\n    }\n  }\n  render() {\n    return (\n      <div>\n        <h1>Any place in your app!</h1>\n        <Formik\n          initialValues={{ username: '', password: '' }}\n          // validate={this.validate}\n          onSubmit={this.onLogin}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <Field type=\"text\" name=\"username\" required value={this.state.user.username} onChange={this.handleChange} placeholder=\"username\" as={TextField} />\n              <ErrorMessage name=\"username\" className=\"err-msg\" />\n              <Field type=\"password\" required placeholder=\"password\" value={this.state.user.password} onChange={this.handleChange} as={TextField} name=\"password\" />\n              <ErrorMessage name=\"password\" className=\"err-msg\" component=\"span\" />\n              <button type=\"submit\" disabled={isSubmitting}>\n                Submit\n          </button>\n            </Form>\n          )}\n        </Formik>\n      </div >\n    )\n  }\n}\nconst mapGlobalStateToProps = (state) => {\n\n  return {\n    users: state.userModule.users,\n    loggedInUser: state.userModule.loggedInUser\n  }\n\n}\n\nconst mapDispatchToProps = {\n  login\n}\nexport const Login1 = connect(mapGlobalStateToProps, mapDispatchToProps)(_Login1)","import { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { connect } from 'react-redux'\nimport { signup } from '../store/actions/userAction.js';\n\n\nclass _Signup extends Component {\n  state = {\n    user: {\n      username: '',\n      fullname: '',\n      password: ''\n    },\n    err: {\n      txt: ''\n    }\n  }\n  handleChange = ({ target }) => {\n    const field = target.name\n    const value = (target.type === 'number') ? +target.value : target.value\n    this.setState(prevState => ({\n      user: {\n        ...prevState.user,\n        [field]: value\n      }\n    }))\n  }\n  onSignUpUser = async (ev) => {\n    ev.preventDefault()\n    try {\n      await this.props.signup(this.state.user)\n      this.props.history.push('/boards')\n    } catch (err) {\n      this.setState({ err })\n    }\n  }\n\n  render() {\n    const { user, err } = this.state\n    return (\n      <Container component=\"main\" maxWidth=\"xs\" >\n        <CssBaseline />\n        <div style={{\n          marginTop: '10px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}>\n          <Avatar style={{\n            margin: '10px',\n            backgroundColor: 'blue',\n          }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h2\" variant=\"h5\">\n            Sign Up\n        </Typography>\n          <div className=\"err\">{err && err.txt}</div>\n          <form onSubmit={this.onSignUpUser} style={{\n            width: '100%',\n            marginTop: '5px'\n          }} >\n            <TextField\n              variant=\"filled\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"Username\"\n              label=\"Username\"\n              name=\"username\"\n              autoFocus\n              value={user.username}\n              onChange={this.handleChange}\n            />\n            <TextField\n              variant=\"filled\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"fullname\"\n              label=\"Full Name\"\n              name=\"fullname\"\n              value={user.fullname}\n              onChange={this.handleChange}\n            />\n            <TextField\n              variant=\"filled\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              value={user.password}\n              onChange={this.handleChange}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginTop: '10px' }}\n            >\n              Sign Up\n          </Button>\n          </form>\n        </div>\n        <Box mt={8}>\n\n        </Box>\n      </Container >\n    );\n  }\n\n}\nconst mapGlobalStateToProps = (state) => {\n\n  return {\n    users: state.userModule.users\n  }\n\n}\n\nconst mapDispatchToProps = {\n  signup\n}\nexport const Signup = connect(mapGlobalStateToProps, mapDispatchToProps)(_Signup)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n// eslint-disable-next-line\nimport { Polar, Doughnut, Bar, Line, Bubble, Radar } from 'react-chartjs-2'\nimport { loadBoard } from '../store/actions/boardAction.js'\nimport { loadUsers } from '../store/actions/userAction.js'\nimport { utilService } from '../services/utilService.js'\nimport Loader from 'react-loader-spinner'\nimport { Link } from 'react-router-dom'\n\nexport class _DashBoard extends Component {\n  state = {\n    board: null,\n    textSize: 22\n  }\n  updateTextSize = () => {\n    if (window.innerWidth < 500) {\n      this.setState({ textSize: 15 });\n    }\n    else if (window.innerWidth === 501) {\n      this.setState({ textSize: 25 });\n    }\n  }\n  async componentDidMount() {\n    // window.addEventListener('resize', this.updateTextSize)\n    const board = this.props.board\n    if (!board) {\n      let boardId = this.props.match.params.boardId\n      await this.loadBoard(boardId)\n      this.setState({ board: this.props.board })\n    }\n    this.setState({ board: this.props.board })\n\n  }\n  // componentWillUnmount() {\n  //   window.removeEventListener(\"resize\", this.updateTextSize);\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //   console.log(1);\n  //   if (window.innerWidth < 400) this.setState({ textSize: 15 })\n\n  // }\n\n\n  loadBoard = async (boardId) => {\n    await this.props.loadBoard(boardId)\n  }\n\n  showTaskPerGroup = () => {\n    const mapGroup = this.state.board.groups.reduce((acc, group) => {\n      acc[group.title] = group.cards.length\n      return acc\n    }, {})\n    // console.log(mapGroup);\n    console.log(Object.keys(mapGroup));\n    // console.log(Object.values(mapGroup).map(title => title));\n    return {\n      labels:\n        [...Object.keys(mapGroup)],\n      datasets: [{\n        data: [...Object.values(mapGroup).map(title => title)],\n        backgroundColor: [\n          ...Object.keys(mapGroup).map((key, index) => {\n            // if (index % 2 === 0)\n            return utilService.getRandomBrightColor(index)\n            // else return utilService.getRandomDarkColor()\n          })\n        ],\n        hoverBackgroundColor: [\n          ...Object.keys(mapGroup).map((index) => utilService.getRandomDarkColor(index))\n        ]\n      }]\n    };\n\n  }\n\n  showTaskPerLabel = () => {\n    const mapLabels = this.state.board.groups.reduce((acc, group) => {\n      group.cards.forEach(card => {\n        card.labels.forEach(label => {\n          if (!acc[label.title]) acc[label.title] = 1\n          else acc[label.title] += 1\n        })\n      })\n      return acc\n    }, {})\n    return {\n      labels:\n        [...Object.keys(mapLabels).map(title => title)],\n      datasets: [{\n        data: [...Object.values(mapLabels).map(title => title)],\n        backgroundColor: [\n          ...Object.keys(mapLabels).map((key, index) => {\n            // if (index % 2 === 0)\n            return utilService.getRandomBrightColor(index)\n            // else return utilService.getRandomDarkColor()\n          })\n\n        ],\n        hoverBackgroundColor: [\n          ...Object.keys(mapLabels).map((index) => utilService.getRandomDarkColor(index))\n        ]\n      }]\n    };\n  }\n\n  showTaskPerMember = () => {\n    const mapMembers = this.state.board.groups.reduce((acc, group) => {\n      group.cards.forEach(card => {\n        card.members.forEach(member => {\n          if (!acc[member.fullname]) acc[member.fullname] = 1\n          else acc[member.fullname] += 1\n        })\n      })\n      return acc\n    }, {})\n    console.log('dashboard bars', mapMembers)\n    return {\n      labels:\n        [...Object.keys(mapMembers).map(fullname => fullname)],\n      datasets: [{\n        data: [...Object.values(mapMembers).map(fullname => fullname)],\n        backgroundColor: [\n          ...Object.keys(mapMembers).map((key, index) => {\n            // if (index % 2 === 0)\n            return utilService.getRandomBrightColor(index)\n            // else return utilService.getRandomDarkColor()\n          })\n\n        ],\n        hoverBackgroundColor: [\n          // ...Object.keys(mapMembers).map((index) => '#FFFFFF')\n          ...Object.keys(mapMembers).map((index) => utilService.getRandomDarkColor(index))\n        ],\n        label: 'Tasks Per Member'\n      }]\n    };\n  }\n\n  showTotalCards = () => {\n    let cardNum = 0\n    let cardUnassignedNum = 0\n    this.state.board.groups.forEach(group => {\n      group.cards.forEach(card => {\n        if (card.members?.length > 0) {\n          cardUnassignedNum++\n        }\n        cardNum++\n      })\n    })\n    cardUnassignedNum = cardNum - cardUnassignedNum\n    return { cardNum, cardUnassignedNum }\n  }\n\n  render() {\n    if (!this.state.board) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={100} width={100} timeout={3000} /></div>\n    const { textSize } = this.state\n    return (\n\n      <div className=\"statistics-page flex column\" style={{ background: \"linear-gradient(to right top, rgba(35, 35, 35, 0.65098), rgba(21, 21, 21, 0.501961))\" }}>\n        {/* <div className=\"statistics-page\"> */}\n        <h1>Statistics</h1>\n        <header className=\"dashboard-header flex\">\n          <div className=\"dashboard-preview flex column\"><span>{this.showTotalCards().cardNum}</span> <span> TOTAL CARDS</span></div>\n          <div className=\"dashboard-preview flex column\"><span>{this.showTotalCards().cardUnassignedNum}</span> <span> UNASSIGNED CARDS</span></div>\n          <div className=\"dashboard-preview flex column\"><span>3</span> <span> ADDED TODAY</span></div>\n        </header>\n        <button><Link to={`board/${this.state.board._id}`}> Back</Link></button>\n        <div className=\"dashboard-content flex\" style={{\n          // height: \"380px\",\n          // width: \"330px\",\n          flexWrap: \"wrap\",\n          margin: \"0 auto\"\n        }} >\n          {/* <Polar className=\"test\" data={this.showStatistics()} /> */}\n          <Polar options={{\n            responsive: true,\n            scales: {\n              yAxes: [{\n                stacked: true,\n                gridLines: {\n                  display: true,\n                  color: \"rgba(0,0,0,0.8)\"\n                }\n              }]\n            },\n            title: {\n              display: true,\n              text: 'Tasks Per List',\n              fontSize: textSize,\n              fontColor: '#172b4d'\n            },\n            legend: {\n              display: true,\n              position: 'top',\n              align: 'center',\n              labels: {\n                fontColor: 'rgb(0, 0, 0)',\n                // fontSize: 0.66 * textSize\n                fontSize: 12\n              }\n            },\n          }} className=\"test\" data={this.showTaskPerGroup()} />\n          <Doughnut options={{\n            responsive: true,\n            scales: {\n              yAxes: [{\n                stacked: true,\n                gridLines: {\n                  display: true,\n                  color: \"rgba(0,0,0,0.8)\"\n                }\n              }]\n            },\n            title: {\n              display: true,\n              text: 'Tasks Per Label',\n              fontSize: textSize,\n              fontColor: '#172b4d'\n            },\n            legend: {\n              display: true,\n              position: 'top',\n              labels: {\n                fontColor: 'rgb(0, 0, 0)',\n                fontSize: 12\n              }\n            }\n          }} className=\"test\" data={this.showTaskPerLabel()} />\n          <Bar\n            options={{\n              responsive: true,\n              scales: {\n                yAxes: [{\n                  stacked: true,\n                  gridLines: {\n                    display: true,\n                    color: \"rgba(0,0,0,0.8)\"\n                  },\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }],\n                xAxes: [{\n                  gridLines: {\n                    display: false,\n                  }\n                }]\n              },\n              title: {\n                display: true,\n                text: 'Tasks Per Member',\n                fontSize: textSize,\n                fontColor: '#172b4d'\n              },\n              // legend: {\n              //   display: true,\n              //   position: 'right',\n              //   labels: {\n              //     fontColor: 'rgb(0, 0, 0)',\n              //     fontSize: 12\n              //   }\n              // },\n              // maintainAspectRatio: false,\n            }}\n            width={120}\n            height={60}\n            className=\"test\" data={this.showTaskPerMember()}\n          />\n        </div>\n      </div >\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  board: state.boardModule.currBoard,\n  users: state.userModule.users\n})\n\nconst mapDispatchToProps = {\n  loadUsers,\n  loadBoard\n}\n\nexport const DashBoard = connect(mapStateToProps, mapDispatchToProps)(_DashBoard)\n","import { connect } from 'react-redux'\nimport { AppHeader } from './cmps/AppHeader'\nimport { Home } from './pages/Home'\nimport { Boards } from './pages/Boards'\nimport { BoardApp } from './pages/BoardApp'\nimport { Switch, Route } from 'react-router-dom'\nimport { saveBoard } from './store/actions/boardAction'\nimport { Login } from './pages/Login'\nimport { Login1 } from './pages/Login1'\nimport { Signup } from './pages/Signup'\nimport { DashBoard } from './pages/DashBoard'\n\nexport function _App({ currBoard }) {\n  return (\n    <div className=\"App\" style={{ backgroundImage: `url(${(currBoard) ? currBoard.style.backgroundImage : 'white'})` }}>\n      <AppHeader />\n      <Switch>\n\n        <Route component={Login1} path=\"/login1\" />\n        <Route component={Login} path=\"/login\" />\n        <Route component={Signup} path=\"/signup\" />\n        <Route component={DashBoard} path=\"/board/:boardId/dashboard\" />\n        <Route component={BoardApp} path=\"/board/:boardId\" />\n        <Route component={Boards} path=\"/boards\" />\n        <Route component={Home} path=\"/\" />\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  currBoard: state.boardModule.currBoard\n})\n\nconst mapDispatchToProps = {\n  saveBoard,\n\n}\n\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App)\n\n\n","const initialState = {\n  currBoard: null,\n  boards: [],\n}\n\nexport function boardReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_BOARDS':\n      return { ...state, boards: action.boards }\n    case 'SET_BOARD':\n      return { ...state, currBoard: { ...action.board } }\n    case 'UPDATE_BOARD':\n      return { ...state, currBoard: action.board }\n    case 'CLEAN_BOARD':\n      return { ...state, currBoard: null }\n    case 'ADD_BOARD':\n      return { ...state, boards: [...state.boards, action.board], currBoard: { ...action.board } }\n    case 'SAVE_BOARD':\n      return {\n        ...state, boards: state.boards.map(board => {\n          if (board._id === action.board._id) return action.board\n          else return board\n        })\n      }\n    default:\n      return state\n  }\n}\n","const initialState = {\n  currCard: null,\n  currGroup: null,\n  isAddOpen: false\n}\n\nexport function cardReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_CARD':\n      return { ...state, currCard: { ...action.card } }\n    case 'SET_GROUP':\n      return { ...state, currGroup: { ...action.group } }\n    case 'CLEAR_STATE':\n      return { ...state, currGroup: action.clear, currCard: action.clear }\n    case 'TOGGLE_ADD_CARD':\n      return { ...state, isAddOpen: action.isAddOpen }\n    default:\n      return state\n  }\n}\n\n// case 'ADD_LABEL':\n//   return { ...state, currCard: { ...state.currCard, labels: [action.label, ...state.currCard.labels] } }","\nconst initialState = {\n  // loggedInUser: null,\n  loggedInUser: JSON.parse(sessionStorage.getItem('loggedinUser')) || null,\n  users: [],\n  filterBy: { fullname: '' }\n}\n\nexport function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_USERS':\n      return { ...state, users: action.users }\n    case 'SET_USER':\n      return { ...state, loggedInUser: action.user }\n    case 'LOGIN':\n      return { ...state, loggedInUser: { ...action.user } }\n    case 'LOGOUT':\n      return { ...state, loggedInUser: null }\n    case 'SIGNUP':\n      return { ...state, users: [...state.users, action.user], loggedInUser: action.user }\n    case 'SET_FILTER':\n      return { ...state, filterBy: action.filterBy }\n    default:\n      return state\n  }\n}\n","import thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\n\n\nimport { boardReducer } from './reducers/boardReducer.js';\nimport { cardReducer } from './reducers/cardReducer.js';\nimport { userReducer } from './reducers/userReducer';\n\nconst rootReducer = combineReducers({\n    boardModule: boardReducer,\n    cardModule: cardReducer,\n    userModule: userReducer\n});\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n// window.theStore = store;\n// store.subscribe(() => {\n//     console.log('Global State is:', store.getState())\n// })","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App.jsx';\nimport { Provider } from 'react-redux';\nimport { store } from '../src/store/store';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/styles/main.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n\n// serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}