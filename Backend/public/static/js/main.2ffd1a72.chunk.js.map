{"version":3,"sources":["services/httpService.js","services/sessionStorage.js","services/userService.js","store/actions/userAction.js","services/boardService.js","services/socketService.js","store/actions/boardAction.js","services/utilService.js","cmps/BoardHeader/AddBoard.jsx","cmps/AppHeader.jsx","pages/Home.jsx","cmps/BoardPreview.jsx","pages/Boards.jsx","cmps/AddMember.jsx","cmps/BoardHeader/BoardColors.jsx","cmps/BoardHeader/BoardPhotos.jsx","cmps/BoardHeader/ChangeBackground.jsx","cmps/BoardHeader/BoardMenu.jsx","cmps/BoardHeader/BoardHeader.jsx","cmps/Group/GroupAdd.jsx","services/eventBusService.js","store/actions/cardAction.js","cmps/Card/CardPreviewLabel.jsx","cmps/Card/CardPreviewBottom.jsx","cmps/Card/CardPreview.jsx","cmps/Card/CardAddForm.jsx","cmps/Card/CardList.jsx","cmps/Group/GroupTitle.jsx","cmps/Card/CardAdd.jsx","cmps/Group/GroupPreview.jsx","cmps/Group/GroupList.jsx","cmps/Group/GroupMenu.jsx","cmps/Card/CardHeader.jsx","cmps/Card/CardActivityContainer.jsx","services/cardService.js","cmps/Card/CardChecklist.jsx","cmps/Card/CardInfo.jsx","services/cloudinaryService.js","cmps/Card/CardCover.jsx","cmps/Card/CardLabels.jsx","cmps/Card/DatePicker.jsx","cmps/Card/CardSide.jsx","services/activityService.js","cmps/Card/CardDetails.jsx","cmps/Card/CardPreviewDetails.jsx","pages/BoardApp.jsx","pages/Login.jsx","pages/Login1.jsx","pages/Signup.jsx","pages/DashBoard.jsx","App.jsx","store/reducers/boardReducer.js","store/reducers/cardReducer.js","store/reducers/userReducer.js","store/store.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","storageService","store","key","value","sessionStorage","JSON","stringify","load","defaultValue","parse","clear","STORAGE_KEY","userService","query","login","logout","signup","loadUser","credentials","user","_handleLogin","newUser","loadUsers","dispatch","users","type","userCred","boardService","remove","boardId","save","board","_id","getBoardById","getGroupIdxById","groupId","groupIdx","groups","findIndex","group","id","socketService","socket","setup","io","on","eventName","cb","off","emit","terminate","createSocketService","loadBoard","saveBoard","isRenderSocket","savedBoard","utilService","getRandomInt","makeId","length","text","possible","i","charAt","Math","floor","random","createTime","timeNow","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","timeString","getDueDate","timeStamp","stampDate","month","getMonth","day","getDate","convertName","fullname","letterName","names","split","toUpperCase","getTodoProgress","card","checklist","todos","doneTodos","filter","todo","isDone","total","done","getRandomColor","getSpaceCalculatedPos","ev","newClientPosX","newClientPosY","width","height","sumY","innerHeight","clientY","sumX","innerWidth","clientX","x","y","min","max","ceil","AddBoard","state","title","imgUrlLarge","imgUrlmedium","mounted","picked","onClose","setState","bgColors","setBgcImg","idx","prevState","onAddBoard","style","backgroundImage","backgroundImagePreview","props","addBoard","handleInput","target","name","this","CSSTransition","in","classNames","timeout","onExited","toggleAddBoard","className","onClick","map","color","src","alt","onChange","placeholder","autoComplete","Component","_AppHeader","loggedInUser","isAddBoardShow","newBoardId","history","push","prevProps","to","mapDispatchToProps","AppHeader","connect","userModule","boardModule","currBoard","withRouter","Home","BoardPreview","backgroundColor","backgroundRepeat","backgroundSize","backgroundPosition","_Boards","loadBoards","boards","Boards","_AddMember","filterBy","handleChange","field","onSetUserFilter","onToggleUser","onUpdateMembers","members","toggleMembers","modalChangePos","position","top","left","Input","currUser","AddMember","_BoardColors","imgUrl","getImgForBgc","toggleMenu","BoardColors","_BoardPhotos","photos","imgUrlSmall","useImgForBgc","photo","BoardPhotos","ChangeBackground","bgcFrom","chooseBgcFrom","from","onChangeBackground","_BoardMenu","mainRef","isChanging","stopPropagation","ref","opacity","visibility","activities","activity","byMember","toGroup","txt","date","createdAt","BoardMenu","_BoardHeader","isWrapper","isMoreMembersShown","current","boardMenuVisibility","React","createRef","onSaveTitle","preventDefault","member","memberIdx","currMember","splice","currBoardId","onSubmit","onBlur","TransitionGroup","BoardHeader","GroupAdd","isAddOpen","openInput","closeInput","onSaveGroup","cards","onAddGroup","onScroll","autoFocus","eventBusService","listener","callListener","detail","addEventListener","removeEventListener","dispatchEvent","CustomEvent","setGroup","err","CardPreviewLabel","isLableTitleShown","toggleLableTitle","labels","label","CardPreviewBottom","progress","dueDate","now","comments","_CardPreview","onShowCard","setCard","showPreviewDetails","pos","newClientPos","index","draggableId","provided","snapshot","draggableProps","innerRef","dragHandleProps","getItemStyle","isDragging","isDraggingOver","draggableStyle","userSelect","padding","margin","borderRadius","background","boxShadow","CardPreview","currCard","cardModule","CardAddForm","openCardAdd","setTimeout","onSaveCard","onAddCard","eventBusTerminate","required","cols","rows","marginTop","onMouseDown","CardList","scrollTop","getListStyle","paddingTop","paddingBottom","paddingLeft","groupTitle","refs","droppableId","droppableProps","_GroupTitle","textInput","updateBoard","showGroupMenu","dragHandle","GroupTitle","CardAdd","GroupPreview","refCard","scrolltobottom","grpTitle","GroupList","_GroupMenu","userClicked","onRemoveGroup","copyBoard","currGroup","onCopyGroup","copyGroup","zIndex","GroupMenu","CardHeader","onHandleInputChange","spellCheck","_CardActivityContainer","isSaveOpen","newComment","onHandleCommentChange","onToggleIsSaveOpen","isOpen","createComment","onSaveNewComment","comment","commentsCopy","unshift","Array","onHandleActivitiesChange","CardActivityContainer","cardService","createTodo","createChecklist","CardChecklist","newTodoTitle","onHandleTitleChange","onHandleChecklistChange","onHandleTodosChange","checked","updatedTodos","saveTodos","onRemoveTodo","addOrCancelChecklist","todosCopy","saveNewTodo","todoToSave","onHandleNewTodoChange","toggleIsAddOpen","progressBarPrecentage","acc","forEach","todosPrecent","CardInfo","moment","format","description","cloudinaryService","uploadImg","file","UPLOAD_URL","formData","FormData","append","fetch","body","json","CardCover","isUploading","coverColors","onUploadImg","files","secure_url","onFinishUpload","setColor","onUpdateCoverColor","toggleCoverMenu","htmlFor","hidden","accept","_CardLabels","isCreateLabel","currLabel","colors","onEditClick","onHandleNewLabel","val","onToggleLabel","onAddLabel","labelsCopy","onHandleLabelsChange","clearNewLabel","onChooseLabel","checkForDuplicate","removeLabel","find","isClose","onToggleLabels","checkForMark","onRemoveLabel","toggleLabelMenu","CardLabels","DatePicker","onSavedueDate","substring","toggleDate","CardSide","isDateShown","isLabelsShown","isLabelsMenuShown","isCoverMenuShown","onRemoveCard","onAddChecklist","saveChanges","onUploadCardCoverImg","activityService","createActivity","action","moveTo","_CardDetails","initialCard","checklistValidation","isActivityUpdate","sendUpdatedBoard","cardIdx","toggleDetails","newCard","onDeleteCover","usersForDisplay","filterRegex","RegExp","test","clearState","CardDetails","_CardPreviewDetails","isChangeMembers","isChangeDueDate","modalRef","modalLabelRef","closeModal","showPreviewCardDetails","getNewPos","showMembers","showDueDate","onUpdateCard","copyCard","updatedCard","isSave","size","right","bottom","wrap","flexGrow","textAlign","CardPreviewDetails","_BoardApp","isDetailsShown","scrollLeft","isPreviewDetailsShown","isGroupMenuShown","refBoard","match","params","isUpdate","updatedLabels","onDragCard","sourceGroup","destinationGroup","onDragEnd","result","destination","source","dragGroup","draggingCard","scrolltoleft","eventBusLabelTerminate","eventBusRemoveTerminate","eventBusShowPreviewDetailsTerminate","eventBusShowGroupMenuTerminate","cleanBoard","direction","BoardApp","_Login","username","password","onLogin","Container","component","maxWidth","CssBaseline","display","flexDirection","alignItems","Avatar","Typography","variant","TextField","fullWidth","Button","Grid","container","item","xs","Link","href","Box","mt","Login","_Login1","initialValues","isSubmitting","as","disabled","Login1","_Signup","onSignUpUser","Signup","_DashBoard","showTaskPerGroup","mapGroup","reduce","Object","keys","values","datasets","hoverBackgroundColor","showTaskPerLabel","mapLabels","showTotalCards","cardNum","cardUnassignedNum","flexWrap","options","scales","yAxes","stacked","gridLines","xAxes","fontSize","legend","fontColor","DashBoard","App","path","initialState","getItem","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","theStore","subscribe","getState","Boolean","hostname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2ffd1a72.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n// : '//localhost:3030/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","export const storageService = {\r\n  store,\r\n  load,\r\n  clear\r\n}\r\n\r\nfunction store(key, value) {\r\n  sessionStorage[key] = JSON.stringify(value);\r\n\r\n}\r\n\r\nfunction load(key, defaultValue = null) {\r\n  let value = sessionStorage[key];\r\n  if (!value) return defaultValue\r\n  else return JSON.parse(value);\r\n}\r\n\r\n\r\nfunction clear() {\r\n  sessionStorage.clear()\r\n}\r\n\r\n","import { httpService } from './httpService.js'\r\nimport { storageService } from './sessionStorage.js'\r\n\r\nconst STORAGE_KEY = 'loggedinUser'\r\n\r\n\r\nexport const userService = {\r\n    query,\r\n    login,\r\n    logout,\r\n    signup,\r\n    loadUser\r\n}\r\n\r\n\r\n\r\n// const baseUrl = 'http://localhost:3030/api/user'\r\n// const baseUrl = 'http://localhost:3030/user'\r\n// const baseUrl = 'http://localhost:3030/api/auth';\r\n\r\nasync function query() {\r\n    return httpService.get(`user`)\r\n}\r\n\r\nasync function login(credentials) {\r\n    //loadUser()\r\n    const user = await httpService.post(`auth/login`, credentials);\r\n    return _handleLogin(user);\r\n}\r\n\r\nasync function logout() {//check with liel how to do this\r\n    storageService.clear();\r\n    await httpService.post(`auth/logout`);\r\n}\r\n\r\n\r\nasync function signup(credentials) {\r\n    // console.log('credentials', credentials)\r\n    const newUser = await httpService.post(`auth/signup`, credentials);\r\n    return _handleLogin(newUser);\r\n}\r\n\r\nasync function loadUser() {\r\n    const user = storageService.load(STORAGE_KEY)\r\n    // console.log('user', user);\r\n    return user\r\n}\r\nfunction _handleLogin(user) {\r\n    storageService.store(STORAGE_KEY, user)\r\n    return user\r\n}","import { userService } from '../../services/userService.js'\r\n\r\n\r\nexport function loadUsers() {\r\n    return async (dispatch) => {\r\n        try {\r\n            const users = await userService.query()\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('err userAction LOAD users', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function login(userCred) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.login(userCred)\r\n            dispatch({ type: 'LOGIN', user })\r\n        } catch (err) {\r\n            console.log('err userAction LOGIN USER', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return async (dispatch) => {\r\n        try {\r\n            await userService.logout()\r\n            dispatch({ type: 'LOGOUT' })\r\n        } catch (err) {\r\n            console.log('err userAction LOGOUT USER', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function signup(userCred) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.signup(userCred)\r\n            dispatch({ type: 'SIGNUP', user })\r\n        } catch (err) {\r\n            console.log('err userAction SIGNUP USER', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadUser(userCred) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.loadUser(userCred)\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('err userAction LOAD USER', err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function setUserFilter(filterBy) {\r\n    return (dispatch) => { dispatch({ type: 'FILTER', filterBy }) }\r\n}","import { httpService } from './httpService.js'\r\n\r\nexport const boardService = {\r\n    query,\r\n    remove,\r\n    save,\r\n    getBoardById,\r\n    getGroupIdxById,\r\n}\r\n\r\nfunction query() {\r\n    return httpService.get(`board`)\r\n}\r\n\r\nfunction remove(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\nfunction save(board) {\r\n    if (board._id) {\r\n        return httpService.put(`board/${board._id}`, board)\r\n    } else {\r\n        return httpService.post('board', board)\r\n    }\r\n}\r\n\r\nfunction getBoardById(boardId) {\r\n    return httpService.get(`board/${boardId}`)\r\n}\r\n\r\nasync function getGroupIdxById(boardId, groupId) {\r\n    try {\r\n        const board = await getBoardById(boardId)\r\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n        return groupIdx\r\n    } catch (err) {\r\n        console.log('err boardService GET GROUP IDX BY ID', err)\r\n    }\r\n}\r\n\r\n","import io from 'socket.io-client'\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb) {\r\n      socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\n// function cb(x) { console.log(x) }\r\n// socketService.on('baba', cb)\r\n// socketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n","import { boardService } from '../../services/boardService.js'\r\nimport { socketService } from '../../services/socketService.js';\r\n\r\nexport function loadBoards() { // Action Creator\r\n    return async (dispatch) => {\r\n        try {\r\n            const boards = await boardService.query()\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('err boardAction LOAD BOARDS', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadBoard(boardId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const board = await boardService.getBoardById(boardId)\r\n            console.log('board from DISPATCH', board)\r\n            dispatch({ type: 'SET_BOARD', board })\r\n        } catch (err) {\r\n            console.log('err boardAction LOAD BOARD', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function saveBoard(board, isRenderSocket = false) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const savedBoard = await boardService.save(board)\r\n            // console.log('savedBoard', savedBoard);\r\n            if (!isRenderSocket) {\r\n                console.log('ACTIONboard', board)\r\n                socketService.emit('render', board)\r\n                // socketService.emit('render', board)\r\n            }\r\n            dispatch({ type: (board._id) ? 'UPDATE_BOARD' : 'ADD_BOARD', board: savedBoard })\r\n        } catch (err) {\r\n            console.log('err boardAction SAVE BOARD', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function cleanBoard() {\r\n    return (dispatch) => {\r\n        try {\r\n            dispatch({ type: 'CLEAN_BOARD' })\r\n        } catch (err) {\r\n            console.log('err boardAction CLEAN BOARD', err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","export const utilService = {\r\n  getRandomInt,\r\n  makeId,\r\n  createTime,\r\n  getDueDate,\r\n  convertName,\r\n  getTodoProgress,\r\n  getRandomColor,\r\n  getSpaceCalculatedPos\r\n}\r\n\r\n\r\nfunction getSpaceCalculatedPos(ev, { width, height }) {\r\n  const sumY = window.innerHeight - ev.clientY\r\n  const sumX = window.innerWidth - ev.clientX\r\n  var newClientPosX\r\n  var newClientPosY\r\n\r\n  if (ev.clientX - width < 0) newClientPosX = 10\r\n  if (sumX < width) newClientPosX = window.innerWidth - (width + 10)\r\n  if (sumY < height) newClientPosY = ev.clientY - (height - sumY)\r\n\r\n  if(!newClientPosX) newClientPosX = ev.clientX\r\n  if(!newClientPosY) newClientPosY = ev.clientY\r\n\r\n  return { x: newClientPosX, y: newClientPosY }\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 7) {\r\n  var text = \"\";\r\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  for (var i = 0; i < length; i++) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return text;\r\n}\r\n\r\nfunction createTime() {\r\n  var timeNow = new Date();\r\n  var hours = timeNow.getHours();\r\n  var minutes = timeNow.getMinutes();\r\n  var seconds = timeNow.getSeconds();\r\n  var timeString = \"\" + ((hours > 12) ? hours - 12 : hours);\r\n  timeString += ((minutes < 10) ? \":0\" : \":\") + minutes;\r\n  timeString += ((seconds < 10) ? \":0\" : \":\") + seconds;\r\n  return timeString;\r\n}\r\n\r\nfunction getDueDate(timeStamp) {\r\n  var stampDate = new Date(timeStamp);\r\n  const allMonths = [\"Jan\", \"Feb\", \"Mar\", \"Apr\",\r\n    \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n  const month = allMonths[stampDate.getMonth()]\r\n  const day = stampDate.getDate()\r\n  const date = `${month} ${day}`\r\n  return date\r\n}\r\n\r\nfunction convertName(fullname) {\r\n  if (!fullname) return\r\n  let letterName;\r\n  const names = fullname.split(' ')\r\n  if (!names[1]) letterName = names[0][0].toUpperCase()\r\n  else letterName = names[0][0].toUpperCase() + names[1][0].toUpperCase()\r\n  return letterName\r\n}\r\n\r\nfunction getTodoProgress(card) {\r\n  if (card.checklist) {\r\n    const { todos } = card.checklist\r\n    let doneTodos = todos.filter(todo => todo.isDone)\r\n    const progress = { total: todos.length, done: doneTodos.length }\r\n    return progress\r\n  }\r\n  else return\r\n\r\n}\r\nfunction getRandomColor() {\r\n  var colors = ['#f9ed69', '#f08a5d', '#54e346', '#00adb5', '#6a2c70', '#b83b5e']\r\n\r\n  return colors[getRandomInt(0, 6)];\r\n}\r\n","import React, { Component } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nexport class AddBoard extends Component {\r\n\r\n    state = {\r\n        board: {\r\n            title: '',\r\n            imgUrlLarge: '',\r\n            imgUrlmedium: ''\r\n        },\r\n        mounted: false,\r\n        picked: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ mounted: true })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({ mounted: false })\r\n    }\r\n\r\n    // coverColors = () => {\r\n    //     return ['#f9ed69', '#a56cc1', '#f38181', '#95e1d3', '#878ecd', '#3fc1c9',\r\n    //         '#a1dd70', '#ffcc29']\r\n    // }\r\n\r\n    bgColors = () => {\r\n\r\n        return [{ imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg'},\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg'},\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg'},\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg'},\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712052/pexels-pixabay-461940_znnsxj.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_300/v1610712052/pexels-pixabay-461940_znnsxj.jpg'},\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/green-1_rp1fjx.jpg', imgUrlmedium:'https://res.cloudinary.com/basimgs/image/upload/v1611084082/green-1_rp1fjx.jpg' },\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/cooldownpink_y0m0db.jpg', imgUrlmedium:'https://res.cloudinary.com/basimgs/image/upload/v1611084082/cooldownpink_y0m0db.jpg' },\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/mizu_qlr5uq.png', imgUrlmedium:'https://res.cloudinary.com/basimgs/image/upload/v1611084082/mizu_qlr5uq.png' },\r\n        { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/0322_purple_hkmphn.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/v1611084082/0322_purple_hkmphn.jpg'}]\r\n      }\r\n\r\n    setBgcImg = (imgUrlLarge, imgUrlmedium, idx) => {\r\n        console.log('the chosen url is', imgUrlLarge);\r\n        this.setState(prevState => {\r\n            return {board: { ...prevState.board, imgUrlLarge, imgUrlmedium}}\r\n        })\r\n        this.setState({ picked: idx })\r\n    }\r\n\r\n    onAddBoard = () => {\r\n        const { title, imgUrlLarge, imgUrlmedium } = this.state.board\r\n        const board = { title, style: {backgroundImage: imgUrlLarge, backgroundImagePreview: imgUrlmedium} }\r\n        this.props.addBoard(board)\r\n        this.onClose()\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const { name } = target\r\n        const { value } = target\r\n        this.setState(prevState => {\r\n            return {\r\n                board: {\r\n                    ...prevState.board,\r\n                    [name]: value\r\n                }\r\n            }\r\n        }, () => console.log('input title',this.state.board.title ))\r\n    }\r\n\r\n    render() {\r\n        const { mounted, picked } = this.state\r\n        return (\r\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleAddBoard}>\r\n            <div className=\"new-board-modal flex column\">\r\n            <div className=\"new-board-header flex space-around\">\r\n                <h3>Create New Board</h3><button onClick={this.onClose}>✕</button>\r\n            </div>\r\n                <div className=\"board-cover-colors\">\r\n                        {this.bgColors().map((color, idx) => {\r\n                            return <div className={(picked === idx)? \"new-board-color picked\": \"new-board-color\"} key={idx}\r\n                                onClick={() => this.setBgcImg(color.imgUrlLarge ,color.imgUrlmedium, idx)}><img src={color.imgUrlmedium} alt=\"\"/></div>\r\n                        })}\r\n                </div>\r\n                <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInput}\r\n                    className=\"add-board-input\" placeholder=\"Enter a board title...\" autoComplete=\"off\"/>\r\n                    <button onClick={this.onAddBoard} className=\"create-board-btn\">Create board</button>\r\n            </div>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n}\r\n","import { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Component } from 'react'\r\nimport { logout, loadUser } from '../store/actions/userAction.js'\r\nimport { saveBoard } from '../store/actions/boardAction'\r\nimport { utilService } from '../services/utilService.js'\r\nimport { AddBoard } from './BoardHeader/AddBoard.jsx'\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass _AppHeader extends Component {\r\n\r\n  state = {\r\n    loggedInUser: null,\r\n    isAddBoardShow: false,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // console.log(this.props);\r\n    const user = await this.props.loadUser()\r\n    if (user) this.setState({ loggedInUser: user })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // console.log('prevProps', prevProps);\r\n    // console.log('prevState', prevState);\r\n    // console.log('state', this.state);\r\n    if (this.props.loggedInUser !== this.state.loggedInUser)\r\n      this.setState({ loggedInUser: this.props.loggedInUser })\r\n  }\r\n\r\n  toggleAddBoard = () => {\r\n    this.setState({ isAddBoardShow: !this.state.isAddBoardShow })\r\n  }\r\n\r\n  addBoard = async (board) => {\r\n    await this.props.saveBoard(board, true)\r\n    const newBoardId = this.props.board._id\r\n    console.log('newBoardId', newBoardId)\r\n    this.props.history.push(`/`)\r\n    this.props.history.push(`board/${newBoardId}`)\r\n  }\r\n\r\n  render() {\r\n    // window.loggedInUser = this.state\r\n    const { loggedInUser, isAddBoardShow } = this.state\r\n    // if (!loggedInUser) return <div>Loading...</div>\r\n    // console.log('LOGGED IN USER', loggedInUser);\r\n    return (\r\n      <>\r\n        {isAddBoardShow && <AddBoard addBoard={this.addBoard} toggleAddBoard={this.toggleAddBoard} />}\r\n        <header className=\"app-header flex space-between\">\r\n          <nav>\r\n            <ul className=\"header-list flex justify-center\">\r\n              <li ><Link to=\"/\" className=\"home-btn\"><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/home_seebre.png\" alt=\"\" /></Link></li>\r\n              <li ><Link to=\"/boards\" className=\"boards-btn\">Boards</Link></li>\r\n            </ul>\r\n          </nav>\r\n          <li ><Link to=\"/\" className=\"header-title\"><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1611315507/multitask_1_fjrnbt.png\" alt=\"\"/><h2>TasKooler</h2></Link></li>\r\n          <div className=\"header-right flex\">\r\n            <button className=\"header-add-board-btn\" onClick={this.toggleAddBoard}><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/plus_ljzrkm.png\" alt=\"\" /></button>\r\n            {loggedInUser && <> <div className=\"header-user-logged-in\">{utilService.convertName(loggedInUser.fullname)}</div> <button className=\"header-log-board-btn\" onClick={this.props.logout}> Logout</button></>}\r\n            {!loggedInUser && <>  <div className=\"header-user-logged-in\">{'G '} </div> <button className=\"header-log-board-btn\"><Link to=\"/login\">Login</Link></button></>}\r\n          </div>\r\n        </header>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapGlobalStateToProps = (state) => {\r\n  return {\r\n    loggedInUser: state.userModule.loggedInUser,\r\n    board: state.boardModule.currBoard\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  logout,\r\n  loadUser,\r\n  saveBoard,\r\n}\r\n\r\nexport const AppHeader = connect(mapGlobalStateToProps, mapDispatchToProps)(withRouter(_AppHeader))\r\n","import { Link } from 'react-router-dom'\r\nexport function Home() {\r\n    return (\r\n        <main className=\"home-container\">\r\n            <div className=\"home-img\"></div>\r\n            <div className=\"text-container flex column\">\r\n                <h1 className=\"h1-main-header\">Welcome to TasKooler</h1>\r\n                <h3 className=\"h3-secondary-header\">TasKooler enables you and your team to organize and prioritize all your shit in a fun, flexible way.</h3>\r\n                <Link to=\"/boards\" className=\"boards-btn\" className=\"get-started-btn\">GET STARTED!</Link>\r\n            </div>\r\n\r\n        </main>\r\n    )\r\n}","import { Link } from 'react-router-dom'\r\n\r\nexport function BoardPreview({ board }) {\r\n    return (\r\n        <Link style={{ width: '280px' }} to={`/board/${board._id}`}>\r\n            <div style={{\r\n                backgroundImage: `url(${board.style.backgroundImagePreview})`, backgroundColor: \"#6DB3F2\",\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                // background: \"linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.65) 100%)\",\r\n            }} className=\"board-preview\">\r\n                <h1 >{board.title}</h1>\r\n            </div>\r\n        </Link>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardPreview } from '../cmps/BoardPreview'\r\nimport { loadBoards, saveBoard } from '../store/actions/boardAction'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nexport class _Boards extends Component {\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    // componentDidUpdate(prevProps) {\r\n    //     if (this.props.boards === prevProps.boards && this.props.board) {\r\n    //         this.props.loadBoards()\r\n    //         console.log('this.props UPDATE', this.props)\r\n    //         // this.props.history.push(`board/${this.props.board._id}`)\r\n    //     }\r\n    // }\r\n\r\n    addBoard = async () => {\r\n        const board = { title: 'New Board', style: {} }\r\n        await this.props.saveBoard(board, true)\r\n        console.log('board to add new', board);\r\n        this.props.history.push(`board/${this.props.board._id}`)\r\n    }\r\n    // const board = { title: 'New Board' }\r\n    // await this.props.saveBoard(board, true)\r\n    // console.log('this.props', this.props.board._id)\r\n    // addBoard = async () => {\r\n    //     const board = { title: 'New Board' }\r\n    //     await this.props.saveBoard(board)\r\n    //     console.log('board', board)\r\n    //     this.props.history.push(`board/${this.props.board._id}`)\r\n    // }\r\n\r\n    render() {\r\n        const { boards } = this.props\r\n        if (!boards) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={400} width={400} timeout={3000} /></div>\r\n        // console.log('this.props UPDATE', this.props)\r\n        return (\r\n            <div className=\"boards-page\">\r\n                <h2>Our Boards</h2>\r\n                <section className=\"boards-container\">\r\n                    <div className=\"new-board\" onClick={this.addBoard}><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/plus_ljzrkm.png\" alt=\"\" /></div>\r\n                    {boards.map(board => {\r\n                        return <BoardPreview key={board._id} board={board} />\r\n                    })}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardModule.boards,\r\n        board: state.boardModule.currBoard,\r\n        // loggedInUser: state.userModule.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    saveBoard,\r\n    // removeBoard,\r\n}\r\n\r\n\r\n\r\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../services/utilService'\r\nimport Input from '@material-ui/core/Input';\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nexport class _AddMember extends Component {\r\n\r\n    state = {\r\n        mounted: false,\r\n        filterBy: {\r\n            fullname: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ mounted: true })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({ mounted: false })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }), () => {\r\n            this.props.onSetUserFilter(this.state.filterBy)\r\n        })\r\n    }\r\n\r\n    onToggleUser = (user) => {\r\n        this.props.onUpdateMembers(user)\r\n        // console.log('check', user);\r\n    }\r\n\r\n    render() {\r\n        const { users, members } = this.props\r\n        const { filterBy, mounted } = this.state\r\n        return (\r\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleMembers}>\r\n                 <div className=\"members-container header-members\" style={this.props.modalChangePos ? { position: \"fixed\", top: this.props.modalChangePos.y, left: this.props.modalChangePos.x } : null}>\r\n                    <div className=\"add-member-header flex spase-between\">\r\n                        <h3>Members</h3>\r\n                        <button onClick={this.onClose} className=\"member-close-btn\">✕</button>\r\n                    </div>\r\n                    <Input type=\"text\" name=\"fullname\" value={filterBy.fullname} onChange={this.handleChange} placeholder=\"Search members...\" />\r\n                    <div className=\"new-member-list flex column\">\r\n                        {users.map(user => <div key={user._id} className=\"member-items flex space-between\" onClick={() => this.onToggleUser(user)}>\r\n                            <div className=\"flex space-between\"><div className=\"member-item\" style={{ backgroundColor: user.color ? user.color : \"#3f72af\" }}><span>{utilService.convertName(user.fullname)}</span>\r\n                            </div>\r\n                                <p>{user.fullname}</p></div>\r\n                            <button className={(members.findIndex(currUser => currUser._id === user._id) > -1) ?\r\n                                'checked-member' : 'unchecked-member'}>\r\n                                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610900476/checked_etlnj9.png\" alt=\"\" />\r\n                            </button>\r\n                        </div>)}\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // users: state.userModule.users\r\n        //   board: state.boardModule.currBoard,\r\n        // filterBy: state.boardModule.filterBy,\r\n        // loggedInUser: state.userModule.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport const AddMember = connect(mapStateToProps, mapDispatchToProps)(_AddMember);\r\n","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../../store/actions/boardAction.js'\r\n\r\nclass _BoardColors extends Component {\r\n  bgColors = () => {\r\n\r\n    return [{ imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731294/blue_icz7cd.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731552/yellow_acyunw.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731568/yellow2_gakpte.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731599/green-1_h78uob.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731662/green-2_ura9cy.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731705/red-1_mrdvf7.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731707/red-2_vo74ot.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731757/gray-1_rpkrjg.png' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731759/gray-2_shnjdu.jpg' },\r\n    { imgUrl: 'https://res.cloudinary.com/dxh5keaol/image/upload/v1610731294/blue_icz7cd.jpg' },]\r\n  }\r\n  getImgForBgc = async (imgUrl) => {\r\n    const { currBoard } = this.props\r\n    currBoard.style.backgroundImage = imgUrl\r\n    await this.props.saveBoard(currBoard)\r\n    this.props.toggleMenu()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"board-colors flex justify-center\">\r\n        {this.bgColors().map((color, idx) => { return <div className=\"menu-img-box\" key={idx} ><img  className=\"board-colors-grid\" onClick={() => this.getImgForBgc(color.imgUrl)} src={color.imgUrl} alt=\"not good\" /></div> })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  currBoard: state.boardModule.currBoard\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  saveBoard,\r\n\r\n}\r\n\r\nexport const BoardColors = connect(mapStateToProps, mapDispatchToProps)(_BoardColors)\r\n","\r\nimport { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../../store/actions/boardAction.js'\r\nclass _BoardPhotos extends Component {\r\n\r\n \r\n  photos = () => {\r\n    return [{ imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712043/pexels-roberto-nickson-2885320_ghwa3m.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712043/pexels-roberto-nickson-2885320_ghwa3m.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712043/pexels-roberto-nickson-2885320_ghwa3m.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712043/pexels-vishnu-r-nair-1105666_nkvc5j.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712043/pexels-vishnu-r-nair-1105666_nkvc5j.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712043/pexels-vishnu-r-nair-1105666_nkvc5j.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712045/pexels-eberhard-grossgasteiger-844297_xsbtqx.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712045/pexels-eberhard-grossgasteiger-844297_xsbtqx.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712045/pexels-eberhard-grossgasteiger-844297_xsbtqx.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712048/pexels-eberhard-grossgasteiger-1287145_iyiwh5.jpg'},\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610814688/pexels-asad-photo-maldives-1450353_oq4mbu.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610814689/pexels-frans-van-heerden-624015_fjsy7m.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610814691/pexels-asad-photo-maldives-3601425_h5x2md.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712052/pexels-pixabay-461940_znnsxj.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712052/pexels-pixabay-461940_znnsxj.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712052/pexels-pixabay-461940_znnsxj.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611063807/pexels-pixabay-33545_zzzi4o.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611063807/pexels-pixabay-33545_zzzi4o.jpg' , imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611063807/pexels-pixabay-33545_zzzi4o.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611063800/pexels-steve-397857_n8hqga.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611063800/pexels-steve-397857_n8hqga.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611063800/pexels-steve-397857_n8hqga.jpg' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1611063805/pexels-roberto-shumski-1903702_vtanbj.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1611063805/pexels-roberto-shumski-1903702_vtanbj' , imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1611063805/pexels-roberto-shumski-1903702_vtanbj' },\r\n    { imgUrlLarge: 'https://res.cloudinary.com/basimgs/image/upload/w_1500/v1610712046/pexels-pixabay-2150_mujmra.jpg', imgUrlmedium: 'https://res.cloudinary.com/basimgs/image/upload/w_400/v1610712046/pexels-pixabay-2150_mujmra.jpg', imgUrlSmall: 'https://res.cloudinary.com/basimgs/image/upload/w_150/v1610712046/pexels-pixabay-2150_mujmra.jpg' },\r\n    ]\r\n  }\r\n\r\n\r\n  useImgForBgc = async (imgUrlLarge, imgUrlmedium) => {\r\n    const { currBoard } = this.props\r\n    currBoard.style.backgroundImage = imgUrlLarge\r\n    currBoard.style.backgroundImagePreview = imgUrlmedium\r\n    await this.props.saveBoard(currBoard)\r\n    this.props.toggleMenu()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"board-photos flex justify-center\">\r\n        {this.photos().map((photo, idx) => { return <div key={idx} className=\"menu-img-box\"><img onClick={() => this.useImgForBgc(photo.imgUrlLarge, photo.imgUrlmedium)} className=\"board-photos-grid\" src={photo.imgUrlSmall} alt=\"not good\" /></div>})}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currBoard: state.boardModule.currBoard\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  saveBoard,\r\n\r\n}\r\n\r\nexport const BoardPhotos = connect(mapStateToProps, mapDispatchToProps)(_BoardPhotos)\r\n","import { Component } from 'react'\r\nimport { BoardColors } from './BoardColors.jsx'\r\nimport { BoardPhotos } from './BoardPhotos.jsx'\r\n\r\nexport class ChangeBackground extends Component {\r\n  state = {\r\n    bgcFrom: null\r\n  }\r\n  chooseBgcFrom = (from) => {\r\n    this.setState({ bgcFrom: from })\r\n  }\r\n  render() {\r\n    const { onChangeBackground, toggleMenu } = this.props\r\n    const { bgcFrom } = this.state\r\n    return (\r\n      <>\r\n        <div className=\"change-bgc-back\"><button onClick={onChangeBackground}>back</button></div>\r\n        <div className=\"change-bgc flex justify-center\">\r\n          {/* <div className=\"change-bgc flex space-between\"> */}\r\n          {!bgcFrom &&\r\n            <div className=\"flex align-center\">\r\n              <div className=\"flex column align-center\"><div onClick={() => this.chooseBgcFrom('Photos')} className=\"photos-btn\" ></div>\r\n                <span>Photos</span>\r\n              </div>\r\n              <div className=\"flex column align-center\">\r\n                <div onClick={() => this.chooseBgcFrom('Colors')} className=\"colors-menu-btn\"></div>\r\n                <span>Colors</span></div>\r\n            </div>}\r\n          {bgcFrom === 'Photos' && <BoardPhotos toggleMenu={toggleMenu} />}\r\n          {bgcFrom === 'Colors' && <BoardColors toggleMenu={toggleMenu} />}\r\n\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n","import { Component } from 'react'\r\nimport { ChangeBackground } from './ChangeBackground.jsx'\r\nimport TimeAgo from 'react-timeago'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\nclass _BoardMenu extends Component {\r\n  render() {\r\n    const { toggleMenu, mainRef, onChangeBackground, isChanging, board } = this.props\r\n    return (\r\n      <div className=\"board-menu-screen flex justify-center\" onClick={ev => ev.stopPropagation()} ref={mainRef} style={{ opacity: '0', visibility: 'hidden', width: 0 }}>\r\n\r\n        <section className=\"menu-container\">\r\n          <div className=\"board-menu-header flex space-around\">\r\n            <h3 className=\"board-menu-title\">Menu</h3>\r\n            <h4 className=\"board-menu-close\" onClick={toggleMenu}>✕</h4>\r\n          </div>\r\n\r\n          {!isChanging &&\r\n            <>\r\n              <div className=\"bgc-change flex align-center\">\r\n                <button onClick={onChangeBackground}>Change Background</button>\r\n              </div>\r\n              <div className=\"side-activity-title\" >\r\n                <span>\r\n                  <img className=\"desc-img\" src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/left-align_qaakok.png\" alt=\"\" />\r\n                </span><p> Activity</p></div>\r\n\r\n              <section className=\"activities-wrapper\">\r\n                {board.activities && board.activities.map((activity, idx) => (\r\n                  <div className=\"activity-comment-wrapper flex\" key={idx}>\r\n                    <div className=\"member\">{activity.byMember ? utilService.convertName(activity.byMember.fullname) : 'G'}</div>\r\n\r\n                    <div className=\"activity-comment\">\r\n                      {!activity.toGroup && <p>{activity.byMember ? activity.byMember.fullname : 'Guest'}: {activity.txt}\r\n                        {activity.card?.title} {activity.group?.title}</p>}\r\n\r\n                      {activity.toGroup && <p>{activity.byMember ? activity.byMember.fullname : 'Guest'}: {activity.txt}\r\n                       from {activity.group.title} to {activity.toGroup.title}</p>}\r\n\r\n                      <TimeAgo className=\"activity-time\" date={activity.createdAt} />\r\n                    </div>\r\n                  </div>))}\r\n              </section>\r\n            </>\r\n          }\r\n          {isChanging && <ChangeBackground toggleMenu={toggleMenu} onChangeBackground={onChangeBackground} />}\r\n        </section>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boardModule.currBoard\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  // saveBoard,\r\n  // loadUsers,\r\n}\r\n\r\n\r\n\r\nexport const BoardMenu = connect(mapStateToProps, mapDispatchToProps)(_BoardMenu);","import React, { Component } from 'react'\r\nimport { utilService } from '../../services/utilService'\r\nimport { saveBoard } from '../../store/actions/boardAction'\r\nimport { loadUsers } from '../../store/actions/userAction'\r\nimport { connect } from 'react-redux'\r\nimport { AddMember } from '../AddMember'\r\nimport { BoardMenu } from './BoardMenu'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nexport class _BoardHeader extends Component {\r\n\r\n  state = {\r\n    board: {\r\n      title: ''\r\n    },\r\n    isChanging: false,\r\n    isWrapper: false,\r\n    isMoreMembersShown: false\r\n  }\r\n\r\n  \r\n  componentDidMount() {\r\n    this.props.loadUsers()\r\n    this.setState({ board: { title: this.props.board.title } })\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n\r\n    if (this.props.board.title !== prevProps.board.title) {\r\n      this.setState(prevState => ({\r\n        board: {\r\n          ...prevState.board,\r\n          title: this.props.board.title\r\n        }\r\n      }))\r\n    }\r\n\r\n  }\r\n\r\n\r\n  toggleMenu = () => {\r\n    const { current } = this.boardMenuVisibility\r\n    if (current.style.opacity === '0') {\r\n      current.style.opacity = '1'\r\n      current.style.visibility = 'visible'\r\n      current.style.width = '339px'\r\n\r\n    } else if (current.style.opacity === '1') {\r\n      current.style.opacity = '0'\r\n      current.style.visibility = 'hidden'\r\n      current.style.width = '0'\r\n    }\r\n    this.setState({ isChanging: false, isWrapper: !this.state.isWrapper })\r\n  }\r\n  onChangeBackground = () => {\r\n    this.setState({ isChanging: !this.state.isChanging })\r\n  }\r\n\r\n  boardMenuVisibility = React.createRef()\r\n\r\n  handleInput = ({ target }) => {\r\n    const { name } = target\r\n    const value = target.value\r\n    this.setState(prevState => {\r\n      return {\r\n        board: {\r\n          ...prevState.board,\r\n          [name]: value\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  onSaveTitle = async (ev) => {\r\n    ev.preventDefault()\r\n    const { board } = this.props\r\n    const { title } = this.state.board\r\n    board.title = title\r\n    await this.props.saveBoard(board)\r\n  }\r\n\r\n  toggleMembers = () => {\r\n    this.setState({ isMoreMembersShown: !this.state.isMoreMembersShown })\r\n  }\r\n\r\n  onUpdateMembers = async (member) => {\r\n    const { board } = this.props\r\n    const memberIdx = board.members.findIndex(currMember => currMember._id === member._id)\r\n    if (memberIdx > -1) {\r\n      board.members.splice(memberIdx, 1)\r\n    } else {\r\n      board.members.push(member)\r\n    }\r\n    await this.props.saveBoard(board)\r\n  }\r\n\r\n  onSetUserFilter = (filterBy) => {\r\n    console.log('filtermember by', filterBy)\r\n    // this.props.setUserFilter(filterBy)\r\n    // this.props.loadUsers(filterBy)\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    const { members, users } = this.props\r\n    const { board, isChanging, isWrapper, isMoreMembersShown } = this.state\r\n    const currBoardId = this.props.board._id\r\n    if (!board && !currBoardId) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={400} width={400} timeout={3000} /></div>\r\n    return (\r\n      <>\r\n        {isMoreMembersShown && <div className=\"board-header-member-box\"><AddMember toggleMembers={this.toggleMembers} onUpdateMembers={this.onUpdateMembers}\r\n          onSetUserFilter={this.onSetUserFilter} members={members} users={users} /></div>}\r\n        <header className=\"board-header flex space-between\">\r\n          <div className=\"header-options flex\">\r\n            {/* <h2>{title}</h2> */}\r\n            <form onSubmit={this.onSaveTitle} onBlur={this.onSaveTitle} className=\"board-title-form flex space-between\">\r\n              <input type=\"text\" name=\"title\" value={board.title} onChange={this.handleInput}\r\n                className=\"board-title-input\" placeholder=\"Enter board title...\" autoComplete=\"off\" />\r\n            </form>\r\n            <Link to={`/board/${currBoardId}/dashboard`}>\r\n              <button className=\"board-header-btn flex space-around\">\r\n                <h3>Statistics</h3>\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610626728/pie-chart_fnvwct.png\" alt=\"\" />\r\n              </button>\r\n            </Link>\r\n            <div className=\"header-members flex\">\r\n              <ul className=\"member-list flex\">\r\n                <TransitionGroup className=\"members-list flex\">\r\n                  {members.map((member, idx) =>\r\n                    <CSSTransition key={idx} timeout={500} classNames=\"item\">\r\n                      <li key={member.fullname} className=\"header-member\" style={{ backgroundColor: member.color ? member.color : \"#3f72af\" }}>\r\n                        {utilService.convertName(member.fullname)}\r\n                      </li>\r\n                    </CSSTransition>\r\n                  )}\r\n                </TransitionGroup>\r\n              </ul>\r\n              <button className=\"add-member\" onClick={this.toggleMembers}>\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625640/add-user_qxgidw.png\" alt=\"\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* <BoardFilter /> */}\r\n          <BoardMenu\r\n            toggleMenu={this.toggleMenu}\r\n            mainRef={this.boardMenuVisibility}\r\n            onChangeBackground={this.onChangeBackground}\r\n            isChanging={isChanging}\r\n          />\r\n\r\n\r\n          {isWrapper && <div className=\"board-menu-wrapper\" onClick={(isWrapper) ? this.toggleMenu : () => { return }}>\r\n          </div>}\r\n          <button className=\"menu-btn\" onClick={this.toggleMenu}><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610637597/menu_btis53.png\" alt=\"\" /></button>\r\n        </header>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n    users: state.userModule.users\r\n    // filterBy: state.boardModule.filterBy,\r\n    // loggedInUser: state.userModule.loggedInUser,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  saveBoard,\r\n  loadUsers,\r\n}\r\n\r\n\r\n\r\nexport const BoardHeader = connect(mapStateToProps, mapDispatchToProps)(_BoardHeader);","import React, { Component } from 'react'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\nexport class GroupAdd extends Component {\r\n\r\n    state = {\r\n        isAddOpen: false,\r\n        group: {\r\n            title: ''\r\n        }\r\n    }\r\n\r\n    openInput = () => {\r\n        this.setState({\r\n            isAddOpen: true\r\n        })\r\n    }\r\n\r\n    closeInput = () => {\r\n        this.setState({\r\n            isAddOpen: false\r\n        })\r\n    }\r\n\r\n    onSaveGroup = (ev) => {\r\n        ev.preventDefault()\r\n        const group = { title: this.state.group.title, id: utilService.makeId(), cards: [] }\r\n        this.props.onAddGroup(group)\r\n        this.setState(\r\n            {\r\n                group: { title: '' },\r\n                isAddOpen: false\r\n            }, () => this.props.onScroll(null, 280))\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const { name } = target\r\n        const { value } = target\r\n        this.setState(prevState => {\r\n            return {\r\n                group: {\r\n                    ...prevState.group,\r\n                    [name]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isAddOpen, group } = this.state\r\n        return <section className=\"add-group-container\">\r\n            {isAddOpen &&\r\n                <form onSubmit={this.onSaveGroup} className=\"new-group-form\">\r\n                    <input type=\"text\" name=\"title\" value={group.title} onChange={this.handleInput}\r\n                        className=\"my-input\" placeholder=\"Enter group title...\" autoFocus autoComplete=\"off\" />\r\n                    <div>\r\n                        <button className=\"submit-group-btn\">Add group</button>\r\n                        <button onClick={this.closeInput} className=\"close-input-btn\" ><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610646476/close_voj9v3.png\" alt=\"\" /></button>\r\n                    </div>\r\n                </form>\r\n            }\r\n            {!isAddOpen && <button className=\"add-group-btn\" onClick={this.openInput}>\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/plus_ljzrkm.png\" alt=\"\" />\r\n                <span>Add another group</span></button>}\r\n        </section>\r\n    }\r\n}\r\n","function on(eventName, listener) {\r\n  const callListener = ({ detail }) => {\r\n      listener(detail)\r\n  }\r\n  window.addEventListener(eventName, callListener)\r\n  return () => {\r\n      window.removeEventListener(eventName, callListener)\r\n  }\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\n\r\nexport const eventBusService = { on, emit }","export function setCard(card) {\r\n  return (dispatch) => {\r\n    try {\r\n      dispatch({ type: 'SET_CARD', card })\r\n\r\n    } catch (err) {\r\n      console.log('err cardAction SET CARD', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function setGroup(group) {\r\n  return (dispatch) => {\r\n    try {\r\n      dispatch({ type: 'SET_GROUP', group })\r\n    } catch (err) {\r\n      console.log('err cardAction SET GROUP', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function clearState(clear) {\r\n  return (dispatch) => {\r\n    try {\r\n      dispatch({ type: 'CLEAR_STATE', clear })\r\n    } catch (err) {\r\n      console.log('err cardAction CLEAR STATE', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function toggleAddCard(isAddOpen) {\r\n  return (dispatch) => {\r\n    try {\r\n      dispatch({ type: 'TOGGLE_ADD_CARD', isAddOpen })\r\n    } catch (err) {\r\n      console.log('err cardAction CLEAR STATE', err);\r\n    }\r\n  }\r\n}\r\n\r\n// export function addLabel(label) {\r\n//   return (dispatch) => {\r\n//     try {\r\n//       dispatch({ type: 'ADD_LABEL', label })\r\n//     } catch (err) {\r\n//       console.log('err cardAction CLEAR STATE', err);\r\n//     }\r\n//   }\r\n// }\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport class CardPreviewLabel extends Component {\r\n    state = {\r\n        isLableTitleShown: false\r\n    }\r\n\r\n    toggleLableTitle = (ev) => {\r\n        ev.stopPropagation()\r\n        this.setState({ isLableTitleShown: !this.state.isLableTitleShown })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { card } = this.props\r\n        const { isLableTitleShown } = this.state\r\n        return (\r\n            <div>\r\n                {card.labels && <div className=\"label-container flex\">\r\n                    {card.labels.map(label => {\r\n                        return <div key={label.id} style={{ backgroundColor: label.color }} className={isLableTitleShown ? 'card-label open' : 'card-label'} onClick={this.toggleLableTitle}>\r\n                            {isLableTitleShown && label.title}\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { utilService } from '../../services/utilService'\r\n\r\nexport function CardPreviewBottom({ card }) {\r\n    \r\n    const progress = utilService.getTodoProgress(card)\r\n    // const iconsMap = [\r\n    //     { dueDate: \"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" },\r\n    //     {comments: \"https://res.cloudinary.com/basimgs/image/upload/v1610704026/messenger_ypya0t.png\"},\r\n    //     {checklist: \"https://res.cloudinary.com/basimgs/image/upload/v1610625361/check-box_pzd2ul.png\"}\r\n    // ]\r\n\r\n    // const content = [\r\n    //     { dueDate: utilService.getDueDate(card.dueDate) },\r\n    //     {comments: card.comments?.length},\r\n    //     {checklist: progress?.done/progress?.total},\r\n    //     {members: card.members?.map(member => {\r\n    //         return <div key={member.fullname} className=\"member\">\r\n    //             {utilService.convertName(member.fullname)}\r\n    //         </div>\r\n    //     })}\r\n    // ]\r\n\r\n        \r\n        // {\r\n        //     card[type] && <div className={`${type}-container flex`}>\r\n        //         <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"\" />\r\n        //         <p className=\"date\">{utilService.getDueDate(card.dueDate)}</p></div>\r\n        // }\r\n\r\n\r\n    return (\r\n        <div className=\"card-extras-container flex space-between\">\r\n            {/* { Object.keys(card).map((prop, idx) => {\r\n                return < CardPreviewFeature key={idx} card={ card } type = { prop } src = { iconsMap.prop } content = { content.prop } />\r\n            })} */}\r\n            {card.dueDate && <div className={card.dueDate < Date.now()? 'dueDate-container red flex':'dueDate-container flex'}>\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"\" />\r\n                <p className=\"dueDate\">{utilService.getDueDate(card.dueDate)}</p></div>}\r\n            {card.comments && <div className=\"comments-container flex\">\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610704026/messenger_ypya0t.png\" alt=\"\" />\r\n                <p className=\"comments\">{card.comments.length}</p></div>}\r\n            {card.checklist && <div className={(progress.done===progress.total)? 'check-list-container complete flex' : 'chec-klist-container flex'}>\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/check-box_pzd2ul.png\" alt=\"\" />\r\n                <p className=\"chec-klist\">{progress.done}/{progress.total}</p></div>}\r\n            {card.members && <div className=\"preview-members-container flex\">\r\n                {card.members.map(member => {\r\n                    return <div key={member.fullname} className=\"member\" style={{backgroundColor: member.color? member.color: \"#3f72af\"}}>\r\n                        {utilService.convertName(member.fullname)}\r\n                    </div>\r\n                })}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { Component } from 'react'\r\nimport { Draggable } from \"react-beautiful-dnd\"\r\nimport { connect } from 'react-redux'\r\nimport { eventBusService } from '../../services/eventBusService.js'\r\nimport { setCard, setGroup } from '../../store/actions/cardAction.js'\r\nimport { CardPreviewLabel } from './CardPreviewLabel'\r\nimport { CardPreviewBottom } from './CardPreviewBottom'\r\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd'\r\nimport { utilService } from '../../services/utilService.js'\r\n\r\nexport class _CardPreview extends Component {\r\n    onShowCard = (card, group) => {\r\n        this.props.setCard(card)\r\n        this.props.setGroup(group)\r\n        eventBusService.emit('show-details', true)\r\n    }\r\n\r\n    showPreviewDetails = (ev, card, group) => {\r\n        const PreviewDetailsSize = { width: 420, height: 210 }\r\n        const newClientPos = utilService.getSpaceCalculatedPos(ev, PreviewDetailsSize)\r\n        const pos = { ev, newClientPos }\r\n\r\n        this.props.setCard(card)\r\n        this.props.setGroup(group)\r\n        ev.stopPropagation()\r\n        eventBusService.emit('show-preview-details', pos, true)\r\n    }\r\n    \r\n    render() {\r\n        const { card, index, group } = this.props\r\n        return (\r\n            <div className=\"card-preview\" onClick={() => this.onShowCard(card, group)}>\r\n                <Draggable key={card.id} draggableId={card.id} index={index}>\r\n                    {(provided, snapshot) => (\r\n                        <NaturalDragAnimation\r\n                            style={provided.draggableProps.style}\r\n                            snapshot={snapshot}\r\n                        >\r\n                            {style => (\r\n                                <article className=\"card-preview\"\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}\r\n                                    style={getItemStyle(snapshot.isDragging, provided.draggableProps.style, style, snapshot.isDraggingOver)}\r\n                                >\r\n                                    <button className=\"show-preview-details-btn\" onClick={(ev) => this.showPreviewDetails(ev, card, group)}><img className=\"show-preview-details-pen\" src=\"https://res.cloudinary.com/basimgs/image/upload/v1610873061/pen_lgmg47.png\" alt=\"pen\" /></button>\r\n                                    {card.style && (card.style.imgUrl ? <div className=\"card-img-cover\" style={{ backgroundImage: `url(${card.style.imgUrl}` }} ></div>\r\n                                        : <div className=\"card-color-cover\" style={{ backgroundColor: card.style.color }}></div>)}\r\n                                    <div className=\"lower-card\">\r\n                                        <CardPreviewLabel card={card} />\r\n                                        <div className=\"flex space-between\">\r\n                                            <pre>{card.title}</pre>\r\n\r\n                                        </div>\r\n                                        <CardPreviewBottom card={card} />\r\n                                    </div>\r\n                                </article>\r\n                            )}\r\n                        </NaturalDragAnimation>\r\n                    )}\r\n                </Draggable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst getItemStyle = (isDragging, draggableStyle, style, isDraggingOver) => ({\r\n    userSelect: 'none',\r\n    padding: '0',\r\n\r\n    margin: '0 4px 8px 3px',\r\n    borderRadius: '3px',\r\n    background: isDragging ? '##e4e0e0' : 'white',\r\n    // background: isDraggingOver ? 'black' : 'green',\r\n    boxShadow: `0 1px 0 rgba(9, 30, 66, 0.25)`,\r\n    ...draggableStyle,\r\n    ...style\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currCard: state.cardModule.currCard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setCard,\r\n    setGroup\r\n}\r\n\r\nexport const CardPreview = connect(mapStateToProps, mapDispatchToProps)(_CardPreview);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { eventBusService } from '../../services/eventBusService'\r\nimport { utilService } from '../../services/utilService'\r\nimport { toggleAddCard } from '../../store/actions/cardAction.js'\r\n\r\nexport class CardAddForm extends Component {\r\n  state = {\r\n    card: {\r\n      title: ''\r\n    },\r\n    isAddOpen: false,\r\n    groupId: null\r\n  }\r\n  componentDidMount() {\r\n    this.eventBusTerminate = eventBusService.on('open-card-add', this.openCardAdd)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.eventBusTerminate()\r\n  }\r\n\r\n  openCardAdd = ({ isAddOpen, groupId }) => {\r\n    if (this.props.groupId === groupId)\r\n      this.setState({ isAddOpen: isAddOpen, groupId })\r\n  }\r\n\r\n  handleInput = ({ target }) => {\r\n    const { name } = target\r\n    const { value } = target\r\n    this.setState(prevState => {\r\n      return {\r\n        card: {\r\n          ...prevState.card,\r\n          [name]: value\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  closeInput = () => {\r\n    this.setState({ isAddOpen: false, card: { title: '' } }, () => {\r\n      eventBusService.emit('close-card-add', false, this.state.groupId)\r\n      setTimeout(() => {\r\n        this.props.onScroll(null, 1000)\r\n      }, 150)\r\n    })\r\n  }\r\n\r\n  onSaveCard = (ev) => {\r\n    ev.preventDefault()\r\n    if (!this.state.card.title) return\r\n    const card = { title: this.state.card.title, id: utilService.makeId(), members: [], labels: [] }\r\n    this.props.onAddCard(card, this.props.groupId)\r\n    this.closeInput()\r\n  }\r\n\r\n  render() {\r\n    const { isAddOpen, card } = this.state\r\n    return (\r\n      <div className=\"add-card-container\">\r\n        { isAddOpen &&\r\n          <form onSubmit={(ev) => { ev.preventDefault(); return }} className=\"new-card-form\" >\r\n            <textarea type=\"text\" name=\"title\" value={card.title} onChange={this.handleInput} onBlur={this.closeInput}\r\n              className=\"my-input\" placeholder=\"Enter a card title...\" autoFocus required\r\n              cols=\"35\" rows=\"4\"></textarea>\r\n            <div className=\"flex\" style={{ marginTop: 5 }}>\r\n              <button type=\"submit\" onMouseDown={this.onSaveCard} className=\"submit-card-btn\">Add card</button>\r\n              <button onMouseDown={this.closeInput} className=\"close-input-btn\" >\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610646476/close_voj9v3.png\" alt=\"\" />\r\n              </button>\r\n            </div>\r\n          </form>\r\n        }\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import { Droppable } from 'react-beautiful-dnd'\r\nimport { CardPreview } from './CardPreview.jsx'\r\nimport { Component } from 'react'\r\nimport Loader from 'react-loader-spinner'\r\nimport { CardAddForm } from './CardAddForm.jsx'\r\n\r\n\r\nexport class CardList extends Component {\r\n    state = {\r\n        scrollTop: 0\r\n    }\r\n\r\n    // refCard = React.createRef()\r\n    getListStyle = isDraggingOver => ({\r\n        // padding: 5,\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        paddingLeft: 5,\r\n        position: \"relative\",\r\n        // backgroundColor: (isDraggingOver) ? 'lightgray' : 'unset'\r\n    })\r\n\r\n    // onScroll = (ev, scrolltobottom = 0) => {\r\n    //     if (!scrolltobottom) return\r\n    //     const scrollTop = this.refCard.current.scrollTop\r\n    //     this.setState({\r\n    //         scrollTop: scrollTop\r\n    //     }, () => {\r\n    //         if (scrolltobottom)\r\n    //             this.props.ref.current.scrollTop = this.props.ref.current.scrollTop + scrolltobottom\r\n    //     })\r\n    // }\r\n    render() {\r\n        const { cards, id, groupTitle, group, onAddCard } = this.props\r\n        if (!cards) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={400} width={400} timeout={3000} /></div>\r\n\r\n        return (\r\n            // <div className=\"card-list\" ref={this.refCard} onScroll={this.props.onScroll}>\r\n            <div className=\"card-list\" ref={this.props.refs} onScroll={this.props.onScroll}>\r\n                <Droppable droppableId={group.id} type=\"card\">\r\n                    {(provided, snapshot) => (\r\n                        <div ref={provided.innerRef} style={this.getListStyle(snapshot.isDraggingOver)}\r\n                            {...provided.droppableProps}>\r\n                            {cards.map((card, index) =>\r\n\r\n                                <CardPreview key={card.id} card={card} group={group}\r\n                                    index={index} groupId={id} groupTitle={groupTitle} />\r\n                            )}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n                <CardAddForm onAddCard={onAddCard} groupId={group.id} onScroll={this.props.onScroll} />\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { loadBoard, saveBoard } from '../../store/actions/boardAction'\r\nimport { setGroup } from '../../store/actions/cardAction'\r\nimport { connect } from 'react-redux'\r\nimport { eventBusService } from '../../services/eventBusService.js'\r\nexport class _GroupTitle extends Component {\r\n\r\n    state = {\r\n        groupIdx: null,\r\n        group: {\r\n            title: ''\r\n        }\r\n    }\r\n    textInput = React.createRef()\r\n\r\n    componentDidMount() {\r\n        const groupId = this.props.group.id\r\n        const { board, group } = this.props\r\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n\r\n        this.setState({ groupIdx, group: { title: group.title } })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        if (this.props.group.title !== prevProps.group.title) {\r\n            this.setState(prevState => ({\r\n                group: {\r\n                    ...prevState.group,\r\n                    title: this.props.group.title\r\n                }\r\n            }))\r\n        }\r\n\r\n    }\r\n\r\n    handleInput = ({ target }) => {\r\n        const { name } = target\r\n        const value = target.value\r\n        console.log('target.value', value, name)\r\n        this.setState(prevState => {\r\n            return {\r\n                group: {\r\n                    ...prevState.group,\r\n                    [name]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    onSaveTitle = async (ev) => {\r\n        ev.preventDefault()\r\n        const groupId = this.props.group.id\r\n        const board = { ...this.props.board }\r\n        // console.log('board from title', board)\r\n        const { title } = this.state.group\r\n        const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n        board.groups[groupIdx].title = title\r\n        await this.props.updateBoard(board)\r\n        this.setState({ groupIdx: null })\r\n    }\r\n\r\n    showGroupMenu = (ev) => {\r\n        const { group } = this.props\r\n        this.props.setGroup(group)\r\n        // console.log('curr group', group)\r\n        ev.stopPropagation()\r\n        eventBusService.emit('show-group-menu', ev, true)\r\n    }\r\n\r\n    render() {\r\n        const { group } = this.state\r\n        // console.log('GROUP_TITLE:', group.title);\r\n        return <section className=\"group-title\" {...this.props.dragHandle}>\r\n            <form onSubmit={this.onSaveTitle} ref={this.textInput} {...this.props.dragHandle} className=\"title-form flex space-between\">\r\n                {/* <input type=\"text\" ref={this.textInput} name=\"title\" value={group.title} onChange={this.handleInput} */}\r\n                {/* <TextField id=\"standard-basic\" label=\"Standard\" /> */}\r\n                <input type=\"text\" name=\"title\" value={group.title} onChange={this.handleInput}\r\n                    className=\"title-input\" placeholder=\"Enter group title...\" autoComplete=\"off\" onBlur={this.onSaveTitle} />\r\n                <button className=\"more-options-btn\" onClick={(ev) => this.showGroupMenu(ev)}><img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/more_e8mezf.png\" alt=\"\" /></button>\r\n            </form>\r\n        </section>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        // filterBy: state.boardModule.filterBy,\r\n        // loggedInUser: state.userModule.loggedInUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    saveBoard,\r\n    setGroup\r\n}\r\n\r\n\r\n\r\nexport const GroupTitle = connect(mapStateToProps, mapDispatchToProps)(_GroupTitle);","import { Component } from 'react'\r\nimport { utilService } from '../../services/utilService.js'\r\nimport { connect } from 'react-redux'\r\nimport { toggleAddCard } from '../../store/actions/cardAction.js'\r\nimport { eventBusService } from '../../services/eventBusService.js'\r\n\r\nexport class CardAdd extends Component {\r\n    state = {\r\n        isAddOpen: false,\r\n    }\r\n    componentDidMount() {\r\n        this.eventBusTerminate = eventBusService.on('close-card-add', this.closeInput)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.eventBusTerminate()\r\n    }\r\n    openInput = () => {\r\n        this.setState({ isAddOpen: true }, () => {\r\n            this.props.onScroll(null, 1000)\r\n            eventBusService.emit('open-card-add', { isAddOpen: true, groupId: this.props.groupId })\r\n        })\r\n    }\r\n\r\n    closeInput = ({ groupId }) => {\r\n        this.setState({ isAddOpen: false }, () => setTimeout(() => {\r\n            if (this.props.groupId === groupId)\r\n                this.props.onScroll(null, 1000)\r\n        }, 150))\r\n    }\r\n\r\n    render() {\r\n        const { isAddOpen } = this.state\r\n        return (\r\n            <section className=\"add-card-container\" >\r\n                {/* {isAddOpen &&\r\n                    <form onSubmit={() => { return }} className=\"new-card-form\">\r\n                        <textarea type=\"text\" name=\"title\" value={card.title} onChange={this.handleInput}\r\n                            className=\"my-input\" placeholder=\"Enter a card title...\" autoFocus required\r\n                            cols=\"35\" rows=\"4\"></textarea>\r\n                        <div className=\"flex\">\r\n                            <button type=\"submit\" onMouseDown={this.onSaveCard} className=\"submit-card-btn\">Add card</button>\r\n                            <button onClick={this.closeInput} className=\"close-input-btn\" >\r\n                                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610646476/close_voj9v3.png\" alt=\"\" />\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                } */}\r\n                {/* {isAddOpen && <div style={{ height: 45 }}></div>} */}\r\n                {!isAddOpen && <button className=\"add-card-btn\" onClick={this.openInput}>\r\n                    <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625350/plus_ljzrkm.png\" alt=\"\" />\r\n                    <span>Add another card</span></button>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { CardList } from '../Card/CardList.jsx'\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { GroupTitle } from './GroupTitle';\r\nimport { CardAdd } from '../Card/CardAdd.jsx';\r\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd'\r\n\r\nexport class GroupPreview extends Component {\r\n    state = {\r\n        scrollTop: 0\r\n    }\r\n    refCard = React.createRef()\r\n\r\n    onScroll = (ev, scrolltobottom = 0) => {\r\n        if (!scrolltobottom) return\r\n        const scrollTop = this.refCard.current.scrollTop\r\n        this.setState({\r\n            scrollTop: scrollTop\r\n        }, () => {\r\n            if (scrolltobottom)\r\n                this.refCard.current.scrollTop = this.refCard.current.scrollTop + scrolltobottom\r\n        })\r\n    }\r\n    render() {\r\n        const { group, idx, onAddCard, updateBoard } = this.props\r\n        return (\r\n            <Draggable draggableId={group.id} index={idx} >\r\n                {(provided, snapshot) => (\r\n                    <NaturalDragAnimation\r\n                        style={provided.draggableProps.style}\r\n                        snapshot={snapshot}\r\n                    >\r\n                        {style => (\r\n                            <div>\r\n                                <article className=\"group-preview\" {...provided.draggableProps}\r\n                                    style={getItemStyle(snapshot.isDragging, provided.draggableProps.style, style)}\r\n                                    ref={provided.innerRef}>\r\n                                    <div  {...provided.dragHandleProps} style={{ width: 272, height: '0.8rem' }}>\r\n                                    </div>\r\n                                    <GroupTitle updateBoard={updateBoard} group={group} dragHandle={provided.dragHandleProps} />\r\n                                    <CardList refs={this.refCard} cards={group.cards}\r\n                                        id={idx} group={group} onScroll={this.onScroll}\r\n                                        grpTitle={group.title} groupId={group.id} onAddCard={onAddCard} />\r\n                                    <CardAdd groupId={group.id} onScroll={this.onScroll} />\r\n                                </article>\r\n                            </div>\r\n                        )}\r\n                    </NaturalDragAnimation>\r\n                )}\r\n            </Draggable>\r\n        )\r\n    }\r\n}\r\nconst getItemStyle = (isDragging, draggableStyle, style) => ({\r\n    // userSelect: 'none',\r\n    // padding: 8,\r\n    margin: `0 8px 0 0`,\r\n    ...draggableStyle,\r\n    ...style\r\n});","import { GroupAdd } from './GroupAdd.jsx';\r\nimport { GroupPreview } from './GroupPreview.jsx'\r\n\r\nexport function GroupList({ groups, onAddCard, onAddGroup, onScroll, updateBoard }) {\r\n    return (\r\n        <div className=\"group-list\">\r\n            {groups.map((group, idx) =>\r\n                <GroupPreview updateBoard={updateBoard} key={group.id} group={group} idx={idx} onAddCard={onAddCard} />\r\n            )}\r\n            <GroupAdd onAddGroup={onAddGroup} onScroll={onScroll} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../../store/actions/boardAction'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { utilService } from '../../services/utilService'\r\n\r\nclass _GroupMenu extends Component {\r\n    state = {\r\n        group: null,\r\n        userClicked: null,\r\n        mounted: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.setState({ card: this.props.card }, () => console.log(this.state.card))\r\n        this.setState({ group: this.props.group, userClicked: this.props?.userClicked, mounted: true })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({\r\n            group: null,\r\n            userClicked: null,\r\n        })\r\n    }\r\n\r\n\r\n    onClose = () => {\r\n        this.setState({ mounted: false })\r\n    }\r\n\r\n\r\n    onRemoveGroup = () => {\r\n        const copyBoard = { ...this.props.board }\r\n        const { group } = this.state\r\n        const groupIdx = copyBoard.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n        copyBoard.groups.splice(groupIdx, 1)\r\n        this.props.saveBoard(copyBoard)\r\n        this.onClose()\r\n    }\r\n\r\n    onAddCard = () => {\r\n        console.log('not working yet');\r\n    }\r\n\r\n    onCopyGroup = async () => {\r\n        const copyBoard = {...this.props.board}\r\n        const { group } = this.state\r\n        const groupIdx = copyBoard.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n        const copyGroup = {...group, id: utilService.makeId()}\r\n        copyBoard.groups.splice(groupIdx, 0, copyGroup)\r\n        await this.props.saveBoard(copyBoard)\r\n        this.onClose()\r\n    }\r\n\r\n\r\n    render() {\r\n        const { userClicked, group, mounted } = this.state\r\n        if (!group) return <div>Loading...</div>\r\n        return (\r\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.showGroupMenu}>\r\n            <div className=\"group-menu flex column\" style={{\r\n                position: 'absolute',\r\n                zIndex: 1000, top: userClicked?.y + 10, left: userClicked?.x - 150\r\n            }}>\r\n                <div className=\"group-actions flex spase-between\">\r\n                    <h3>Group Actions</h3>\r\n                    <button onClick={this.onClose} className=\"group-close-btn\">✕</button>\r\n                </div>\r\n                <div className=\"group-menu-btns flex column\">\r\n                    <button className=\"group-menu-btn\" onClick={this.onAddCard}>\r\n                    Add Card...</button>\r\n                    <button className=\"group-menu-btn\" onClick={this.onCopyGroup}>\r\n                    Copy Group...</button>\r\n                    <button className=\"group-menu-btn\" onClick={this.onRemoveGroup}>\r\n                    Delete Group...</button>\r\n                    <button className=\"group-menu-btn\">\r\n                    Watch...</button>\r\n                    <hr/>\r\n                    <button className=\"group-menu-btn\">\r\n                    Sort By...</button>\r\n                    <hr/>\r\n                    <button className=\"group-menu-btn\">\r\n                    Move All Cards In This List...</button>\r\n                    <button className=\"group-menu-btn\">\r\n                    Archive All Cards in this List...</button>\r\n\r\n                </div>\r\n            </div>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    board: state.boardModule.currBoard,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\nexport const GroupMenu = connect(mapStateToProps, mapDispatchToProps)(_GroupMenu)\r\n","export function CardHeader({ card, onHandleInputChange, group }) {\r\n  return (\r\n    <div className=\"card-header\"> \r\n      <div className=\"card-title-area flex\">\r\n        <img className=\"card-title-img\" src=\"https://res.cloudinary.com/basimgs/image/upload/v1610782307/document-header_xtqrpy.png\" alt=\"\" />\r\n        <textarea\r\n          className=\"title-textarea my-input\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={card.title}\r\n          onChange={onHandleInputChange}\r\n          placeholder={card.title}\r\n          spellCheck=\"false\"\r\n        />\r\n      </div>\r\n      <p className=\"card-title-p\">In list {group.title}</p>\r\n    </div>)\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/utilService'\r\nimport TimeAgo from 'react-timeago'\r\nimport { socketService } from '../../services/socketService'\r\n\r\nclass _CardActivityContainer extends Component {\r\n\r\n  state = {\r\n    comments: null,\r\n    isSaveOpen: false,\r\n    newComment: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    // socketService.setup()\r\n\r\n    // socketService.on('commented', (cmt) => {\r\n    //   console.log('cmt', cmt)\r\n    // }) \r\n\r\n    const { comments } = this.props.card\r\n    this.setState({ comments })\r\n  }\r\n\r\n  onHandleCommentChange = ({ target }) => {\r\n    const { value } = target\r\n    if (value) this.onToggleIsSaveOpen(true)\r\n    else this.onToggleIsSaveOpen(false)\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        newComment: value\r\n      }\r\n    })\r\n  }\r\n\r\n  onToggleIsSaveOpen = (isOpen) => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        isSaveOpen: isOpen\r\n      }\r\n    })\r\n  }\r\n\r\n  createComment = () => {\r\n    const { newComment } = this.state\r\n    const loggedInUser = this.props.loggedInUser\r\n    let byMember = null;\r\n\r\n    if (loggedInUser) {\r\n      byMember = {\r\n        _id: loggedInUser._id,\r\n        fullname: loggedInUser.fullname,\r\n        imgUrl: loggedInUser.imgUrl\r\n      }\r\n    }\r\n\r\n    return {\r\n      id: utilService.makeId(),\r\n      txt: newComment,\r\n      createdAt: Date.now(),\r\n      byMember\r\n    }\r\n  }\r\n\r\n  onSaveNewComment = () => {\r\n\r\n    const comment = this.createComment()\r\n    let commentsCopy = this.state.comments\r\n    if (commentsCopy) commentsCopy.unshift(comment)\r\n    else commentsCopy = new Array(comment)\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        comments: commentsCopy\r\n      }\r\n    }, () => {\r\n      this.props.onHandleActivitiesChange(this.state.comments)\r\n      this.setState(prevState => {\r\n        return {\r\n          ...prevState,\r\n          newComment: '',\r\n          isSaveOpen: false\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { newComment, isSaveOpen, comments } = this.state\r\n    const loggedInUser = this.props.loggedInUser\r\n    return (\r\n      <div className=\"activity-container\">\r\n        <div className=\"activity-header flex\">\r\n          <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610792909/menu_1_o2l8cs.png\" alt=\"\" />\r\n          <h3>Activity</h3>\r\n        </div>\r\n        <div className=\"flex column\">\r\n          <div className=\"flex\">\r\n            <div className=\"member\">\r\n              {loggedInUser ? utilService.convertName(loggedInUser.fullname) : 'G'}\r\n            </div>\r\n            <textarea\r\n              className=\"activity-textarea\"\r\n              type=\"text\"\r\n              name=\"txt\"\r\n              value={newComment}\r\n              onChange={this.onHandleCommentChange}\r\n              placeholder=\"Write a comment...\"\r\n            />\r\n          </div>\r\n          {isSaveOpen && <button className=\"save-btn\" onMouseDown={this.onSaveNewComment} >Save</button>}\r\n        </div>\r\n        {comments && comments.map((comment, index) => {\r\n          return <div key={index} className=\"activity-comment-wrapper flex\">\r\n            <div className=\"member\">\r\n              {comment.byMember ? utilService.convertName(comment.byMember.fullname) : 'G'}\r\n            </div>\r\n            <div className=\"activity-comment\">\r\n              <p>{loggedInUser ? loggedInUser.fullname : 'Guest'}: {comment.txt}</p>\r\n              <TimeAgo className=\"activity-time\" date={comment.createdAt} />\r\n            </div>\r\n          </div>\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// TODO: loggedInUser\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const CardActivityContainer = connect(mapStateToProps, mapDispatchToProps)(_CardActivityContainer)","import { utilService } from \"./utilService\"\r\n\r\nexport const cardService = {\r\n  createTodo,\r\n  createChecklist\r\n}\r\n\r\nfunction createTodo(title) {\r\n  return {\r\n    id: utilService.makeId(),\r\n    title,\r\n    isDone: false\r\n  }\r\n}\r\n\r\nfunction createChecklist() {\r\n  return {\r\n    id: utilService.makeId(),\r\n    title: '',\r\n    todos: [createTodo('')]\r\n  }\r\n}\r\n\r\n\r\n","import { Component } from 'react'\r\nimport { cardService } from '../../services/cardService'\r\n// import { on, emit } from '../services/eventBusService.js'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nexport class CardChecklist extends Component {\r\n  state = {\r\n    checklist: null,\r\n    isAddOpen: false,\r\n    newTodoTitle: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { checklist } = this.props.card\r\n    this.setState({ checklist })\r\n  }\r\n\r\n  onHandleTitleChange = ({ target }) => {\r\n    const { value, name } = target\r\n\r\n    this.setState(prevState => ({\r\n      checklist: {\r\n        ...prevState.checklist,\r\n        [name]: value\r\n      }\r\n    }), () => this.props.onHandleChecklistChange(this.state.checklist))\r\n  }\r\n\r\n  onHandleTodosChange = (ev, todo) => {\r\n    const { todos } = this.state.checklist\r\n    const value = ev.target.type === 'checkbox' ? ev.target.checked : ev.target.value\r\n    const { name } = ev.target\r\n    todo[name] = value\r\n\r\n    const updatedTodos = [...todos]\r\n\r\n    this.saveTodos(updatedTodos)\r\n  }\r\n\r\n  onRemoveTodo = (idx) => {\r\n    if (this.state.checklist.todos.length === 1) this.props.addOrCancelChecklist(null)\r\n\r\n    const todosCopy = [...this.state.checklist.todos]\r\n    todosCopy.splice(idx, 1)\r\n    this.saveTodos(todosCopy)\r\n  }\r\n\r\n  saveNewTodo = () => {\r\n    const { todos } = this.state.checklist\r\n    const { newTodoTitle } = this.state\r\n    let todosCopy = [...todos]\r\n\r\n    const todoToSave = cardService.createTodo(newTodoTitle)\r\n    todosCopy.push(todoToSave)\r\n\r\n    this.saveTodos(todosCopy)\r\n  }\r\n\r\n  saveTodos = (updatedTodos) => {\r\n    this.setState(prevState => ({\r\n      checklist: {\r\n        ...prevState.checklist,\r\n        todos: [...updatedTodos]\r\n      },\r\n      newTodoTitle: ''\r\n    }), () => this.props.onHandleChecklistChange(this.state.checklist))\r\n  }\r\n\r\n  onHandleNewTodoChange = ({ target }) => {\r\n    const { value } = target\r\n    this.setState({ newTodoTitle: value })\r\n  }\r\n\r\n  toggleIsAddOpen = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        isAddOpen: !this.state.isAddOpen\r\n      }\r\n    })\r\n  }\r\n\r\n  progressBarPrecentage = () => {\r\n    const { checklist } = this.state\r\n    let acc = 0;\r\n    checklist.todos.forEach((todo) => { if (todo.isDone) acc += 1 })\r\n\r\n    const todosPrecent = 100 / checklist.todos.length\r\n\r\n    if (acc === 0) return 0\r\n    return todosPrecent * acc\r\n  }\r\n\r\n  render() {\r\n    const { checklist, isAddOpen, newTodoTitle } = this.state\r\n    if (!checklist) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={400} width={400} timeout={3000} /></div>\r\n    return (\r\n      <div className=\"checklist flex column\" >\r\n        <div className=\"checklist-header flex\">\r\n          <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/check-box_pzd2ul.png\" alt=\"\" />\r\n          <input\r\n            className=\"my-input\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"Checklist\"\r\n            value={checklist.title}\r\n            onChange={this.onHandleTitleChange}\r\n          />\r\n        </div>\r\n        <div className=\"progress-container flex space-between\"><p>{Math.floor(this.progressBarPrecentage())}%</p>\r\n        <div className=\"progress-bar flex\"><div style={{ width: `${this.progressBarPrecentage()}%` }} className=\"todo-progress\"></div></div></div>\r\n        {checklist.todos && checklist.todos.map((todo, idx) => {\r\n          return <div className=\"checklist-todo flex\" key={idx}>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"isDone\"\r\n              checked={todo.isDone}\r\n              onChange={(ev) => this.onHandleTodosChange(ev, todo)}\r\n            />\r\n            <input\r\n              className=\"add-todo-input my-input\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"Add an item\"\r\n              value={todo.title}\r\n              onChange={(ev) => this.onHandleTodosChange(ev, todo)}\r\n            />\r\n            <button className=\"delete-todo\" onClick={() => this.onRemoveTodo(idx)}>✕</button>\r\n          </div>\r\n        })}\r\n\r\n        {isAddOpen && <div className=\"flex\">\r\n          <input\r\n            type=\"text\"\r\n            autoFocus\r\n            placeholder=\"Add an item\"\r\n            className=\"new-todo-input\"\r\n            value={newTodoTitle}\r\n            onChange={this.onHandleNewTodoChange}\r\n            onBlur={this.toggleIsAddOpen}\r\n          />\r\n          <button className=\"save-btn\" onMouseDown={this.saveNewTodo} >Save</button>\r\n        </div>}\r\n\r\n        {!isAddOpen && <button className=\"add-todo\" onClick={this.toggleIsAddOpen}>Add todo</button>}\r\n      </div >\r\n    )\r\n  }\r\n}\r\n","import { utilService } from \"../../services/utilService\"\r\nimport { CardActivityContainer } from \"./CardActivityContainer\";\r\nimport { CardChecklist } from \"./CardChecklist\"\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport moment from \"moment\"\r\n\r\nexport function CardInfo({ card, onHandleInputChange, onHandleChecklistChange, onHandleActivitiesChange, addOrCancelChecklist }) {\r\n  return (\r\n    <div className=\"card-info\">\r\n\r\n      {card.members && <div className=\"members flex column\">\r\n        <h2 className=\"members-header\">Members</h2>\r\n        {/* <div className=\"members-list flex\"> */}\r\n        <TransitionGroup className=\"members-list flex\">\r\n          {card.members.map((member, idx) => \r\n          <CSSTransition key={idx} timeout={500} classNames=\"item\">\r\n             <span key={idx} className=\"member\" style={{backgroundColor: member.color? member.color: \"#3f72af\"}}>{utilService.convertName(member.fullname)}</span>\r\n             </CSSTransition>\r\n        )}\r\n          </TransitionGroup>\r\n        {/* </div> */}\r\n      </div>}\r\n\r\n      {card.labels && card.labels.length > 0 && <div className=\"card-labels-section\">\r\n        <h2 className=\"card-label-h2\">Labels</h2>\r\n        <div className=\"flex labels-container\">\r\n          {card.labels.map((label, idx) => {\r\n            return <button key={idx} className=\"label-btn\" style={{ backgroundColor: label.color }}>{label.title}</button>\r\n          })}\r\n        </div>\r\n      </div>}\r\n\r\n      {card.dueDate && <div className=\"due-date-wrapper\">\r\n        <h2 className=\"due-date-h2\">Due Date</h2>\r\n        <p className=\"due-date\">{moment(card.dueDate).format('LLL')}</p>\r\n      </div>}\r\n\r\n      <div className=\"card-description\">\r\n        <div className=\"flex\">\r\n          <span><img className=\"desc-img\" src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/left-align_qaakok.png\" alt=\"\" /></span>\r\n          <h3>Description</h3>\r\n        </div>\r\n        <textarea\r\n          className=\"desc-textarea my-input\"\r\n          type=\"text\"\r\n          name=\"description\"\r\n          value={card.description || ''}\r\n          onChange={onHandleInputChange}\r\n          placeholder=\"Add more detailed description...\"\r\n        />\r\n      </div>\r\n\r\n      {card.checklist?.todos?.length > 0 &&\r\n        <CardChecklist card={card} onHandleChecklistChange={onHandleChecklistChange} addOrCancelChecklist={addOrCancelChecklist} />}\r\n      <CardActivityContainer card={card} onHandleActivitiesChange={onHandleActivitiesChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\n","export const cloudinaryService = {\r\n  uploadImg\r\n}\r\nasync function uploadImg(file) {\r\n  const CLOUD_NAME = 'basimgs'\r\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', file)\r\n  formData.append('upload_preset', 'misterToy');\r\n  try {\r\n    const res = await fetch(UPLOAD_URL, {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n    const data = await res.json()\r\n    return data\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n","import { Component } from 'react'\r\nimport { cloudinaryService } from '../../services/cloudinaryService.js'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nexport class CardCover extends Component {\r\n\r\n    state = {\r\n        isUploading: false,\r\n        mounted: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ mounted: true })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({ mounted: false })\r\n    }\r\n\r\n    coverColors = () => {\r\n        return ['#f9ed69', '#a56cc1', '#f38181', '#95e1d3', '#878ecd', '#3fc1c9',\r\n            '#a1dd70', '#ffcc29', '#19456b', '#d32626', '#16c79a', '#fcbad3', '#ffaa64', '#de95ba', '#17b978',]\r\n    }\r\n\r\n    onUploadImg = async ev => {\r\n        this.setState({ isUploading: true })\r\n        const { secure_url } = await cloudinaryService.uploadImg(ev.target.files[0])\r\n        this.setState({ isUploading: false }, () => this.props.onFinishUpload(secure_url))\r\n    }\r\n\r\n    setColor = (color) => {\r\n        console.log('the chosen color is', color);\r\n        this.props.onUpdateCoverColor(color)\r\n\r\n    }\r\n\r\n    render() {\r\n        const { isUploading, mounted } = this.state\r\n        return (\r\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleCoverMenu}>\r\n                <div className=\"card-cover-modal flex column\">\r\n                    <div className=\"uploader\">\r\n                        <label className=\"upload-btn\" htmlFor=\"imageUploader\">{isUploading ? 'Uploading....' : 'Upload Image'}</label>\r\n                        <input onChange={this.onUploadImg} hidden\r\n                            type=\"file\" accept=\"image/*\" id=\"imageUploader\" />\r\n                    </div>\r\n                    <h3>Colors</h3>\r\n                    <div className=\"card-cover-colors\">\r\n                        {this.coverColors().map((color, idx) => {\r\n                            return <div className=\"cover-colors-menu\" key={idx}\r\n                                style={{ backgroundColor: color }} onClick={() => this.setColor(color)}></div>\r\n                        })}\r\n                    </div>\r\n                    <div className=\"card-cover-btns flex\">\r\n                        <button onClick={this.onClose} className=\"card-cover-btn\">Ok</button>\r\n                        <button onClick={this.onClose} className=\"card-cover-btn\">✕</button>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { utilService } from '../../services/utilService'\r\nimport { eventBusService } from '../../services/eventBusService'\r\nimport { CSSTransition } from 'react-transition-group'\r\n// import { cardService } from '../../services/cardService'\r\n// TODO: maybe put in two cmps\r\n\r\nclass _CardLabels extends Component {\r\n\r\n  state = {\r\n    labels: [],\r\n    isCreateLabel: false,\r\n    currLabel: {\r\n      id: '',\r\n      title: '',\r\n      color: '#f2d601'\r\n    },\r\n    colors: ['#f2d601', '#ff9f19', '#eb5a46', '#c377e0', '#0179bf', '#04c2e0',\r\n      '#61bd50', '#50e898', '#ff78cb', '#344563', '#b3bac5'],\r\n    // mounted: false\r\n  }\r\n\r\n  // onClose = () => {\r\n  //   this.setState({ mounted: false })\r\n  // }\r\n\r\n  componentDidMount() {\r\n    // const { labels } = this.props.currCard //fucked me up\r\n    const { labels } = this.props.card\r\n    if (labels) {\r\n      this.setState(prevState => {\r\n        return {\r\n          ...prevState,\r\n          labels: [...labels],\r\n          mounted: true\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onEditClick = (label) => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        isCreateLabel: true,\r\n        currLabel: { ...label }\r\n      }\r\n    })\r\n  }\r\n\r\n  onHandleNewLabel = (val) => {\r\n    let name = 'color'\r\n\r\n    if (typeof (val) !== 'string') {\r\n      val = val.target.value\r\n      name = 'title'\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        currLabel: {\r\n          ...this.state.currLabel,\r\n          [name]: val\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  onToggleLabel = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        isCreateLabel: !this.state.isCreateLabel\r\n      }\r\n    })\r\n  }\r\n\r\n  onAddLabel = () => {\r\n    const { currLabel } = this.state\r\n    let labelsCopy = [...this.state.labels]\r\n\r\n    if (!currLabel.id) {\r\n      currLabel.id = utilService.makeId()\r\n      labelsCopy.push(currLabel)\r\n    } else {\r\n      const idx = labelsCopy.findIndex((label) => label.id === currLabel.id)\r\n      labelsCopy.splice(idx, 1, currLabel)\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        labels: [...labelsCopy]\r\n      }\r\n    }, () => {\r\n      this.props.onHandleLabelsChange(this.state.labels)\r\n      eventBusService.emit('label-added', currLabel)\r\n      this.onToggleLabel()\r\n      this.clearNewLabel()\r\n    })\r\n  }\r\n\r\n  clearNewLabel = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        currLabel: {\r\n          id: '',\r\n          title: '',\r\n          color: '#f2d601'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  onChooseLabel = (label) => {\r\n    // const readyLabel = cardService.createLabel(label)\r\n    const isDuplicated = this.checkForDuplicate(label)\r\n\r\n    if (isDuplicated) {\r\n      this.removeLabel(label)\r\n      return\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        labels: [...prevState.labels, label]\r\n      }\r\n    }, () => this.props.onHandleLabelsChange(this.state.labels))\r\n  }\r\n\r\n  checkForDuplicate = (label) => {\r\n    const { labels } = this.state\r\n    if (!labels) return false\r\n\r\n    const isFound = labels.find((currLabel) => currLabel.id === label.id)\r\n    if (isFound) return true\r\n  }\r\n\r\n  removeLabel = (label, isClose = false) => {\r\n    const labelsCopy = [...this.state.labels]\r\n    const idx = labelsCopy.findIndex((currLabel) => currLabel.id === label.id)\r\n    labelsCopy.splice(idx, 1)\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        labels: labelsCopy\r\n      }\r\n    }, () => {\r\n        this.props.onHandleLabelsChange(this.state.labels)\r\n        if (isClose) this.props.onToggleLabels()\r\n        this.clearNewLabel()\r\n        this.onToggleLabel()\r\n    })\r\n  }\r\n\r\n  checkForMark = (label) => {\r\n    const { labels } = this.state\r\n\r\n    const isFound = labels.find((currLabel) => currLabel.id === label.id)\r\n    return isFound\r\n  }\r\n\r\n  onRemoveLabel = (label) => {\r\n    this.removeLabel(label, true)\r\n    eventBusService.emit('label-remove', label)\r\n  }\r\n\r\n  render() {\r\n    const { board } = this.props\r\n    const { isCreateLabel, colors, currLabel, mounted } = this.state\r\n    return (\r\n      <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleLabelMenu}>\r\n        <div className=\"card-labels flex column\" style={{ height: isCreateLabel ? '320px' : '450px' }}>\r\n\r\n          <header className=\"labels-header flex\">\r\n            {isCreateLabel && <button className=\"go-back\" onClick={this.onToggleLabel}> 〈</button>}\r\n            <p>{!isCreateLabel ? 'Labels' : 'Create Label'}</p>\r\n            <button className=\"close-btn inside-close\" onClick={this.props.toggleLabelMenu}>✕</button>\r\n          </header>\r\n\r\n          {!isCreateLabel && <section className=\"label-choose-container flex column\">\r\n            <ul>\r\n              {board.labels?.map((label) => (\r\n                <li key={label.id} className=\"label flex\">\r\n                  <div className=\"label-title flex space-between\" onClick={() => this.onChooseLabel(label)} style={{ backgroundColor: label.color }}>\r\n                    <p>{label.title} </p>\r\n                    <span className=\"checkmark\">{this.checkForMark(label) ? '✓' : ''}</span>\r\n                  </div>\r\n                  <button className=\"label-edit-btn\" onClick={() => this.onEditClick(label)}>\r\n                    <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610872377/pen_so2afr.png\" alt=\"\" />\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </section>}\r\n\r\n          {isCreateLabel && <section className=\"create-label-container flex column\">\r\n            <label htmlFor=\"title\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter label name...\"\r\n              name=\"title\"\r\n              id=\"title\"\r\n              value={currLabel.title}\r\n              onChange={this.onHandleNewLabel}\r\n            />\r\n            <p>Select a color</p>\r\n            <ul className=\"flex\">\r\n              {colors.map((color) => (\r\n                <li\r\n                  className=\"label-color-picker flex align-center justify-center\"\r\n                  key={color}\r\n                  name=\"color\"\r\n                  style={{ backgroundColor: color }}\r\n                  onClick={() => this.onHandleNewLabel(color)}\r\n                >{currLabel.color === color ? '✓' : ''}</li>\r\n              ))}\r\n            </ul>\r\n            <div className=\"flex space-between\">\r\n              <button className=\"save-btn\" onClick={this.onAddLabel}>Create</button>\r\n              {currLabel.id && <button className=\"delete-btn\" onClick={() => this.onRemoveLabel(currLabel)}>Delete</button>}\r\n            </div>\r\n          </section>}\r\n\r\n          {!isCreateLabel &&\r\n            <footer>\r\n              <button className=\"add-label-btn\" onClick={this.onToggleLabel}>+ Create New Label</button>\r\n            </footer>}\r\n\r\n        </div>\r\n      </CSSTransition>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n    currCard: state.cardModule.currCard\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  // saveBoard,\r\n}\r\n\r\nexport const CardLabels = connect(mapStateToProps, mapDispatchToProps)(_CardLabels)","import { Component } from 'react'\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nexport class DatePicker extends Component {\r\n\r\n    state = {\r\n        mounted: false,\r\n        value: new Date()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ mounted: true })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({ mounted: false })\r\n    }\r\n\r\n    onChange = (value) => {\r\n        this.setState({ value }, () => this.props.onSavedueDate((this.state.value + '').substring(4, 32)))\r\n        this.setState({ mounted: false })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { value, mounted } = this.state\r\n        return (\r\n            <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleDate}>\r\n                <div className=\"date-picker\">\r\n                    <button onClick={this.onClose} className=\"close-date-btn\">✕</button>\r\n                    <Calendar style={{ zIndex: 2000, position: 'absolute' }}\r\n                        onChange={this.onChange}\r\n                        value={value}\r\n                    />\r\n                </div>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n// import Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { cardService } from '../../services/cardService';\r\nimport { CardCover } from './CardCover';\r\nimport { CardLabels } from './CardLabels';\r\nimport { AddMember } from '../AddMember';\r\nimport { DatePicker } from './DatePicker';\r\n// import { DatePicker } from '@material-ui/pickers';\r\n\r\nexport class CardSide extends Component {\r\n\r\n  state = {\r\n    // value: new Date(),\r\n    isDateShown: false,\r\n    isLabelsShown: false,\r\n    isLabelsMenuShown: false,\r\n    isCoverMenuShown: false,\r\n    isMoreMembersShown: false\r\n  }\r\n\r\n  onRemoveCard = () => {\r\n    this.props.onRemoveCard()\r\n  }\r\n\r\n  toggleMembers = () => {\r\n    this.setState({ isMoreMembersShown: !this.state.isMoreMembersShown })\r\n  }\r\n\r\n  toggleDate = () => {\r\n    this.setState({ isDateShown: !this.state.isDateShown })\r\n  }\r\n\r\n  toggleCoverMenu = () => {\r\n    this.setState({ isCoverMenuShown: !this.state.isCoverMenuShown })\r\n  }\r\n\r\n  toggleLabelMenu = () => {\r\n    this.setState({ isLabelsMenuShown: !this.state.isLabelsMenuShown })\r\n    window.isLabelsMenuShown = this.state.isLabelsMenuShown\r\n  }\r\n\r\n\r\n\r\n  onAddChecklist = () => {\r\n    const checklist = cardService.createChecklist()\r\n    this.props.addOrCancelChecklist(checklist)\r\n  }\r\n\r\n  onToggleLabels = () => {\r\n    this.setState({ isLabelsShown: !this.state.isLabelsShown })\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const { isDateShown, isCoverMenuShown, isMoreMembersShown, isLabelsMenuShown } = this.state\r\n    const { card, onHandleLabelsChange, saveChanges, users } = this.props\r\n    return (\r\n      <>\r\n        {isLabelsMenuShown && <CardLabels saveChanges={saveChanges} card={card} onToggleLabels={this.onToggleLabels} toggleLabelMenu={this.toggleLabelMenu} onHandleLabelsChange={onHandleLabelsChange} />}\r\n        {isCoverMenuShown && <CardCover onFinishUpload={this.props.onUploadCardCoverImg}\r\n          onUpdateCoverColor={this.props.onUpdateCoverColor} toggleCoverMenu={this.toggleCoverMenu} />}\r\n        {isDateShown && <DatePicker onSavedueDate={this.props.onSavedueDate} toggleDate={this.toggleDate} />}\r\n        {isMoreMembersShown && <AddMember toggleMembers={this.toggleMembers}\r\n          onUpdateMembers={this.props.onUpdateMembers} onSetUserFilter={this.props.onSetUserFilter} members={card.members} users={users} />}\r\n        {/* {isMoreMembersShown && <div className=\"card-details-member-container\"><AddMember toggleMembers={this.toggleMembers}\r\n          onUpdateMembers={this.props.onUpdateMembers} onSetUserFilter={this.props.onSetUserFilter} members={card.members} users={users} /></div>} */}\r\n        {/* <DatePicker /> */}\r\n        <div className=\"card-side flex column\">\r\n          <button className=\"side-btn\" onClick={this.toggleMembers}>\r\n            <span>\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/user_g2y481.png\" alt=\"\" />\r\n            </span> Members</button>\r\n\r\n          <button className=\"side-btn\" onClick={this.toggleLabelMenu}>\r\n            <span>\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610794160/price-tag_evse4z.png\" alt=\"\" />\r\n            </span> Labels</button>\r\n\r\n          {!card.checklist && <button className=\"side-btn\" onClick={this.onAddChecklist}>\r\n            <span>\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610794290/check-box_srgv0c.png\" alt=\"\" />\r\n            </span> Checklist</button>}\r\n\r\n          <button className=\"side-btn\" onClick={this.toggleDate}>\r\n            <span>\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"\" />\r\n            </span> Due date</button>\r\n\r\n          <button className=\"side-btn\" onClick={this.toggleCoverMenu}>\r\n            <span>\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793767/picture_omnffh.png\" alt=\"\" />\r\n            </span> Cover</button>\r\n\r\n          <button className=\"side-btn\" onClick={this.onRemoveCard}>\r\n            <span>\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793816/trash_nrq5xi.png\" alt=\"\" />\r\n            </span> Delete</button>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import { utilService } from \"./utilService\"\r\n\r\nexport const activityService = {\r\n  createActivity\r\n}\r\n\r\nfunction createActivity(user, txt, card, group, action, moveTo) {\r\n  let byMember = null\r\n  let toGroup = null\r\n\r\n  if (user) {\r\n    byMember = {\r\n      _id: user._id,\r\n      fullname: user.fullname,\r\n      imgUrl: user.imgUrl\r\n    }\r\n  }\r\n\r\n  if (moveTo) {\r\n    toGroup = {\r\n      id: moveTo.id,\r\n      title: moveTo.title\r\n    }\r\n  }\r\n\r\n  if (card) {\r\n    card =  {\r\n      id: card.id,\r\n      title: `${card.title} ${action}`\r\n    }\r\n  } else card = null\r\n\r\n\r\n  return {\r\n    id: utilService.makeId(),\r\n    txt,\r\n    createdAt: Date.now(),\r\n    byMember,\r\n    card,\r\n    group: {\r\n      id: group.id,\r\n      title: group.title\r\n    },\r\n    toGroup\r\n  }\r\n}","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CardHeader } from './CardHeader'\r\nimport { CardInfo } from './CardInfo'\r\nimport { clearState } from '../../store/actions/cardAction.js'\r\nimport { saveBoard } from '../../store/actions/boardAction.js'\r\nimport { CardSide } from './CardSide'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { socketService } from '../../services/socketService'\r\nimport { activityService } from '../../services/activityService'\r\nimport Loader from 'react-loader-spinner'\r\n// TODO: go back to handle click outside async lielm1995\r\n\r\nclass _CardDetails extends Component {\r\n  state = {\r\n    card: null,\r\n    filterBy: {\r\n      fullname: ''\r\n    },\r\n    mounted: false,\r\n    initialCard: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    // socketService.setup()\r\n    const { card } = this.props\r\n    this.setState({ mounted: true, card, initialCard: card })\r\n  }\r\n\r\n  onClose = () => {\r\n    this.saveChanges(true)\r\n    this.checklistValidation()\r\n    this.setState({ mounted: false })\r\n  }\r\n\r\n  saveChanges = (isActivityUpdate = false) => {\r\n    // this.checklistValidation()\r\n    this.sendUpdatedBoard(isActivityUpdate)\r\n  }\r\n\r\n  sendUpdatedBoard = async (isActivityUpdate = false) => {\r\n    const board = { ...this.props.board }\r\n    const group = { ...this.props.group }\r\n    const { card, initialCard } = this.state\r\n    const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\r\n    group.cards[cardIdx] = card\r\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n    board.groups[groupIdx] = group\r\n\r\n    if (isActivityUpdate && JSON.stringify(initialCard) !== JSON.stringify(card)) {\r\n      var activity = activityService.createActivity(this.props.loggedInUser, 'update card ', card, board.groups[groupIdx], ' in')\r\n      board.activities ? board.activities.unshift(activity) : board.activities = new Array(activity)\r\n    }\r\n    await this.props.saveBoard(board)\r\n    // socketService.emit('card changed', board)\r\n  }\r\n\r\n  onHandleInputChange = ({ target }) => {\r\n    const { value, name } = target\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        [name]: value\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onHandleChecklistChange = (checklist) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        checklist: { ...checklist }\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onHandleActivitiesChange = (comments) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        comments: [...comments]\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onHandleLabelsChange = (labels) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        labels: [...labels]\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  addOrCancelChecklist = (checklist) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        checklist\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onSavedueDate = (date) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        dueDate: Date.parse(date)\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onUploadCardCoverImg = (url) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        style: { imgUrl: url, color: '' }\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onUpdateCoverColor = (color) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        style: { imgUrl: '', color: color }\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n  onRemoveCard = () => {\r\n    const { board, group } = this.props\r\n    const { card } = this.state\r\n    const cardIdx = group.cards.findIndex((currCard) => currCard.id === card.id)\r\n    group.cards.splice(cardIdx, 1)\r\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n    board.groups[groupIdx] = group\r\n    this.props.saveBoard(board)\r\n    this.props.toggleDetails(false)\r\n  }\r\n\r\n  onUpdateMembers = async (member) => {\r\n    console.log('new members', member);\r\n    const { board, group } = this.props\r\n    const { card } = this.state\r\n    const newCard = { ...card }\r\n    const memberIdx = card.members.findIndex(currMember => currMember._id === member._id)\r\n    if (memberIdx > -1) {\r\n      newCard.members.splice(memberIdx, 1)\r\n    } else {\r\n      newCard.members.push(member)\r\n    }\r\n    const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\r\n    group.cards[cardIdx] = newCard\r\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n    board.groups[groupIdx] = group\r\n\r\n    this.setState({ card: newCard }, () => { this.props.saveBoard(board) })\r\n  }\r\n\r\n  checklistValidation = () => {\r\n    const { checklist } = this.state.card\r\n    if (checklist && checklist.todos.length === 1 && !checklist.todos[0].title) {\r\n      this.addOrCancelChecklist(null)\r\n    }\r\n  }\r\n\r\n  onSetUserFilter = (filterBy) => {\r\n    this.setState({ filterBy })\r\n  }\r\n\r\n  get usersForDisplay() {\r\n    const { board } = this.props\r\n    const { filterBy } = this.state;\r\n    const filterRegex = new RegExp(filterBy.fullname, 'i');\r\n    const users = board.members.filter(member => filterRegex.test(member.fullname))\r\n    return users\r\n  }\r\n\r\n  onDeleteCover = () => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        style: null\r\n      }\r\n    }), () => this.saveChanges())\r\n  }\r\n\r\n\r\n  render() {\r\n    const { card, mounted } = this.state\r\n    const { group } = this.props\r\n    const usersForDisplay = this.usersForDisplay\r\n    if (!card) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={400} width={400} timeout={3000} /></div>\r\n\r\n    return (\r\n      <div className=\"modal-cover\" onClick={this.onClose}>\r\n        <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleDetails}>\r\n          <div className=\"card-details flex column align-center\" onClick={ev => ev.stopPropagation()}>\r\n            <button className=\"close-btn\" onClick={this.onClose}>✕</button>\r\n            {card.style?.color &&\r\n              <div className=\"details-img-wrapper\" style={{ backgroundColor: card.style.color, height: '150px' }}>\r\n                <img onClick={this.onDeleteCover} src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793816/trash_nrq5xi.png\" className=\"trash\" alt=\"\" />\r\n              </div>\r\n            }\r\n\r\n            {\r\n              card.style?.imgUrl &&\r\n              <div className=\"details-img-wrapper flex justify-center\" style={{ height: '200px' }}>\r\n                <img src={card.style.imgUrl} alt=\"\" />\r\n                <img onClick={this.onDeleteCover} src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793816/trash_nrq5xi.png\" className=\"trash\" alt=\"\" />\r\n              </div >}\r\n\r\n            <div className=\"card-details-wrapper flex column\" style={{ paddingTop: (card.style?.imgUrl || card.style?.color) ? '0' : '15px' }}>\r\n              <CardHeader card={card} onHandleInputChange={this.onHandleInputChange} group={group} />\r\n              <div className=\"card-content flex\">\r\n                <CardInfo\r\n                  card={card}\r\n                  onHandleChecklistChange={this.onHandleChecklistChange}\r\n                  onHandleInputChange={this.onHandleInputChange}\r\n                  onHandleActivitiesChange={this.onHandleActivitiesChange}\r\n                  addOrCancelChecklist={this.addOrCancelChecklist}\r\n                />\r\n                <CardSide\r\n                  card={card}\r\n                  onRemoveCard={this.onRemoveCard}\r\n                  onSavedueDate={this.onSavedueDate}\r\n                  addOrCancelChecklist={this.addOrCancelChecklist}\r\n                  onUploadCardCoverImg={this.onUploadCardCoverImg}\r\n                  onHandleLabelsChange={this.onHandleLabelsChange}\r\n                  onUpdateCoverColor={this.onUpdateCoverColor}\r\n                  saveChanges={this.saveChanges}\r\n                  users={usersForDisplay}\r\n                  onUpdateMembers={this.onUpdateMembers}\r\n                  onSetUserFilter={this.onSetUserFilter}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div >\r\n        </CSSTransition >\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boardModule.currBoard,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  saveBoard,\r\n  clearState\r\n}\r\n\r\nexport const CardDetails = connect(mapStateToProps, mapDispatchToProps)(_CardDetails)\r\n// import { Component } from 'react'\r\n// import { connect } from 'react-redux'\r\n// import ReactDOM from 'react-dom'\r\n// import { CardHeader } from './CardHeader'\r\n// import { CardInfo } from './CardInfo'\r\n// import { clearState } from '../../store/actions/cardAction.js'\r\n// import { saveBoard } from '../../store/actions/boardAction.js'\r\n// import { CardSide } from './CardSide'\r\n// import { CSSTransition } from 'react-transition-group'\r\n// import { socketService } from '../../services/socketService'\r\n// import { activityService } from '../../services/activityService'\r\n// // TODO: find a way to merge all handle inputs\r\n// // TODO: go back to handle click outside async lielm1995\r\n\r\n// class _CardDetails extends Component {\r\n//   state = {\r\n//     card: null,\r\n//     filterBy: {\r\n//       fullname: ''\r\n//     },\r\n//     mounted: false\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     socketService.setup()\r\n//     const { card } = this.props\r\n//     this.setState({ mounted: true })\r\n//     this.setState({ card })\r\n//     // document.addEventListener('click', this.handleClickOutside, true)\r\n//   }\r\n\r\n//   // componentWillUnmount() {\r\n//   //   socketService.terminate()\r\n//   // }\r\n\r\n\r\n//   onClose = () => {\r\n//     this.saveChanges()\r\n//     this.setState({ mounted: false })\r\n//   }\r\n\r\n//   // componentWillUnmount() {\r\n//   //   document.removeEventListener('click', this.handleClickOutside, true)\r\n//   // }\r\n\r\n//   // handleClickOutside = event => {\r\n//   //   const domNode = ReactDOM.findDOMNode(this)\r\n//   //   if (!domNode || !domNode.contains(event.target)) {\r\n//   //     this.saveChanges()\r\n//   //     // this.props.clearState(null)\r\n//   //   }\r\n//   // }\r\n\r\n//   saveChanges = () => {\r\n//     this.checklistValidation()\r\n//     this.sendUpdatedBoard()\r\n//   }\r\n\r\n//   sendUpdatedBoard = async () => {\r\n//     const { board, group } = this.props\r\n//     const { card } = this.state\r\n//     const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\r\n//     group.cards[cardIdx] = card\r\n//     const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n//     board.groups[groupIdx] = group\r\n//     await this.props.saveBoard(board)\r\n\r\n//     // socketService.emit('card changed', board)\r\n//   }\r\n\r\n//   onHandleInputChange = ({ target }) => {\r\n//     const { value, name } = target\r\n//     this.setState(prevState => ({\r\n//       card: {\r\n//         ...prevState.card,\r\n//         [name]: value\r\n//       }\r\n//     }), () => this.saveChanges())\r\n//   }\r\n\r\n//   onHandleChecklistChange = (checklist) => {\r\n//     this.setState(prevState => ({\r\n//       card: {\r\n//         ...prevState.card,\r\n//         checklist: { ...checklist }\r\n//       }\r\n//     }))\r\n//     // }), () => this.saveChanges())\r\n//   }\r\n\r\n//   onHandleActivitiesChange = (comments) => {\r\n//     this.setState(prevState => ({\r\n//       card: {\r\n//         ...prevState.card,\r\n//         comments: [...comments]\r\n//       }\r\n//     }), () => this.saveChanges())\r\n//   }\r\n\r\n//   onHandleLabelsChange = (labels) => {\r\n//     this.setState(prevState => ({\r\n//       card: {\r\n//         ...prevState.card,\r\n//         labels: [...labels]\r\n//       }\r\n//     }), () => this.saveChanges())\r\n//   }\r\n\r\n//   addOrCancelChecklist = (checklist) => {\r\n//     this.setState(prevState => ({\r\n//       card: {\r\n//         ...prevState.card,\r\n//         checklist\r\n//       }\r\n//     }))\r\n//   }\r\n\r\n//   onRemoveCard = () => {\r\n//     const { board, group } = this.props\r\n//     const { card } = this.state\r\n//     const cardIdx = group.cards.findIndex((currCard) => currCard.id === card.id)\r\n//     group.cards.splice(cardIdx, 1)\r\n//     const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n//     board.groups[groupIdx] = group\r\n//     this.props.saveBoard(board)\r\n//     this.props.toggleDetails(false)\r\n//   }\r\n\r\n//   onSavedueDate = (date) => {\r\n//     this.setState(prevState => ({\r\n//       card: {\r\n//         ...prevState.card,\r\n//         dueDate: Date.parse(date)\r\n//       }\r\n//     }))\r\n//     const { card } = this.state\r\n//     const newCard = { ...card }\r\n//     newCard.dueDate = Date.parse(date)\r\n//     this.onUpdateCard(newCard)\r\n//   }\r\n\r\n//   onUploadCardCoverImg = (url) => {\r\n//     const { card } = this.state\r\n//     const newCard = { ...card }\r\n//     const style = { imgUrl: url, color: '' }\r\n//     newCard.style = style\r\n//     this.onUpdateCard(newCard)\r\n//   }\r\n\r\n//   onUpdateCard = (updatedCard) => {\r\n//     const { board, group } = this.props\r\n//     const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\r\n//     group.cards[cardIdx] = updatedCard\r\n//     const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n//     board.groups[groupIdx] = group\r\n//     this.setState({ card: updatedCard }, () => { this.props.saveBoard(board) })\r\n//   }\r\n\r\n//   onUpdateCoverColor = (color) => {\r\n//     const { card } = this.state\r\n//     const newCard = { ...card }\r\n//     const style = { imgUrl: '', color: color }\r\n//     newCard.style = style\r\n//     this.onUpdateCard(newCard)\r\n//   }\r\n\r\n//   onUpdateMembers = async (member) => {\r\n//     console.log('new members', member);\r\n//     const { board, group } = this.props\r\n//     const { card } = this.state\r\n//     const newCard = { ...card }\r\n//     const memberIdx = card.members.findIndex(currMember => currMember._id === member._id)\r\n//     if (memberIdx > -1) {\r\n//       newCard.members.splice(memberIdx, 1)\r\n//     } else {\r\n//       newCard.members.push(member)\r\n//     }\r\n//     const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\r\n//     group.cards[cardIdx] = newCard\r\n//     const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n//     board.groups[groupIdx] = group\r\n//     this.setState({ card: newCard }, () => { this.props.saveBoard(board) })\r\n//   }\r\n\r\n//   checklistValidation = () => {\r\n//     const { checklist } = this.state.card\r\n//     if (checklist && checklist.todos.length === 1 && !checklist.todos[0].title) {\r\n//       this.addOrCancelChecklist(null)\r\n//     }\r\n//   }\r\n\r\n//   onSetUserFilter = (filterBy) => {\r\n//     this.setState({ filterBy })\r\n//   }\r\n\r\n//   get usersForDisplay() {\r\n//     const { board } = this.props\r\n//     const { filterBy } = this.state;\r\n//     const filterRegex = new RegExp(filterBy.fullname, 'i');\r\n//     const users = board.members.filter(member => filterRegex.test(member.fullname))\r\n//     return users\r\n//   }\r\n\r\n\r\n\r\n//   render() {\r\n//     const { card, mounted } = this.state\r\n//     const { group } = this.props\r\n//     const usersForDisplay = this.usersForDisplay\r\n//     if (!card) return <div>Loading...</div>\r\n\r\n//     return (\r\n//       <div className=\"modal-cover\" onClick={this.onClose}>\r\n//         <CSSTransition in={mounted} classNames=\"modal\" timeout={300} onExited={this.props.toggleDetails}>\r\n//           <div className=\"card-details flex column align-center\" onClick={ev => ev.stopPropagation()}>\r\n//             {card.style?.color &&\r\n//               <div className=\"details-img-wrapper\" style={{ backgroundColor: card.style.color, height: '150px' }}>\r\n//               </div>}\r\n\r\n//             {card.style?.imgUrl &&\r\n//               <div className=\"details-img-wrapper flex justify-center\" style={{ height: '200px' }}>\r\n//                 <img src={card.style.imgUrl} alt=\"\" />\r\n//               </div>}\r\n\r\n//             <div className=\"card-details-wrapper flex column\">\r\n//               <CardHeader card={card} onHandleInputChange={this.onHandleInputChange} group={group} />\r\n//               <div className=\"card-content flex\">\r\n//                 <CardInfo\r\n//                   card={card}\r\n//                   onHandleChecklistChange={this.onHandleChecklistChange}\r\n//                   onHandleInputChange={this.onHandleInputChange}\r\n//                   onHandleActivitiesChange={this.onHandleActivitiesChange}\r\n//                   addOrCancelChecklist={this.addOrCancelChecklist}\r\n//                 />\r\n//                 <CardSide\r\n//                   card={card}\r\n//                   onRemoveCard={this.onRemoveCard}\r\n//                   onSavedueDate={this.onSavedueDate}\r\n//                   addOrCancelChecklist={this.addOrCancelChecklist}\r\n//                   onUploadCardCoverImg={this.onUploadCardCoverImg}\r\n//                   onHandleLabelsChange={this.onHandleLabelsChange}\r\n//                   onUpdateCoverColor={this.onUpdateCoverColor}\r\n//                   saveChanges={this.saveChanges}\r\n//                   users={usersForDisplay}\r\n//                   onUpdateMembers={this.onUpdateMembers}\r\n//                   onSetUserFilter={this.onSetUserFilter}\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </CSSTransition>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     board: state.boardModule.currBoard,\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   saveBoard,\r\n//   clearState\r\n// }\r\n\r\n// export const CardDetails = connect(mapStateToProps, mapDispatchToProps)(_CardDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CardLabels } from './CardLabels'\r\nimport Calendar from 'react-calendar';\r\nimport { saveBoard } from '../../store/actions/boardAction'\r\nimport { AddMember } from '../AddMember';\r\nimport Loader from 'react-loader-spinner'\r\nimport { eventBusService } from '../../services/eventBusService'\r\nimport { utilService } from '../../services/utilService';\r\n\r\nclass _CardPreviewDetails extends Component {\r\n  state = {\r\n    card: null,\r\n    userClicked: null,\r\n    isCreateLabel: false,\r\n    isChangeMembers: false,\r\n    isChangeDueDate: false,\r\n    value: new Date(),\r\n    modalChangePos: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setState({ card: this.props.card }, () => console.log(this.state.card))\r\n    this.setState({ card: this.props.card, userClicked: this.props?.userClicked })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({\r\n      card: null,\r\n      userClicked: null,\r\n      isCreateLabel: false,\r\n      isChangeMembers: false,\r\n      isChangeDueDate: false,\r\n    })\r\n  }\r\n  modalRef = React.createRef()\r\n  modalLabelRef = React.createRef()\r\n\r\n  closeModal = () => {\r\n    this.modalRef.current.style.visibility = 'hidden'\r\n    this.props.showPreviewCardDetails()\r\n  }\r\n\r\n  toggleLabelMenu = (ev) => {\r\n    const pos = this.getNewPos(ev, 300, 450)\r\n\r\n    this.setState({ isCreateLabel: !this.state.isCreateLabel, modalChangePos: pos })\r\n  }\r\n\r\n  showMembers = (ev) => {\r\n    const pos = this.getNewPos(ev, 300, 450)\r\n    this.setState({ isChangeMembers: !this.state.isChangeMembers, modalChangePos: pos })\r\n  }\r\n\r\n  showDueDate = (ev) => {\r\n    const pos = this.getNewPos(ev, 340, 288)\r\n    this.setState({ isChangeDueDate: !this.state.isChangeDueDate, modalChangePos: pos })\r\n  }\r\n\r\n  onHandleInputChange = ({ target }) => {\r\n    const { value, name } = target\r\n    console.log(target, name, value);\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  onHandleLabelsChange = (labels) => {\r\n    this.setState(prevState => ({\r\n      card: {\r\n        ...prevState.card,\r\n        labels: [...labels]\r\n      }\r\n    }), () => this.onUpdateCard(this.state.card))\r\n  }\r\n\r\n  onChange = (value) => {\r\n    this.setState({ value }, () => this.onSavedueDate((this.state.value + '').substring(4, 32)))\r\n    this.showDueDate()\r\n  }\r\n\r\n  onSavedueDate = (date) => {\r\n    const { card } = this.state\r\n    const newCard = { ...card }\r\n    newCard.dueDate = Date.parse(date)\r\n    this.onUpdateCard(newCard)\r\n  }\r\n\r\n  onUpdateMembers = async (member) => {\r\n    const copyCard = { ...this.state.card }\r\n    console.log('copyCard', copyCard);\r\n    const memberIdx = copyCard.members.findIndex(currMember => currMember._id === member._id)\r\n    console.log('copyCard', memberIdx);\r\n    if (memberIdx > -1) {\r\n      copyCard.members.splice(memberIdx, 1)\r\n      this.setState({ card: copyCard })\r\n    } else {\r\n      copyCard.members.push(member)\r\n      this.setState({ card: copyCard })\r\n\r\n    }\r\n    this.onUpdateCard(this.state.card)\r\n  }\r\n\r\n  onUpdateCard = (updatedCard, isSave = null) => {\r\n    const { board, group } = this.props\r\n    const cardIdx = group.cards.findIndex((card) => card.id === this.state.card.id)\r\n    group.cards[cardIdx] = updatedCard\r\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n    board.groups[groupIdx] = group\r\n    this.setState({ card: updatedCard }, () => {\r\n      this.props.saveBoard(board)\r\n      if (isSave) this.closeModal()\r\n    })\r\n  }\r\n\r\n  onRemoveCard = () => {\r\n    const { board, group } = this.props\r\n    const { card } = this.state\r\n    const cardIdx = group.cards.findIndex((currCard) => currCard.id === card.id)\r\n    group.cards.splice(cardIdx, 1)\r\n    const groupIdx = board.groups.findIndex((currGroup) => currGroup.id === group.id)\r\n    board.groups[groupIdx] = group\r\n    this.props.saveBoard(board)\r\n    this.closeModal()\r\n  }\r\n\r\n  getNewPos = (ev, width, height) => {\r\n    const size = { width, height }\r\n    return utilService.getSpaceCalculatedPos(ev, size)\r\n  }\r\n\r\n  render() {\r\n    const { userClicked, card, isCreateLabel, isChangeMembers, isChangeDueDate, value, modalChangePos } = this.state\r\n    console.log('modalChangePos', modalChangePos)\r\n    if (!card) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={400} width={400} timeout={3000} /></div>\r\n    return (\r\n      <>\r\n        <div className=\"wrapper-preview-details\" ref={this.modalRef} onClick={this.closeModal} style={{\r\n          position: 'absolute',\r\n          zIndex: 9000, top: 0, left: 0, right: 0, bottom: 0,\r\n          backgroundColor: 'black', opacity: 0.5\r\n        }}></div>\r\n        <div className=\"card-preview-details flex\" style={{\r\n          position: 'absolute',\r\n          top: userClicked.y,\r\n          left: userClicked.x,\r\n          zIndex: 10000\r\n        }}>\r\n          <div className=\"flex column space-between\">\r\n            <textarea className=\"card-preview-details-textarea\" name=\"title\" cols=\"28\" wrap=\"hard\" rows=\"8\" onChange={this.onHandleInputChange} value={card.title} autoFocus ></textarea>\r\n            <button className=\"card-preview-details-save\" onClick={() => this.onUpdateCard(card, 'save')}>Save</button>\r\n          </div>\r\n          <div className=\"card-preview-details-changes flex column\">\r\n            <button className=\"card-preview-details-changes-btn\" onClick={this.toggleLabelMenu}><span className=\"card-preview-details-changes-icon\">\r\n              <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610794160/price-tag_evse4z.png\" alt=\"label\" />\r\n            </span>Edit Labels</button>\r\n            {isCreateLabel &&\r\n              <div className=\"card-preview-details-label-wrap\" style={{ top: -modalChangePos.y, right: -130 }}>\r\n                <CardLabels toggleLabelMenu={this.toggleLabelMenu}\r\n                  onHandleLabelsChange={this.onHandleLabelsChange} card={card} /></div>}\r\n            <button className=\"card-preview-details-changes-btn flex space-between\"\r\n              onClick={this.showMembers}><span className=\"card-preview-details-changes-icon\">\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/user_g2y481.png\" alt=\"member\" />\r\n              </span><span style={{ flexGrow: 1 }}>Change Members</span>\r\n            </button>\r\n            {isChangeMembers && <AddMember\r\n              modalChangePos={modalChangePos}\r\n              toggleMembers={this.showMembers}\r\n              onUpdateMembers={this.onUpdateMembers}\r\n              onSetUserFilter={this.props.onSetUserFilter} members={card.members}\r\n              users={this.props.board.members} />}\r\n            <button className=\"card-preview-details-changes-btn\" onClick={this.showDueDate}>\r\n              <span className=\"card-preview-details-changes-icon\">\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610625361/clock_zwp9d9.png\" alt=\"clock\" />\r\n              </span><span style={{ flexGrow: 1 }}> Change Due Date</span></button>\r\n            {isChangeDueDate && <div className=\"date-picker \" style={{ position: \"fixed\", top: modalChangePos.y - 30, left: modalChangePos.x }}>\r\n              <button onClick={this.showDueDate} className=\"close-date-btn\">✕</button>\r\n              <Calendar\r\n                onChange={this.onChange}\r\n                value={value} />\r\n            </div>}\r\n            <button className=\"card-preview-details-changes-btn\" onClick={this.onRemoveCard}>\r\n              <span className=\"card-preview-details-changes-icon\">\r\n                <img src=\"https://res.cloudinary.com/basimgs/image/upload/v1610793816/trash_nrq5xi.png\" alt=\"Trash\" />\r\n              </span>\r\n              <span style={{ flexGrow: 1, textAlign: 'left' }}>Delete</span></button>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  board: state.boardModule.currBoard,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  saveBoard\r\n}\r\n\r\nexport const CardPreviewDetails = connect(mapStateToProps, mapDispatchToProps)(_CardPreviewDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoard, saveBoard, cleanBoard } from '../store/actions/boardAction'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\nimport { BoardHeader } from '../cmps/BoardHeader/BoardHeader'\r\nimport { GroupList } from '../cmps/Group/GroupList'\r\nimport { GroupMenu } from '../cmps/Group/GroupMenu'\r\nimport { CardDetails } from '../cmps/Card/CardDetails'\r\nimport { boardService } from '../services/boardService'\r\nimport { eventBusService } from '../services/eventBusService.js'\r\nimport { CardPreviewDetails } from '../cmps/Card/CardPreviewDetails'\r\nimport { socketService } from '../services/socketService'\r\nimport { activityService } from '../services/activityService'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nexport class _BoardApp extends Component {\r\n    state = {\r\n        isDetailsShown: false,\r\n        scrollLeft: 0,\r\n        isPreviewDetailsShown: false,\r\n        userClicked: {\r\n            x: null,\r\n            y: null\r\n        },\r\n        isGroupMenuShown: false\r\n    }\r\n    refBoard = React.createRef()\r\n\r\n    async componentDidMount() {\r\n        socketService.setup()\r\n        await this.loadBoard()\r\n\r\n        socketService.on('load board', (board) => {\r\n\r\n            console.log('lalalalal');\r\n            this.updateBoard(board, true)\r\n        })\r\n\r\n        this.eventBusTerminate = eventBusService.on('show-details', this.toggleDetails)\r\n        this.eventBusLabelTerminate = eventBusService.on('label-added', this.onAddLabel)\r\n        this.eventBusRemoveTerminate = eventBusService.on('label-remove', this.onRemoveLabel)\r\n        this.eventBusShowPreviewDetailsTerminate = eventBusService.on('show-preview-details', this.showPreviewCardDetails)\r\n        this.eventBusShowGroupMenuTerminate = eventBusService.on('show-group-menu', this.showGroupMenu)\r\n    }\r\n\r\n    // componentDidUpdate(prevProps) {\r\n    //     if (this.props.board === prevProps.board) {\r\n    //     // if (this.props.board !== prevProps.board && !this.props.board) {\r\n    //         this.props.loadBoards()\r\n    //         // this.props.history.push(`board/${this.props.board._id}`)\r\n    //     }\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        this.eventBusTerminate()\r\n        this.eventBusLabelTerminate()\r\n        this.eventBusRemoveTerminate()\r\n        this.eventBusShowPreviewDetailsTerminate()\r\n        socketService.terminate()\r\n        this.props.cleanBoard()\r\n        this.eventBusShowGroupMenuTerminate()\r\n        // this.props.board = null\r\n    }\r\n\r\n    updateBoard = (board, isRenderSocket = false) => {\r\n        console.log('here', board.groups)\r\n        this.props.saveBoard(board, isRenderSocket)\r\n    }\r\n\r\n    loadBoard = async () => {\r\n        const { boardId } = this.props.match.params\r\n        await this.props.loadBoard(boardId)\r\n        socketService.emit('set label', boardId)\r\n    }\r\n\r\n    onAddGroup = async (group) => {\r\n        const { board } = this.props\r\n        const copyBoard = { ...board }\r\n        copyBoard.groups.push(group)\r\n        await this.props.saveBoard(copyBoard)\r\n\r\n        // socketService.emit('group added', board)\r\n    }\r\n\r\n    onRemoveLabel = async (label) => {\r\n        const { board } = this.props\r\n        const copyBoard = { ...board }\r\n        // const labels = [...copyBoard.labels]\r\n        const idx = copyBoard.labels.findIndex((currLabel) => currLabel.id === label.id)\r\n        copyBoard.labels.splice(idx, 1)\r\n\r\n        // copyBoard.labels = [...labels]\r\n        await this.props.saveBoard(copyBoard)\r\n    }\r\n\r\n    onAddLabel = async (label) => {\r\n        const { board } = this.props\r\n        let updatedLabels;\r\n        let isUpdate;\r\n\r\n        if (board.labels) {\r\n            isUpdate = board.labels.find((currLabel) => currLabel.id === label.id)\r\n            if (isUpdate) {\r\n                updatedLabels = board.labels.map((currLabel) => currLabel.id === label.id ? label : currLabel)\r\n            } else {\r\n                updatedLabels = [...board.labels, label]\r\n            }\r\n        } else {\r\n            updatedLabels = new Array(label)\r\n        }\r\n\r\n        board.labels = [...updatedLabels]\r\n        await this.props.saveBoard(board)\r\n    }\r\n\r\n    onDragCard = async (sourceGroup = null, destinationGroup = null) => {\r\n        const { board } = this.props\r\n        const copyBoard = { ...board }\r\n\r\n        if (sourceGroup && destinationGroup) {\r\n            if (sourceGroup.title !== destinationGroup.title) {\r\n                var activity = activityService.createActivity(this.props.loggedInUser, 'moved card ', null, sourceGroup, ' to', destinationGroup)\r\n                copyBoard.activities ? copyBoard.activities.unshift(activity) : copyBoard.activities = new Array(activity)\r\n            }\r\n        }\r\n\r\n        await this.props.saveBoard(copyBoard)\r\n        // socketService.emit('card dragged', board) \r\n    }\r\n\r\n    onAddCard = async (card, groupId) => {\r\n        const { board } = this.props\r\n        const copyBoard = { ...board }\r\n\r\n        const groupIdx = await boardService.getGroupIdxById(board._id, groupId)\r\n        copyBoard.groups[groupIdx].cards.push(card)\r\n\r\n        const activity = activityService.createActivity(this.props.loggedInUser, 'added card ', card, copyBoard.groups[groupIdx], 'to')\r\n        copyBoard.activities ? copyBoard.activities.unshift(activity) : copyBoard.activities = new Array(activity)\r\n\r\n        await this.props.saveBoard(copyBoard)\r\n\r\n        // socketService.emit('card added', board)\r\n    }\r\n\r\n    onDragEnd = (result) => {\r\n        const { destination, source, draggableId, type } = result\r\n        const { groups } = this.props.board\r\n        if (!destination) return\r\n        if (type === 'group') {\r\n            const dragGroup = groups.find(group => group.id === draggableId)\r\n            groups.splice(source.index, 1)\r\n            groups.splice(destination.index, 0, dragGroup)\r\n            this.onDragCard()\r\n            return\r\n        }\r\n        const sourceGroup = groups.find(group => group.id === source.droppableId)\r\n        const destinationGroup = groups.find(group => group.id === destination.droppableId)\r\n        const draggingCard = sourceGroup.cards.find(card => card.id === draggableId)\r\n        sourceGroup.cards.splice(source.index, 1)\r\n        destinationGroup.cards.splice(destination.index, 0, draggingCard)\r\n        this.onDragCard(sourceGroup, destinationGroup)\r\n    }\r\n\r\n    toggleDetails = () => {\r\n        this.setState({ isDetailsShown: !this.state.isDetailsShown })\r\n    }\r\n    onScroll = (ev, scrolltoleft = 0) => {\r\n\r\n        if (!scrolltoleft) return\r\n        const scrollLeft = this.refBoard.current.scrollLeft\r\n        this.setState({\r\n            scrollLeft: scrollLeft\r\n        }, () => {\r\n            if (scrolltoleft)\r\n                this.refBoard.current.scrollLeft += scrolltoleft\r\n        })\r\n    }\r\n    showPreviewCardDetails = (pos) => {\r\n        this.setState({\r\n            userClicked: {\r\n                x: pos?.newClientPos.x,\r\n                y: pos?.newClientPos.y\r\n            },\r\n            isPreviewDetailsShown: !this.state.isPreviewDetailsShown\r\n        })\r\n    }\r\n\r\n    showGroupMenu = (ev) => {\r\n        // console.log(ev);\r\n        this.setState({\r\n            userClicked: { x: ev?.clientX, y: ev?.clientY },\r\n            isGroupMenuShown: !this.state.isGroupMenuShown\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { board } = this.props\r\n        console.log('want to check if a new board is add', board);\r\n        if (!board) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={400} width={400} timeout={3000} /></div>\r\n        let { isDetailsShown, isPreviewDetailsShown, userClicked, isGroupMenuShown } = this.state\r\n        // socketService.emit('set label', this.props.board._id) // was here\r\n        return (\r\n            < >\r\n                {this.props.currCard && isDetailsShown &&\r\n                    <>\r\n                        {/* <div className=\"modal-cover\" onClick={this.toggleDetails}> </div> */}\r\n                        <CardDetails card={this.props.currCard} group={this.props.currGroup} toggleDetails={this.toggleDetails} />\r\n                    </>}\r\n\r\n                {isGroupMenuShown && <GroupMenu board={board} showGroupMenu={this.showGroupMenu} userClicked={userClicked} group={this.props.currGroup} />}\r\n                {isPreviewDetailsShown && <CardPreviewDetails board={board} showPreviewCardDetails={this.showPreviewCardDetails} userClicked={userClicked} card={this.props.currCard} group={this.props.currGroup} />}\r\n                <BoardHeader title={board.title} members={board.members} onAddGroup={this.onAddGroup} />\r\n                <section className=\"board-container\" ref={this.refBoard} onScroll={this.onScroll}>\r\n                    <DragDropContext onDragEnd={this.onDragEnd} >\r\n                        <Droppable droppableId=\"app\" type=\"group\" direction=\"horizontal\" >\r\n                            {(provided) => (\r\n                                <div style={{ width: (board.groups.length) * 287 }} ref={provided.innerRef} {...provided.droppableProps}>\r\n                                    <GroupList updateBoard={this.updateBoard} groups={board.groups} onAddCard={this.onAddCard} onAddGroup={this.onAddGroup} onScroll={this.onScroll} />\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                    </DragDropContext>\r\n                </section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        board: state.boardModule.currBoard,\r\n        currCard: state.cardModule.currCard,\r\n        currGroup: state.cardModule.currGroup,\r\n        loggedInUser: state.userModule.loggedInUser\r\n        // filterBy: state.boardModule.filterBy,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    saveBoard,\r\n    cleanBoard\r\n}\r\n\r\nexport const BoardApp = connect(mapStateToProps, mapDispatchToProps)(_BoardApp);\r\n","import { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../store/actions/userAction.js'\r\n\r\nexport class _Login extends Component {\r\n  state = {\r\n    user: {\r\n      username: '',\r\n      password: '',\r\n    },\r\n    err: ''\r\n  }\r\n  handleChange = ({ target }) => {\r\n    const field = target.name\r\n    const value = (target.type === 'number') ? +target.value : target.value\r\n\r\n    this.setState(prevState => ({\r\n      user: {\r\n        ...prevState.user,\r\n        [field]: value\r\n      }\r\n    }))\r\n  }\r\n  onLogin = async (ev) => {\r\n    console.log(ev);\r\n    ev.preventDefault()\r\n    try {\r\n      ev.preventDefault()\r\n      await this.props.login(this.state.user)\r\n      console.log(this.props.loggedInUser);\r\n      if (this.props.loggedInUser) this.props.history.push('/boards')\r\n    } catch (err) {\r\n      ev.preventDefault()\r\n      this.props.history.push('/login')\r\n      console.log('login', err);\r\n      this.setState({ err: 'no user' })\r\n    }\r\n  }\r\n  render() {\r\n    const { user, err } = this.state\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\" >\r\n        <CssBaseline />\r\n        <div style={{\r\n          marginTop: '10px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}>\r\n          <Avatar style={{\r\n            margin: '10px',\r\n            backgroundColor: 'blue',\r\n          }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h2\" variant=\"h5\">\r\n            Login\r\n        </Typography>\r\n          <div className=\"err\">{err}</div>\r\n          <form style={{\r\n            width: '100%',\r\n            marginTop: '5px'\r\n          }} >\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"Username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              autoFocus\r\n              value={user.username}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={user.password}\r\n              onChange={this.handleChange}\r\n            />\r\n            {err && <span>err</span>}\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginTop: '10px' }}\r\n              onClick={this.onLogin}\r\n            >\r\n              Login\r\n          </Button>\r\n            <Grid container>\r\n              <Grid item xs style={{ marginTop: '10px' }}>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n              </Link>\r\n              </Grid>\r\n              <Grid item style={{ marginTop: '10px' }}>\r\n                <Link href=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n\r\n        </Box>\r\n      </Container >\r\n    );\r\n  }\r\n}\r\nconst mapGlobalStateToProps = (state) => {\r\n\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  login\r\n}\r\nexport const Login = connect(mapGlobalStateToProps, mapDispatchToProps)(_Login)","import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { TextField } from '@material-ui/core';\r\nimport { login } from '../store/actions/userAction.js'\r\nimport { connect } from 'react-redux'\r\nclass _Login1 extends Component {\r\n  state = {\r\n    user: {\r\n      username: '',\r\n      password: '',\r\n    },\r\n    err: ''\r\n  }\r\n  handleChange = ({ target }) => {\r\n    const field = target.name\r\n    const value = target.value\r\n\r\n    this.setState(prevState => ({\r\n      user: {\r\n        ...prevState.user,\r\n        [field]: value\r\n      }\r\n    }))\r\n  }\r\n  // validate(values) {\r\n  //   console.log(values);\r\n  //   const errors = {};\r\n  //   if (!values.email) {\r\n  //     errors.email = 'Required';\r\n  //   } else if (\r\n  //     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n  //   ) {\r\n  //     errors.email = 'Invalid email address';\r\n  //   }\r\n  //   if (values.password.length < 5) {\r\n  //     errors.password = 'Password is too short!'\r\n  //   }\r\n  //   return errors;\r\n  // }\r\n  // onSubmitForm(values, { setSubmitting }) {\r\n  //   setTimeout(() => {\r\n  //     alert(JSON.stringify(values, null, 2));\r\n  //     setSubmitting(false);\r\n  //   }, 400);\r\n  // }\r\n  onLogin = async (ev) => {\r\n    try {\r\n      await this.props.login(this.state.user)\r\n      console.log(this.props.loggedInUser);\r\n      if (this.props.loggedInUser) this.props.history.push('/boards')\r\n    } catch (err) {\r\n      // this.props.history.push('/login1')\r\n      console.log('login', err);\r\n      this.setState({ err: 'no user' })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Any place in your app!</h1>\r\n        <Formik\r\n          initialValues={{ username: '', password: '' }}\r\n          // validate={this.validate}\r\n          onSubmit={this.onLogin}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <Form>\r\n              <Field type=\"text\" name=\"username\" required value={this.state.user.username} onChange={this.handleChange} placeholder=\"username\" as={TextField} />\r\n              <ErrorMessage name=\"username\" className=\"err-msg\" />\r\n              <Field type=\"password\" required placeholder=\"password\" value={this.state.user.password} onChange={this.handleChange} as={TextField} name=\"password\" />\r\n              <ErrorMessage name=\"password\" className=\"err-msg\" component=\"span\" />\r\n              <button type=\"submit\" disabled={isSubmitting}>\r\n                Submit\r\n          </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div >\r\n    )\r\n  }\r\n}\r\nconst mapGlobalStateToProps = (state) => {\r\n\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  login\r\n}\r\nexport const Login1 = connect(mapGlobalStateToProps, mapDispatchToProps)(_Login1)","import { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from 'react-redux'\r\nimport { signup } from '../store/actions/userAction.js';\r\n\r\n\r\nclass _Signup extends Component {\r\n  state = {\r\n    user: {\r\n      username: '',\r\n      fullname: '',\r\n      password: ''\r\n    },\r\n    err: {\r\n      txt: ''\r\n    }\r\n  }\r\n  handleChange = ({ target }) => {\r\n    const field = target.name\r\n    const value = (target.type === 'number') ? +target.value : target.value\r\n    this.setState(prevState => ({\r\n      user: {\r\n        ...prevState.user,\r\n        [field]: value\r\n      }\r\n    }))\r\n  }\r\n  onSignUpUser = async (ev) => {\r\n    ev.preventDefault()\r\n    try {\r\n      await this.props.signup(this.state.user)\r\n      this.props.history.push('/boards')\r\n    } catch (err) {\r\n      this.setState({ err })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user, err } = this.state\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\" >\r\n        <CssBaseline />\r\n        <div style={{\r\n          marginTop: '10px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}>\r\n          <Avatar style={{\r\n            margin: '10px',\r\n            backgroundColor: 'blue',\r\n          }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h2\" variant=\"h5\">\r\n            Sign Up\r\n        </Typography>\r\n          <div className=\"err\">{err && err.txt}</div>\r\n          <form onSubmit={this.onSignUpUser} style={{\r\n            width: '100%',\r\n            marginTop: '5px'\r\n          }} >\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"Username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              autoFocus\r\n              value={user.username}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"fullname\"\r\n              label=\"Full Name\"\r\n              name=\"fullname\"\r\n              value={user.fullname}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"filled\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={user.password}\r\n              onChange={this.handleChange}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ marginTop: '10px' }}\r\n            >\r\n              Sign Up\r\n          </Button>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n\r\n        </Box>\r\n      </Container >\r\n    );\r\n  }\r\n\r\n}\r\nconst mapGlobalStateToProps = (state) => {\r\n\r\n  return {\r\n    users: state.userModule.users\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  signup\r\n}\r\nexport const Signup = connect(mapGlobalStateToProps, mapDispatchToProps)(_Signup)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// eslint-disable-next-line\r\nimport { Polar, Doughnut, Bar } from 'react-chartjs-2'\r\nimport { loadBoard } from '../store/actions/boardAction.js'\r\nimport { loadUsers } from '../store/actions/userAction.js'\r\nimport { utilService } from '../services/utilService.js'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nexport class _DashBoard extends Component {\r\n  state = {\r\n    board: null\r\n  }\r\n  async componentDidMount() {\r\n    const board = this.props.board\r\n    if (!board) {\r\n      let boardId = this.props.match.params.boardId\r\n      await this.loadBoard(boardId)\r\n      console.log(boardId);\r\n      this.setState({ board: this.props.board }, () => console.log(this.state.board))\r\n    }\r\n    this.setState({ board: this.props.board })\r\n\r\n  }\r\n\r\n  loadBoard = async (boardId) => {\r\n    await this.props.loadBoard(boardId)\r\n  }\r\n\r\n  showTaskPerGroup = () => {\r\n    const mapGroup = this.state.board.groups.reduce((acc, group) => {\r\n      acc[group.title] = group.cards.length\r\n      return acc\r\n    }, {})\r\n    console.log(mapGroup);\r\n    console.log(Object.keys(mapGroup).map(title => title));\r\n    console.log(Object.values(mapGroup).map(title => title));\r\n    return {\r\n\r\n      labels:\r\n        Object.keys(mapGroup).map(title => title),\r\n      datasets: [{\r\n        data: Object.values(mapGroup).map(title => title),\r\n        backgroundColor: [\r\n          ...Object.keys(mapGroup).map(() => utilService.getRandomColor())\r\n        ],\r\n        hoverBackgroundColor: [\r\n          ...Object.keys(mapGroup).map(() => '#FFFFFF')\r\n        ]\r\n      }]\r\n    };\r\n\r\n  }\r\n\r\n  showTaskPerLabel = () => {\r\n    const mapLabels = this.state.board.groups.reduce((acc, group) => {\r\n      group.cards.forEach(card => {\r\n        card.labels.forEach(label => {\r\n          if (!acc[label.title]) acc[label.title] = 1\r\n          else acc[label.title] += 1\r\n        })\r\n\r\n      })\r\n      return acc\r\n    }, {})\r\n    return {\r\n      labels:\r\n        [...Object.keys(mapLabels).map(title => title)],\r\n      datasets: [{\r\n        data: [...Object.values(mapLabels).map(title => title)],\r\n        backgroundColor: [\r\n          ...Object.keys(mapLabels).map(() => utilService.getRandomColor())\r\n\r\n        ],\r\n        hoverBackgroundColor: [\r\n          ...Object.keys(mapLabels).map(() => '#FFFFFF')\r\n        ]\r\n      }]\r\n    };\r\n  }\r\n\r\n  showTotalCards = () => {\r\n    let cardNum = 0\r\n    let cardUnassignedNum = 0\r\n    this.state.board.groups.forEach(group => {\r\n      group.cards.forEach(card => {\r\n        if (card.members?.length > 0) {\r\n          cardUnassignedNum++\r\n        }\r\n        cardNum++\r\n      })\r\n    })\r\n    cardUnassignedNum = cardNum - cardUnassignedNum\r\n    return { cardNum, cardUnassignedNum }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.board) return <div className=\"loader-wrapper\"><Loader className=\"loader\" type=\"TailSpin\" color=\"gray\" height={400} width={400} timeout={3000} /></div>\r\n    return (\r\n      <div className=\"statistics-page\">\r\n        <h1>Hello Statisctis</h1>\r\n        <header className=\"dashboard-header flex\">\r\n          <div className=\"dashboard-preview flex column\"><span>{this.showTotalCards().cardNum}</span> <span> TOTAL CARDS</span></div>\r\n          <div className=\"dashboard-preview flex column\"><span>{this.showTotalCards().cardUnassignedNum}</span> <span> UNASSIGNED CARDS</span></div>\r\n          <div className=\"dashboard-preview flex column\"><span>0</span> <span> ADDED TODAY</span></div>\r\n        </header>\r\n        <div className=\"dashboard-content flex\" style={{ margin: '0 auto', height: '600px', width: '600px', flexWrap: 'wrap' }}>\r\n          {/* <Polar className=\"test\" data={this.showStatistics()} /> */}\r\n          <Bar options={{\r\n            scales: {\r\n              yAxes: [{\r\n                stacked: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"rgba(255,255,255,0.8)\"\r\n                }\r\n              }],\r\n              xAxes: [{\r\n                gridLines: {\r\n                  display: false\r\n                }\r\n              }]\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Task Per Group',\r\n              fontSize: 25\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: 'right'\r\n            },\r\n            labels: {\r\n              fontColor: 'rgb(0, 0, 0)'\r\n            }\r\n          }} className=\"test\" data={this.showTaskPerGroup()} />\r\n          <Doughnut options={{\r\n            scales: {\r\n              yAxes: [{\r\n                stacked: true,\r\n                gridLines: {\r\n                  display: true,\r\n                  color: \"rgba(255,255,255,0.8)\"\r\n                }\r\n              }],\r\n              xAxes: [{\r\n                gridLines: {\r\n                  display: false\r\n                }\r\n              }]\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Task Per Label',\r\n              fontSize: 25\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: 'right'\r\n            }\r\n          }} className=\"test\" data={this.showTaskPerLabel()} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  board: state.boardModule.currBoard,\r\n  users: state.userModule.users\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  loadUsers,\r\n  loadBoard\r\n}\r\n\r\nexport const DashBoard = connect(mapStateToProps, mapDispatchToProps)(_DashBoard)\r\n","import { connect } from 'react-redux'\r\nimport { AppHeader } from './cmps/AppHeader'\r\nimport { Home } from './pages/Home'\r\nimport { Boards } from './pages/Boards'\r\nimport { BoardApp } from './pages/BoardApp'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { saveBoard } from './store/actions/boardAction'\r\nimport { Login } from './pages/Login'\r\nimport { Login1 } from './pages/Login1'\r\nimport { Signup } from './pages/Signup'\r\nimport { DashBoard } from './pages/DashBoard'\r\n\r\nexport function _App({ currBoard }) {\r\n  return (\r\n    <div className=\"App\" style={{ backgroundImage: `url(${(currBoard) ? currBoard.style.backgroundImage : 'white'})` }}>\r\n      <AppHeader />\r\n      <Switch>\r\n\r\n        <Route component={Login1} path=\"/login1\" />\r\n        <Route component={Login} path=\"/login\" />\r\n        <Route component={Signup} path=\"/signup\" />\r\n        <Route component={DashBoard} path=\"/board/:boardId/dashboard\" />\r\n        <Route component={BoardApp} path=\"/board/:boardId\" />\r\n        <Route component={Boards} path=\"/boards\" />\r\n        <Route component={Home} path=\"/\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currBoard: state.boardModule.currBoard\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  saveBoard,\r\n\r\n}\r\n\r\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App)\r\n\r\n\r\n","const initialState = {\r\n  currBoard: null,\r\n  boards: [],\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return { ...state, boards: action.boards }\r\n    case 'SET_BOARD':\r\n      return { ...state, currBoard: { ...action.board } }\r\n    case 'UPDATE_BOARD':\r\n      return { ...state, currBoard: action.board }\r\n    case 'CLEAN_BOARD':\r\n      return { ...state, currBoard: null }\r\n    case 'ADD_BOARD':\r\n      return { ...state, boards: [...state.boards, action.board], currBoard: { ...action.board } }\r\n    case 'SAVE_BOARD':\r\n      return {\r\n        ...state, boards: state.boards.map(board => {\r\n          if (board._id === action.board._id) return action.board\r\n          else return board\r\n        })\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n  currCard: null,\r\n  currGroup: null,\r\n  isAddOpen: false\r\n}\r\n\r\nexport function cardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_CARD':\r\n      return { ...state, currCard: { ...action.card } }\r\n    case 'SET_GROUP':\r\n      return { ...state, currGroup: { ...action.group } }\r\n    case 'CLEAR_STATE':\r\n      return { ...state, currGroup: action.clear, currCard: action.clear }\r\n    case 'TOGGLE_ADD_CARD':\r\n      return { ...state, isAddOpen: action.isAddOpen }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// case 'ADD_LABEL':\r\n//   return { ...state, currCard: { ...state.currCard, labels: [action.label, ...state.currCard.labels] } }","\r\nconst initialState = {\r\n  // loggedInUser: null,\r\n  loggedInUser: JSON.parse(sessionStorage.getItem('loggedinUser')) || null,\r\n  users: [],\r\n  filterBy: { fullname: '' }\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'LOGIN':\r\n      return { ...state, loggedInUser: { ...action.user } }\r\n    case 'LOGOUT':\r\n      return { ...state, loggedInUser: null }\r\n    case 'SIGNUP':\r\n      return { ...state, users: [...state.users, action.user], loggedInUser: action.user }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\n\r\n\r\nimport { boardReducer } from './reducers/boardReducer.js';\r\nimport { cardReducer } from './reducers/cardReducer.js';\r\nimport { userReducer } from './reducers/userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    boardModule: boardReducer,\r\n    cardModule: cardReducer,\r\n    userModule: userReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\nwindow.theStore = store;\r\nstore.subscribe(() => {\r\n    console.log('Global State is:', store.getState())\r\n})","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App.jsx';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from '../src/store/store';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './assets/styles/main.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}